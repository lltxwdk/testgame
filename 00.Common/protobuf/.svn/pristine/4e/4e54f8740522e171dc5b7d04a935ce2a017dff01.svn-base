// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mc_gw.proto

#ifndef PROTOBUF_mc_5fgw_2eproto__INCLUDED
#define PROTOBUF_mc_5fgw_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SRMsgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mc_5fgw_2eproto();
void protobuf_AssignDesc_mc_5fgw_2eproto();
void protobuf_ShutdownFile_mc_5fgw_2eproto();

class CmdGWSyncMonitorInfo;
class CmdGWQueryMonitorRec;
class CmdGWQueryMonitorRec_TimeInfo;
class CmdGWQueryMonitorRec_MonitorInfo;
class CmdGWInvitParticipants;
class CmdGWInvitParticipants_TimeInfo;
class CmdGWInvitParticipants_ParticipantInfo;
class IndMCHeartBeatToGW;
class IndGWHeartBeatToMC;
class IndGWQueryMonitorRecToMC;
class IndGWQueryMonitorRecToMC_TimeInfo;
class IndGWQueryMonitorRecToMC_MonitorInfo;
class IndTerStatisticsInfoFromGW;
class IndTerStatisticsInfoFromGW_FrameInfo;
class IndTerStatisticsInfoFromGW_AdvanceInfo;
class IndTerStatisticsInfoFromGW_BaseInfo;
class IndTerStatisticsInfoFromGW_AudioInfo;
class IndTerStatisticsInfoFromGW_VideoInfo;
class IndTerStatisticsInfoFromGW_XfeInfo;
class IndTerStatisticsInfoFromGW_TerStatisticsInfo;

// ===================================================================

class CmdGWSyncMonitorInfo : public ::google::protobuf::Message {
 public:
  CmdGWSyncMonitorInfo();
  virtual ~CmdGWSyncMonitorInfo();

  CmdGWSyncMonitorInfo(const CmdGWSyncMonitorInfo& from);

  inline CmdGWSyncMonitorInfo& operator=(const CmdGWSyncMonitorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWSyncMonitorInfo& default_instance();

  void Swap(CmdGWSyncMonitorInfo* other);

  // implements Message ----------------------------------------------

  CmdGWSyncMonitorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWSyncMonitorInfo& from);
  void MergeFrom(const CmdGWSyncMonitorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 2;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 2;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // optional string dsturl = 3;
  inline bool has_dsturl() const;
  inline void clear_dsturl();
  static const int kDsturlFieldNumber = 3;
  inline const ::std::string& dsturl() const;
  inline void set_dsturl(const ::std::string& value);
  inline void set_dsturl(const char* value);
  inline void set_dsturl(const char* value, size_t size);
  inline ::std::string* mutable_dsturl();
  inline ::std::string* release_dsturl();
  inline void set_allocated_dsturl(::std::string* dsturl);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWSyncMonitorInfo)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();
  inline void set_has_dsturl();
  inline void clear_has_dsturl();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  ::std::string* dsturl_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWSyncMonitorInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdGWQueryMonitorRec_TimeInfo : public ::google::protobuf::Message {
 public:
  CmdGWQueryMonitorRec_TimeInfo();
  virtual ~CmdGWQueryMonitorRec_TimeInfo();

  CmdGWQueryMonitorRec_TimeInfo(const CmdGWQueryMonitorRec_TimeInfo& from);

  inline CmdGWQueryMonitorRec_TimeInfo& operator=(const CmdGWQueryMonitorRec_TimeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWQueryMonitorRec_TimeInfo& default_instance();

  void Swap(CmdGWQueryMonitorRec_TimeInfo* other);

  // implements Message ----------------------------------------------

  CmdGWQueryMonitorRec_TimeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWQueryMonitorRec_TimeInfo& from);
  void MergeFrom(const CmdGWQueryMonitorRec_TimeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string starttime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 1;
  inline const ::std::string& starttime() const;
  inline void set_starttime(const ::std::string& value);
  inline void set_starttime(const char* value);
  inline void set_starttime(const char* value, size_t size);
  inline ::std::string* mutable_starttime();
  inline ::std::string* release_starttime();
  inline void set_allocated_starttime(::std::string* starttime);

  // optional string endtime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWQueryMonitorRec.TimeInfo)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* starttime_;
  ::std::string* endtime_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWQueryMonitorRec_TimeInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdGWQueryMonitorRec_MonitorInfo : public ::google::protobuf::Message {
 public:
  CmdGWQueryMonitorRec_MonitorInfo();
  virtual ~CmdGWQueryMonitorRec_MonitorInfo();

  CmdGWQueryMonitorRec_MonitorInfo(const CmdGWQueryMonitorRec_MonitorInfo& from);

  inline CmdGWQueryMonitorRec_MonitorInfo& operator=(const CmdGWQueryMonitorRec_MonitorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWQueryMonitorRec_MonitorInfo& default_instance();

  void Swap(CmdGWQueryMonitorRec_MonitorInfo* other);

  // implements Message ----------------------------------------------

  CmdGWQueryMonitorRec_MonitorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWQueryMonitorRec_MonitorInfo& from);
  void MergeFrom(const CmdGWQueryMonitorRec_MonitorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string devicecode = 1;
  inline bool has_devicecode() const;
  inline void clear_devicecode();
  static const int kDevicecodeFieldNumber = 1;
  inline const ::std::string& devicecode() const;
  inline void set_devicecode(const ::std::string& value);
  inline void set_devicecode(const char* value);
  inline void set_devicecode(const char* value, size_t size);
  inline ::std::string* mutable_devicecode();
  inline ::std::string* release_devicecode();
  inline void set_allocated_devicecode(::std::string* devicecode);

  // optional .SRMsgs.CmdGWQueryMonitorRec.TimeInfo totaltimespan = 2;
  inline bool has_totaltimespan() const;
  inline void clear_totaltimespan();
  static const int kTotaltimespanFieldNumber = 2;
  inline const ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo& totaltimespan() const;
  inline ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* mutable_totaltimespan();
  inline ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* release_totaltimespan();
  inline void set_allocated_totaltimespan(::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* totaltimespan);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo)
 private:
  inline void set_has_devicecode();
  inline void clear_has_devicecode();
  inline void set_has_totaltimespan();
  inline void clear_has_totaltimespan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* devicecode_;
  ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* totaltimespan_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWQueryMonitorRec_MonitorInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdGWQueryMonitorRec : public ::google::protobuf::Message {
 public:
  CmdGWQueryMonitorRec();
  virtual ~CmdGWQueryMonitorRec();

  CmdGWQueryMonitorRec(const CmdGWQueryMonitorRec& from);

  inline CmdGWQueryMonitorRec& operator=(const CmdGWQueryMonitorRec& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWQueryMonitorRec& default_instance();

  void Swap(CmdGWQueryMonitorRec* other);

  // implements Message ----------------------------------------------

  CmdGWQueryMonitorRec* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWQueryMonitorRec& from);
  void MergeFrom(const CmdGWQueryMonitorRec& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdGWQueryMonitorRec_TimeInfo TimeInfo;
  typedef CmdGWQueryMonitorRec_MonitorInfo MonitorInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 3;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 3;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdGWQueryMonitorRec.MonitorInfo queryinfos = 4;
  inline int queryinfos_size() const;
  inline void clear_queryinfos();
  static const int kQueryinfosFieldNumber = 4;
  inline const ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo& queryinfos(int index) const;
  inline ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo* mutable_queryinfos(int index);
  inline ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo* add_queryinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo >&
      queryinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo >*
      mutable_queryinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWQueryMonitorRec)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo > queryinfos_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWQueryMonitorRec* default_instance_;
};
// -------------------------------------------------------------------

class CmdGWInvitParticipants_TimeInfo : public ::google::protobuf::Message {
 public:
  CmdGWInvitParticipants_TimeInfo();
  virtual ~CmdGWInvitParticipants_TimeInfo();

  CmdGWInvitParticipants_TimeInfo(const CmdGWInvitParticipants_TimeInfo& from);

  inline CmdGWInvitParticipants_TimeInfo& operator=(const CmdGWInvitParticipants_TimeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWInvitParticipants_TimeInfo& default_instance();

  void Swap(CmdGWInvitParticipants_TimeInfo* other);

  // implements Message ----------------------------------------------

  CmdGWInvitParticipants_TimeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWInvitParticipants_TimeInfo& from);
  void MergeFrom(const CmdGWInvitParticipants_TimeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string starttime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 1;
  inline const ::std::string& starttime() const;
  inline void set_starttime(const ::std::string& value);
  inline void set_starttime(const char* value);
  inline void set_starttime(const char* value, size_t size);
  inline ::std::string* mutable_starttime();
  inline ::std::string* release_starttime();
  inline void set_allocated_starttime(::std::string* starttime);

  // optional string endtime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWInvitParticipants.TimeInfo)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* starttime_;
  ::std::string* endtime_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWInvitParticipants_TimeInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdGWInvitParticipants_ParticipantInfo : public ::google::protobuf::Message {
 public:
  CmdGWInvitParticipants_ParticipantInfo();
  virtual ~CmdGWInvitParticipants_ParticipantInfo();

  CmdGWInvitParticipants_ParticipantInfo(const CmdGWInvitParticipants_ParticipantInfo& from);

  inline CmdGWInvitParticipants_ParticipantInfo& operator=(const CmdGWInvitParticipants_ParticipantInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWInvitParticipants_ParticipantInfo& default_instance();

  void Swap(CmdGWInvitParticipants_ParticipantInfo* other);

  // implements Message ----------------------------------------------

  CmdGWInvitParticipants_ParticipantInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWInvitParticipants_ParticipantInfo& from);
  void MergeFrom(const CmdGWInvitParticipants_ParticipantInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 psuid = 1;
  inline bool has_psuid() const;
  inline void clear_psuid();
  static const int kPsuidFieldNumber = 1;
  inline ::google::protobuf::uint32 psuid() const;
  inline void set_psuid(::google::protobuf::uint32 value);

  // optional string nickname = 2;
  inline bool has_nickname() const;
  inline void clear_nickname();
  static const int kNicknameFieldNumber = 2;
  inline const ::std::string& nickname() const;
  inline void set_nickname(const ::std::string& value);
  inline void set_nickname(const char* value);
  inline void set_nickname(const char* value, size_t size);
  inline ::std::string* mutable_nickname();
  inline ::std::string* release_nickname();
  inline void set_allocated_nickname(::std::string* nickname);

  // optional string ip = 3;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 3;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  inline void set_allocated_ip(::std::string* ip);

  // optional uint32 protocoltype = 4;
  inline bool has_protocoltype() const;
  inline void clear_protocoltype();
  static const int kProtocoltypeFieldNumber = 4;
  inline ::google::protobuf::uint32 protocoltype() const;
  inline void set_protocoltype(::google::protobuf::uint32 value);

  // optional uint32 bandwidth = 5;
  inline bool has_bandwidth() const;
  inline void clear_bandwidth();
  static const int kBandwidthFieldNumber = 5;
  inline ::google::protobuf::uint32 bandwidth() const;
  inline void set_bandwidth(::google::protobuf::uint32 value);

  // optional uint32 devicetype = 6;
  inline bool has_devicetype() const;
  inline void clear_devicetype();
  static const int kDevicetypeFieldNumber = 6;
  inline ::google::protobuf::uint32 devicetype() const;
  inline void set_devicetype(::google::protobuf::uint32 value);

  // optional string calloption = 7;
  inline bool has_calloption() const;
  inline void clear_calloption();
  static const int kCalloptionFieldNumber = 7;
  inline const ::std::string& calloption() const;
  inline void set_calloption(const ::std::string& value);
  inline void set_calloption(const char* value);
  inline void set_calloption(const char* value, size_t size);
  inline ::std::string* mutable_calloption();
  inline ::std::string* release_calloption();
  inline void set_allocated_calloption(::std::string* calloption);

  // optional string devicecode = 8;
  inline bool has_devicecode() const;
  inline void clear_devicecode();
  static const int kDevicecodeFieldNumber = 8;
  inline const ::std::string& devicecode() const;
  inline void set_devicecode(const ::std::string& value);
  inline void set_devicecode(const char* value);
  inline void set_devicecode(const char* value, size_t size);
  inline ::std::string* mutable_devicecode();
  inline ::std::string* release_devicecode();
  inline void set_allocated_devicecode(::std::string* devicecode);

  // optional uint32 usertype = 9;
  inline bool has_usertype() const;
  inline void clear_usertype();
  static const int kUsertypeFieldNumber = 9;
  inline ::google::protobuf::uint32 usertype() const;
  inline void set_usertype(::google::protobuf::uint32 value);

  // optional .SRMsgs.CmdGWInvitParticipants.TimeInfo totaltimespan = 10;
  inline bool has_totaltimespan() const;
  inline void clear_totaltimespan();
  static const int kTotaltimespanFieldNumber = 10;
  inline const ::SRMsgs::CmdGWInvitParticipants_TimeInfo& totaltimespan() const;
  inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* mutable_totaltimespan();
  inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* release_totaltimespan();
  inline void set_allocated_totaltimespan(::SRMsgs::CmdGWInvitParticipants_TimeInfo* totaltimespan);

  // repeated .SRMsgs.CmdGWInvitParticipants.TimeInfo subtimespans = 11;
  inline int subtimespans_size() const;
  inline void clear_subtimespans();
  static const int kSubtimespansFieldNumber = 11;
  inline const ::SRMsgs::CmdGWInvitParticipants_TimeInfo& subtimespans(int index) const;
  inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* mutable_subtimespans(int index);
  inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* add_subtimespans();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_TimeInfo >&
      subtimespans() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_TimeInfo >*
      mutable_subtimespans();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWInvitParticipants.ParticipantInfo)
 private:
  inline void set_has_psuid();
  inline void clear_has_psuid();
  inline void set_has_nickname();
  inline void clear_has_nickname();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_protocoltype();
  inline void clear_has_protocoltype();
  inline void set_has_bandwidth();
  inline void clear_has_bandwidth();
  inline void set_has_devicetype();
  inline void clear_has_devicetype();
  inline void set_has_calloption();
  inline void clear_has_calloption();
  inline void set_has_devicecode();
  inline void clear_has_devicecode();
  inline void set_has_usertype();
  inline void clear_has_usertype();
  inline void set_has_totaltimespan();
  inline void clear_has_totaltimespan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* nickname_;
  ::google::protobuf::uint32 psuid_;
  ::google::protobuf::uint32 protocoltype_;
  ::std::string* ip_;
  ::google::protobuf::uint32 bandwidth_;
  ::google::protobuf::uint32 devicetype_;
  ::std::string* calloption_;
  ::std::string* devicecode_;
  ::SRMsgs::CmdGWInvitParticipants_TimeInfo* totaltimespan_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_TimeInfo > subtimespans_;
  ::google::protobuf::uint32 usertype_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWInvitParticipants_ParticipantInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdGWInvitParticipants : public ::google::protobuf::Message {
 public:
  CmdGWInvitParticipants();
  virtual ~CmdGWInvitParticipants();

  CmdGWInvitParticipants(const CmdGWInvitParticipants& from);

  inline CmdGWInvitParticipants& operator=(const CmdGWInvitParticipants& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdGWInvitParticipants& default_instance();

  void Swap(CmdGWInvitParticipants* other);

  // implements Message ----------------------------------------------

  CmdGWInvitParticipants* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdGWInvitParticipants& from);
  void MergeFrom(const CmdGWInvitParticipants& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdGWInvitParticipants_TimeInfo TimeInfo;
  typedef CmdGWInvitParticipants_ParticipantInfo ParticipantInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 3;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 3;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdGWInvitParticipants.ParticipantInfo ivtparticipants = 4;
  inline int ivtparticipants_size() const;
  inline void clear_ivtparticipants();
  static const int kIvtparticipantsFieldNumber = 4;
  inline const ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo& ivtparticipants(int index) const;
  inline ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo* mutable_ivtparticipants(int index);
  inline ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo* add_ivtparticipants();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo >&
      ivtparticipants() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo >*
      mutable_ivtparticipants();

  // optional string confsubject = 5;
  inline bool has_confsubject() const;
  inline void clear_confsubject();
  static const int kConfsubjectFieldNumber = 5;
  inline const ::std::string& confsubject() const;
  inline void set_confsubject(const ::std::string& value);
  inline void set_confsubject(const char* value);
  inline void set_confsubject(const char* value, size_t size);
  inline ::std::string* mutable_confsubject();
  inline ::std::string* release_confsubject();
  inline void set_allocated_confsubject(::std::string* confsubject);

  // optional string confpwd = 6;
  inline bool has_confpwd() const;
  inline void clear_confpwd();
  static const int kConfpwdFieldNumber = 6;
  inline const ::std::string& confpwd() const;
  inline void set_confpwd(const ::std::string& value);
  inline void set_confpwd(const char* value);
  inline void set_confpwd(const char* value, size_t size);
  inline ::std::string* mutable_confpwd();
  inline ::std::string* release_confpwd();
  inline void set_allocated_confpwd(::std::string* confpwd);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdGWInvitParticipants)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();
  inline void set_has_confsubject();
  inline void clear_has_confsubject();
  inline void set_has_confpwd();
  inline void clear_has_confpwd();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo > ivtparticipants_;
  ::std::string* confsubject_;
  ::std::string* confpwd_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static CmdGWInvitParticipants* default_instance_;
};
// -------------------------------------------------------------------

class IndMCHeartBeatToGW : public ::google::protobuf::Message {
 public:
  IndMCHeartBeatToGW();
  virtual ~IndMCHeartBeatToGW();

  IndMCHeartBeatToGW(const IndMCHeartBeatToGW& from);

  inline IndMCHeartBeatToGW& operator=(const IndMCHeartBeatToGW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMCHeartBeatToGW& default_instance();

  void Swap(IndMCHeartBeatToGW* other);

  // implements Message ----------------------------------------------

  IndMCHeartBeatToGW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMCHeartBeatToGW& from);
  void MergeFrom(const IndMCHeartBeatToGW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 2;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 2;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMCHeartBeatToGW)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndMCHeartBeatToGW* default_instance_;
};
// -------------------------------------------------------------------

class IndGWHeartBeatToMC : public ::google::protobuf::Message {
 public:
  IndGWHeartBeatToMC();
  virtual ~IndGWHeartBeatToMC();

  IndGWHeartBeatToMC(const IndGWHeartBeatToMC& from);

  inline IndGWHeartBeatToMC& operator=(const IndGWHeartBeatToMC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndGWHeartBeatToMC& default_instance();

  void Swap(IndGWHeartBeatToMC* other);

  // implements Message ----------------------------------------------

  IndGWHeartBeatToMC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndGWHeartBeatToMC& from);
  void MergeFrom(const IndGWHeartBeatToMC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 2;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 2;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndGWHeartBeatToMC)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndGWHeartBeatToMC* default_instance_;
};
// -------------------------------------------------------------------

class IndGWQueryMonitorRecToMC_TimeInfo : public ::google::protobuf::Message {
 public:
  IndGWQueryMonitorRecToMC_TimeInfo();
  virtual ~IndGWQueryMonitorRecToMC_TimeInfo();

  IndGWQueryMonitorRecToMC_TimeInfo(const IndGWQueryMonitorRecToMC_TimeInfo& from);

  inline IndGWQueryMonitorRecToMC_TimeInfo& operator=(const IndGWQueryMonitorRecToMC_TimeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndGWQueryMonitorRecToMC_TimeInfo& default_instance();

  void Swap(IndGWQueryMonitorRecToMC_TimeInfo* other);

  // implements Message ----------------------------------------------

  IndGWQueryMonitorRecToMC_TimeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndGWQueryMonitorRecToMC_TimeInfo& from);
  void MergeFrom(const IndGWQueryMonitorRecToMC_TimeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string starttime = 1;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 1;
  inline const ::std::string& starttime() const;
  inline void set_starttime(const ::std::string& value);
  inline void set_starttime(const char* value);
  inline void set_starttime(const char* value, size_t size);
  inline ::std::string* mutable_starttime();
  inline ::std::string* release_starttime();
  inline void set_allocated_starttime(::std::string* starttime);

  // optional string endtime = 2;
  inline bool has_endtime() const;
  inline void clear_endtime();
  static const int kEndtimeFieldNumber = 2;
  inline const ::std::string& endtime() const;
  inline void set_endtime(const ::std::string& value);
  inline void set_endtime(const char* value);
  inline void set_endtime(const char* value, size_t size);
  inline ::std::string* mutable_endtime();
  inline ::std::string* release_endtime();
  inline void set_allocated_endtime(::std::string* endtime);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo)
 private:
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_endtime();
  inline void clear_has_endtime();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* starttime_;
  ::std::string* endtime_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndGWQueryMonitorRecToMC_TimeInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndGWQueryMonitorRecToMC_MonitorInfo : public ::google::protobuf::Message {
 public:
  IndGWQueryMonitorRecToMC_MonitorInfo();
  virtual ~IndGWQueryMonitorRecToMC_MonitorInfo();

  IndGWQueryMonitorRecToMC_MonitorInfo(const IndGWQueryMonitorRecToMC_MonitorInfo& from);

  inline IndGWQueryMonitorRecToMC_MonitorInfo& operator=(const IndGWQueryMonitorRecToMC_MonitorInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndGWQueryMonitorRecToMC_MonitorInfo& default_instance();

  void Swap(IndGWQueryMonitorRecToMC_MonitorInfo* other);

  // implements Message ----------------------------------------------

  IndGWQueryMonitorRecToMC_MonitorInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndGWQueryMonitorRecToMC_MonitorInfo& from);
  void MergeFrom(const IndGWQueryMonitorRecToMC_MonitorInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string devicecode = 1;
  inline bool has_devicecode() const;
  inline void clear_devicecode();
  static const int kDevicecodeFieldNumber = 1;
  inline const ::std::string& devicecode() const;
  inline void set_devicecode(const ::std::string& value);
  inline void set_devicecode(const char* value);
  inline void set_devicecode(const char* value, size_t size);
  inline ::std::string* mutable_devicecode();
  inline ::std::string* release_devicecode();
  inline void set_allocated_devicecode(::std::string* devicecode);

  // optional uint32 querystate = 2;
  inline bool has_querystate() const;
  inline void clear_querystate();
  static const int kQuerystateFieldNumber = 2;
  inline ::google::protobuf::uint32 querystate() const;
  inline void set_querystate(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo totaltimespan = 3;
  inline bool has_totaltimespan() const;
  inline void clear_totaltimespan();
  static const int kTotaltimespanFieldNumber = 3;
  inline const ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo& totaltimespan() const;
  inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* mutable_totaltimespan();
  inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* release_totaltimespan();
  inline void set_allocated_totaltimespan(::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* totaltimespan);

  // repeated .SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo subtimespans = 4;
  inline int subtimespans_size() const;
  inline void clear_subtimespans();
  static const int kSubtimespansFieldNumber = 4;
  inline const ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo& subtimespans(int index) const;
  inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* mutable_subtimespans(int index);
  inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* add_subtimespans();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo >&
      subtimespans() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo >*
      mutable_subtimespans();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo)
 private:
  inline void set_has_devicecode();
  inline void clear_has_devicecode();
  inline void set_has_querystate();
  inline void clear_has_querystate();
  inline void set_has_totaltimespan();
  inline void clear_has_totaltimespan();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* devicecode_;
  ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* totaltimespan_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo > subtimespans_;
  ::google::protobuf::uint32 querystate_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndGWQueryMonitorRecToMC_MonitorInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndGWQueryMonitorRecToMC : public ::google::protobuf::Message {
 public:
  IndGWQueryMonitorRecToMC();
  virtual ~IndGWQueryMonitorRecToMC();

  IndGWQueryMonitorRecToMC(const IndGWQueryMonitorRecToMC& from);

  inline IndGWQueryMonitorRecToMC& operator=(const IndGWQueryMonitorRecToMC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndGWQueryMonitorRecToMC& default_instance();

  void Swap(IndGWQueryMonitorRecToMC* other);

  // implements Message ----------------------------------------------

  IndGWQueryMonitorRecToMC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndGWQueryMonitorRecToMC& from);
  void MergeFrom(const IndGWQueryMonitorRecToMC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndGWQueryMonitorRecToMC_TimeInfo TimeInfo;
  typedef IndGWQueryMonitorRecToMC_MonitorInfo MonitorInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 3;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 3;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo queryinfos = 4;
  inline int queryinfos_size() const;
  inline void clear_queryinfos();
  static const int kQueryinfosFieldNumber = 4;
  inline const ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo& queryinfos(int index) const;
  inline ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo* mutable_queryinfos(int index);
  inline ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo* add_queryinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo >&
      queryinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo >*
      mutable_queryinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndGWQueryMonitorRecToMC)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo > queryinfos_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndGWQueryMonitorRecToMC* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_FrameInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_FrameInfo();
  virtual ~IndTerStatisticsInfoFromGW_FrameInfo();

  IndTerStatisticsInfoFromGW_FrameInfo(const IndTerStatisticsInfoFromGW_FrameInfo& from);

  inline IndTerStatisticsInfoFromGW_FrameInfo& operator=(const IndTerStatisticsInfoFromGW_FrameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_FrameInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_FrameInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_FrameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_FrameInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_FrameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fsw = 1;
  inline bool has_fsw() const;
  inline void clear_fsw();
  static const int kFswFieldNumber = 1;
  inline ::google::protobuf::uint32 fsw() const;
  inline void set_fsw(::google::protobuf::uint32 value);

  // optional uint32 fsh = 2;
  inline bool has_fsh() const;
  inline void clear_fsh();
  static const int kFshFieldNumber = 2;
  inline ::google::protobuf::uint32 fsh() const;
  inline void set_fsh(::google::protobuf::uint32 value);

  // optional uint32 fps = 3;
  inline bool has_fps() const;
  inline void clear_fps();
  static const int kFpsFieldNumber = 3;
  inline ::google::protobuf::uint32 fps() const;
  inline void set_fps(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo)
 private:
  inline void set_has_fsw();
  inline void clear_has_fsw();
  inline void set_has_fsh();
  inline void clear_has_fsh();
  inline void set_has_fps();
  inline void clear_has_fps();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 fsw_;
  ::google::protobuf::uint32 fsh_;
  ::google::protobuf::uint32 fps_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_FrameInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_AdvanceInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_AdvanceInfo();
  virtual ~IndTerStatisticsInfoFromGW_AdvanceInfo();

  IndTerStatisticsInfoFromGW_AdvanceInfo(const IndTerStatisticsInfoFromGW_AdvanceInfo& from);

  inline IndTerStatisticsInfoFromGW_AdvanceInfo& operator=(const IndTerStatisticsInfoFromGW_AdvanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_AdvanceInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_AdvanceInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_AdvanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_AdvanceInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_AdvanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 delay = 1;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 1;
  inline ::google::protobuf::uint32 delay() const;
  inline void set_delay(::google::protobuf::uint32 value);

  // optional uint32 jitter = 2;
  inline bool has_jitter() const;
  inline void clear_jitter();
  static const int kJitterFieldNumber = 2;
  inline ::google::protobuf::uint32 jitter() const;
  inline void set_jitter(::google::protobuf::uint32 value);

  // optional uint32 loss = 3;
  inline bool has_loss() const;
  inline void clear_loss();
  static const int kLossFieldNumber = 3;
  inline ::google::protobuf::uint32 loss() const;
  inline void set_loss(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo)
 private:
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_jitter();
  inline void clear_has_jitter();
  inline void set_has_loss();
  inline void clear_has_loss();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 delay_;
  ::google::protobuf::uint32 jitter_;
  ::google::protobuf::uint32 loss_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_AdvanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_BaseInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_BaseInfo();
  virtual ~IndTerStatisticsInfoFromGW_BaseInfo();

  IndTerStatisticsInfoFromGW_BaseInfo(const IndTerStatisticsInfoFromGW_BaseInfo& from);

  inline IndTerStatisticsInfoFromGW_BaseInfo& operator=(const IndTerStatisticsInfoFromGW_BaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_BaseInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_BaseInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_BaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_BaseInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_BaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 format = 1;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 1;
  inline ::google::protobuf::uint32 format() const;
  inline void set_format(::google::protobuf::uint32 value);

  // optional uint32 bitrate = 2;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 2;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo)
 private:
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 format_;
  ::google::protobuf::uint32 bitrate_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_BaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_AudioInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_AudioInfo();
  virtual ~IndTerStatisticsInfoFromGW_AudioInfo();

  IndTerStatisticsInfoFromGW_AudioInfo(const IndTerStatisticsInfoFromGW_AudioInfo& from);

  inline IndTerStatisticsInfoFromGW_AudioInfo& operator=(const IndTerStatisticsInfoFromGW_AudioInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_AudioInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_AudioInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_AudioInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_AudioInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_AudioInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 atype = 1;
  inline bool has_atype() const;
  inline void clear_atype();
  static const int kAtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 atype() const;
  inline void set_atype(::google::protobuf::uint32 value);

  // optional uint32 aterid = 2;
  inline bool has_aterid() const;
  inline void clear_aterid();
  static const int kAteridFieldNumber = 2;
  inline ::google::protobuf::uint32 aterid() const;
  inline void set_aterid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo baseinfo = 3;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 3;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo& baseinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* mutable_baseinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* baseinfo);

  // optional .SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo advinfo = 4;
  inline bool has_advinfo() const;
  inline void clear_advinfo();
  static const int kAdvinfoFieldNumber = 4;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo& advinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* mutable_advinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* release_advinfo();
  inline void set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* advinfo);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo)
 private:
  inline void set_has_atype();
  inline void clear_has_atype();
  inline void set_has_aterid();
  inline void clear_has_aterid();
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_advinfo();
  inline void clear_has_advinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 atype_;
  ::google::protobuf::uint32 aterid_;
  ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* baseinfo_;
  ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* advinfo_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_AudioInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_VideoInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_VideoInfo();
  virtual ~IndTerStatisticsInfoFromGW_VideoInfo();

  IndTerStatisticsInfoFromGW_VideoInfo(const IndTerStatisticsInfoFromGW_VideoInfo& from);

  inline IndTerStatisticsInfoFromGW_VideoInfo& operator=(const IndTerStatisticsInfoFromGW_VideoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_VideoInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_VideoInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_VideoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_VideoInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_VideoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vtype = 1;
  inline bool has_vtype() const;
  inline void clear_vtype();
  static const int kVtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 vtype() const;
  inline void set_vtype(::google::protobuf::uint32 value);

  // optional uint32 vterid = 2;
  inline bool has_vterid() const;
  inline void clear_vterid();
  static const int kVteridFieldNumber = 2;
  inline ::google::protobuf::uint32 vterid() const;
  inline void set_vterid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo baseinfo = 3;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 3;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo& baseinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* mutable_baseinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* baseinfo);

  // optional .SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo advinfo = 4;
  inline bool has_advinfo() const;
  inline void clear_advinfo();
  static const int kAdvinfoFieldNumber = 4;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo& advinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* mutable_advinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* release_advinfo();
  inline void set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* advinfo);

  // repeated .SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo frameinfo = 5;
  inline int frameinfo_size() const;
  inline void clear_frameinfo();
  static const int kFrameinfoFieldNumber = 5;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo& frameinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo* mutable_frameinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo* add_frameinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo >&
      frameinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo >*
      mutable_frameinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo)
 private:
  inline void set_has_vtype();
  inline void clear_has_vtype();
  inline void set_has_vterid();
  inline void clear_has_vterid();
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_advinfo();
  inline void clear_has_advinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 vtype_;
  ::google::protobuf::uint32 vterid_;
  ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* baseinfo_;
  ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* advinfo_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo > frameinfo_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_VideoInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_XfeInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_XfeInfo();
  virtual ~IndTerStatisticsInfoFromGW_XfeInfo();

  IndTerStatisticsInfoFromGW_XfeInfo(const IndTerStatisticsInfoFromGW_XfeInfo& from);

  inline IndTerStatisticsInfoFromGW_XfeInfo& operator=(const IndTerStatisticsInfoFromGW_XfeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_XfeInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_XfeInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_XfeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_XfeInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_XfeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo ainfo = 1;
  inline int ainfo_size() const;
  inline void clear_ainfo();
  static const int kAinfoFieldNumber = 1;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo& ainfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo* mutable_ainfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo* add_ainfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo >&
      ainfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo >*
      mutable_ainfo();

  // repeated .SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo vinfo = 2;
  inline int vinfo_size() const;
  inline void clear_vinfo();
  static const int kVinfoFieldNumber = 2;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo& vinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo* mutable_vinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo* add_vinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo >&
      vinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo >*
      mutable_vinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo > ainfo_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo > vinfo_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_XfeInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW_TerStatisticsInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW_TerStatisticsInfo();
  virtual ~IndTerStatisticsInfoFromGW_TerStatisticsInfo();

  IndTerStatisticsInfoFromGW_TerStatisticsInfo(const IndTerStatisticsInfoFromGW_TerStatisticsInfo& from);

  inline IndTerStatisticsInfoFromGW_TerStatisticsInfo& operator=(const IndTerStatisticsInfoFromGW_TerStatisticsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW_TerStatisticsInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromGW_TerStatisticsInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW_TerStatisticsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW_TerStatisticsInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW_TerStatisticsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo txinfo = 2;
  inline int txinfo_size() const;
  inline void clear_txinfo();
  static const int kTxinfoFieldNumber = 2;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo& txinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* mutable_txinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* add_txinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >&
      txinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >*
      mutable_txinfo();

  // repeated .SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo rxinfo = 3;
  inline int rxinfo_size() const;
  inline void clear_rxinfo();
  static const int kRxinfoFieldNumber = 3;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo& rxinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* mutable_rxinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* add_rxinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >&
      rxinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >*
      mutable_rxinfo();

  // optional uint32 txbweresult = 4;
  inline bool has_txbweresult() const;
  inline void clear_txbweresult();
  static const int kTxbweresultFieldNumber = 4;
  inline ::google::protobuf::uint32 txbweresult() const;
  inline void set_txbweresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_txbweresult();
  inline void clear_has_txbweresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo > txinfo_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 txbweresult_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo > rxinfo_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW_TerStatisticsInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromGW : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromGW();
  virtual ~IndTerStatisticsInfoFromGW();

  IndTerStatisticsInfoFromGW(const IndTerStatisticsInfoFromGW& from);

  inline IndTerStatisticsInfoFromGW& operator=(const IndTerStatisticsInfoFromGW& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromGW& default_instance();

  void Swap(IndTerStatisticsInfoFromGW* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromGW* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromGW& from);
  void MergeFrom(const IndTerStatisticsInfoFromGW& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndTerStatisticsInfoFromGW_FrameInfo FrameInfo;
  typedef IndTerStatisticsInfoFromGW_AdvanceInfo AdvanceInfo;
  typedef IndTerStatisticsInfoFromGW_BaseInfo BaseInfo;
  typedef IndTerStatisticsInfoFromGW_AudioInfo AudioInfo;
  typedef IndTerStatisticsInfoFromGW_VideoInfo VideoInfo;
  typedef IndTerStatisticsInfoFromGW_XfeInfo XfeInfo;
  typedef IndTerStatisticsInfoFromGW_TerStatisticsInfo TerStatisticsInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 gwid = 3;
  inline bool has_gwid() const;
  inline void clear_gwid();
  static const int kGwidFieldNumber = 3;
  inline ::google::protobuf::uint32 gwid() const;
  inline void set_gwid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo tsinfo = 4;
  inline int tsinfo_size() const;
  inline void clear_tsinfo();
  static const int kTsinfoFieldNumber = 4;
  inline const ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo& tsinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo* mutable_tsinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo* add_tsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo >&
      tsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo >*
      mutable_tsinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromGW)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_gwid();
  inline void clear_has_gwid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 gwid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo > tsinfo_;
  friend void  protobuf_AddDesc_mc_5fgw_2eproto();
  friend void protobuf_AssignDesc_mc_5fgw_2eproto();
  friend void protobuf_ShutdownFile_mc_5fgw_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromGW* default_instance_;
};
// ===================================================================


// ===================================================================

// CmdGWSyncMonitorInfo

// optional uint32 mcid = 1;
inline bool CmdGWSyncMonitorInfo::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWSyncMonitorInfo::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWSyncMonitorInfo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWSyncMonitorInfo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdGWSyncMonitorInfo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWSyncMonitorInfo.mcid)
  return mcid_;
}
inline void CmdGWSyncMonitorInfo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWSyncMonitorInfo.mcid)
}

// optional uint32 gwid = 2;
inline bool CmdGWSyncMonitorInfo::has_gwid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWSyncMonitorInfo::set_has_gwid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWSyncMonitorInfo::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWSyncMonitorInfo::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 CmdGWSyncMonitorInfo::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWSyncMonitorInfo.gwid)
  return gwid_;
}
inline void CmdGWSyncMonitorInfo::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWSyncMonitorInfo.gwid)
}

// optional string dsturl = 3;
inline bool CmdGWSyncMonitorInfo::has_dsturl() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdGWSyncMonitorInfo::set_has_dsturl() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdGWSyncMonitorInfo::clear_has_dsturl() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdGWSyncMonitorInfo::clear_dsturl() {
  if (dsturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dsturl_->clear();
  }
  clear_has_dsturl();
}
inline const ::std::string& CmdGWSyncMonitorInfo::dsturl() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWSyncMonitorInfo.dsturl)
  return *dsturl_;
}
inline void CmdGWSyncMonitorInfo::set_dsturl(const ::std::string& value) {
  set_has_dsturl();
  if (dsturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dsturl_ = new ::std::string;
  }
  dsturl_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWSyncMonitorInfo.dsturl)
}
inline void CmdGWSyncMonitorInfo::set_dsturl(const char* value) {
  set_has_dsturl();
  if (dsturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dsturl_ = new ::std::string;
  }
  dsturl_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWSyncMonitorInfo.dsturl)
}
inline void CmdGWSyncMonitorInfo::set_dsturl(const char* value, size_t size) {
  set_has_dsturl();
  if (dsturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dsturl_ = new ::std::string;
  }
  dsturl_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWSyncMonitorInfo.dsturl)
}
inline ::std::string* CmdGWSyncMonitorInfo::mutable_dsturl() {
  set_has_dsturl();
  if (dsturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    dsturl_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWSyncMonitorInfo.dsturl)
  return dsturl_;
}
inline ::std::string* CmdGWSyncMonitorInfo::release_dsturl() {
  clear_has_dsturl();
  if (dsturl_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = dsturl_;
    dsturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWSyncMonitorInfo::set_allocated_dsturl(::std::string* dsturl) {
  if (dsturl_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete dsturl_;
  }
  if (dsturl) {
    set_has_dsturl();
    dsturl_ = dsturl;
  } else {
    clear_has_dsturl();
    dsturl_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWSyncMonitorInfo.dsturl)
}

// -------------------------------------------------------------------

// CmdGWQueryMonitorRec_TimeInfo

// optional string starttime = 1;
inline bool CmdGWQueryMonitorRec_TimeInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWQueryMonitorRec_TimeInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWQueryMonitorRec_TimeInfo::clear_starttime() {
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_->clear();
  }
  clear_has_starttime();
}
inline const ::std::string& CmdGWQueryMonitorRec_TimeInfo::starttime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.starttime)
  return *starttime_;
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_starttime(const ::std::string& value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.starttime)
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_starttime(const char* value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.starttime)
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_starttime(const char* value, size_t size) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.starttime)
}
inline ::std::string* CmdGWQueryMonitorRec_TimeInfo::mutable_starttime() {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.starttime)
  return starttime_;
}
inline ::std::string* CmdGWQueryMonitorRec_TimeInfo::release_starttime() {
  clear_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = starttime_;
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_allocated_starttime(::std::string* starttime) {
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starttime_;
  }
  if (starttime) {
    set_has_starttime();
    starttime_ = starttime;
  } else {
    clear_has_starttime();
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.starttime)
}

// optional string endtime = 2;
inline bool CmdGWQueryMonitorRec_TimeInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWQueryMonitorRec_TimeInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWQueryMonitorRec_TimeInfo::clear_endtime() {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& CmdGWQueryMonitorRec_TimeInfo::endtime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.endtime)
  return *endtime_;
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.endtime)
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.endtime)
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.endtime)
}
inline ::std::string* CmdGWQueryMonitorRec_TimeInfo::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.endtime)
  return endtime_;
}
inline ::std::string* CmdGWQueryMonitorRec_TimeInfo::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWQueryMonitorRec_TimeInfo::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWQueryMonitorRec.TimeInfo.endtime)
}

// -------------------------------------------------------------------

// CmdGWQueryMonitorRec_MonitorInfo

// optional string devicecode = 1;
inline bool CmdGWQueryMonitorRec_MonitorInfo::has_devicecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_has_devicecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::clear_has_devicecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::clear_devicecode() {
  if (devicecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_->clear();
  }
  clear_has_devicecode();
}
inline const ::std::string& CmdGWQueryMonitorRec_MonitorInfo::devicecode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.devicecode)
  return *devicecode_;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_devicecode(const ::std::string& value) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.devicecode)
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_devicecode(const char* value) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.devicecode)
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_devicecode(const char* value, size_t size) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.devicecode)
}
inline ::std::string* CmdGWQueryMonitorRec_MonitorInfo::mutable_devicecode() {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.devicecode)
  return devicecode_;
}
inline ::std::string* CmdGWQueryMonitorRec_MonitorInfo::release_devicecode() {
  clear_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicecode_;
    devicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_allocated_devicecode(::std::string* devicecode) {
  if (devicecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicecode_;
  }
  if (devicecode) {
    set_has_devicecode();
    devicecode_ = devicecode;
  } else {
    clear_has_devicecode();
    devicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.devicecode)
}

// optional .SRMsgs.CmdGWQueryMonitorRec.TimeInfo totaltimespan = 2;
inline bool CmdGWQueryMonitorRec_MonitorInfo::has_totaltimespan() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_has_totaltimespan() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::clear_has_totaltimespan() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::clear_totaltimespan() {
  if (totaltimespan_ != NULL) totaltimespan_->::SRMsgs::CmdGWQueryMonitorRec_TimeInfo::Clear();
  clear_has_totaltimespan();
}
inline const ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo& CmdGWQueryMonitorRec_MonitorInfo::totaltimespan() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.totaltimespan)
  return totaltimespan_ != NULL ? *totaltimespan_ : *default_instance_->totaltimespan_;
}
inline ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* CmdGWQueryMonitorRec_MonitorInfo::mutable_totaltimespan() {
  set_has_totaltimespan();
  if (totaltimespan_ == NULL) totaltimespan_ = new ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.totaltimespan)
  return totaltimespan_;
}
inline ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* CmdGWQueryMonitorRec_MonitorInfo::release_totaltimespan() {
  clear_has_totaltimespan();
  ::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* temp = totaltimespan_;
  totaltimespan_ = NULL;
  return temp;
}
inline void CmdGWQueryMonitorRec_MonitorInfo::set_allocated_totaltimespan(::SRMsgs::CmdGWQueryMonitorRec_TimeInfo* totaltimespan) {
  delete totaltimespan_;
  totaltimespan_ = totaltimespan;
  if (totaltimespan) {
    set_has_totaltimespan();
  } else {
    clear_has_totaltimespan();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWQueryMonitorRec.MonitorInfo.totaltimespan)
}

// -------------------------------------------------------------------

// CmdGWQueryMonitorRec

// optional uint64 confid = 1;
inline bool CmdGWQueryMonitorRec::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWQueryMonitorRec::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWQueryMonitorRec::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWQueryMonitorRec::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdGWQueryMonitorRec::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.confid)
  return confid_;
}
inline void CmdGWQueryMonitorRec::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWQueryMonitorRec.confid)
}

// optional uint32 mcid = 2;
inline bool CmdGWQueryMonitorRec::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWQueryMonitorRec::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWQueryMonitorRec::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWQueryMonitorRec::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdGWQueryMonitorRec::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.mcid)
  return mcid_;
}
inline void CmdGWQueryMonitorRec::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWQueryMonitorRec.mcid)
}

// optional uint32 gwid = 3;
inline bool CmdGWQueryMonitorRec::has_gwid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdGWQueryMonitorRec::set_has_gwid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdGWQueryMonitorRec::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdGWQueryMonitorRec::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 CmdGWQueryMonitorRec::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.gwid)
  return gwid_;
}
inline void CmdGWQueryMonitorRec::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWQueryMonitorRec.gwid)
}

// repeated .SRMsgs.CmdGWQueryMonitorRec.MonitorInfo queryinfos = 4;
inline int CmdGWQueryMonitorRec::queryinfos_size() const {
  return queryinfos_.size();
}
inline void CmdGWQueryMonitorRec::clear_queryinfos() {
  queryinfos_.Clear();
}
inline const ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo& CmdGWQueryMonitorRec::queryinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWQueryMonitorRec.queryinfos)
  return queryinfos_.Get(index);
}
inline ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo* CmdGWQueryMonitorRec::mutable_queryinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWQueryMonitorRec.queryinfos)
  return queryinfos_.Mutable(index);
}
inline ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo* CmdGWQueryMonitorRec::add_queryinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdGWQueryMonitorRec.queryinfos)
  return queryinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo >&
CmdGWQueryMonitorRec::queryinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdGWQueryMonitorRec.queryinfos)
  return queryinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWQueryMonitorRec_MonitorInfo >*
CmdGWQueryMonitorRec::mutable_queryinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdGWQueryMonitorRec.queryinfos)
  return &queryinfos_;
}

// -------------------------------------------------------------------

// CmdGWInvitParticipants_TimeInfo

// optional string starttime = 1;
inline bool CmdGWInvitParticipants_TimeInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWInvitParticipants_TimeInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWInvitParticipants_TimeInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWInvitParticipants_TimeInfo::clear_starttime() {
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_->clear();
  }
  clear_has_starttime();
}
inline const ::std::string& CmdGWInvitParticipants_TimeInfo::starttime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.TimeInfo.starttime)
  return *starttime_;
}
inline void CmdGWInvitParticipants_TimeInfo::set_starttime(const ::std::string& value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.TimeInfo.starttime)
}
inline void CmdGWInvitParticipants_TimeInfo::set_starttime(const char* value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.TimeInfo.starttime)
}
inline void CmdGWInvitParticipants_TimeInfo::set_starttime(const char* value, size_t size) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.TimeInfo.starttime)
}
inline ::std::string* CmdGWInvitParticipants_TimeInfo::mutable_starttime() {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.TimeInfo.starttime)
  return starttime_;
}
inline ::std::string* CmdGWInvitParticipants_TimeInfo::release_starttime() {
  clear_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = starttime_;
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants_TimeInfo::set_allocated_starttime(::std::string* starttime) {
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starttime_;
  }
  if (starttime) {
    set_has_starttime();
    starttime_ = starttime;
  } else {
    clear_has_starttime();
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.TimeInfo.starttime)
}

// optional string endtime = 2;
inline bool CmdGWInvitParticipants_TimeInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWInvitParticipants_TimeInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWInvitParticipants_TimeInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWInvitParticipants_TimeInfo::clear_endtime() {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& CmdGWInvitParticipants_TimeInfo::endtime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.TimeInfo.endtime)
  return *endtime_;
}
inline void CmdGWInvitParticipants_TimeInfo::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.TimeInfo.endtime)
}
inline void CmdGWInvitParticipants_TimeInfo::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.TimeInfo.endtime)
}
inline void CmdGWInvitParticipants_TimeInfo::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.TimeInfo.endtime)
}
inline ::std::string* CmdGWInvitParticipants_TimeInfo::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.TimeInfo.endtime)
  return endtime_;
}
inline ::std::string* CmdGWInvitParticipants_TimeInfo::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants_TimeInfo::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.TimeInfo.endtime)
}

// -------------------------------------------------------------------

// CmdGWInvitParticipants_ParticipantInfo

// optional uint32 psuid = 1;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_psuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_psuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_psuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_psuid() {
  psuid_ = 0u;
  clear_has_psuid();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants_ParticipantInfo::psuid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.psuid)
  return psuid_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_psuid(::google::protobuf::uint32 value) {
  set_has_psuid();
  psuid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.psuid)
}

// optional string nickname = 2;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_nickname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_nickname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_nickname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_nickname() {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_->clear();
  }
  clear_has_nickname();
}
inline const ::std::string& CmdGWInvitParticipants_ParticipantInfo::nickname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.nickname)
  return *nickname_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_nickname(const ::std::string& value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.nickname)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_nickname(const char* value) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.nickname)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_nickname(const char* value, size_t size) {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  nickname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.nickname)
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::mutable_nickname() {
  set_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    nickname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.nickname)
  return nickname_;
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::release_nickname() {
  clear_has_nickname();
  if (nickname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = nickname_;
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_allocated_nickname(::std::string* nickname) {
  if (nickname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete nickname_;
  }
  if (nickname) {
    set_has_nickname();
    nickname_ = nickname;
  } else {
    clear_has_nickname();
    nickname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.nickname)
}

// optional string ip = 3;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_ip() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_ip() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_ip() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_ip() {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_->clear();
  }
  clear_has_ip();
}
inline const ::std::string& CmdGWInvitParticipants_ParticipantInfo::ip() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.ip)
  return *ip_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_ip(const ::std::string& value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.ip)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_ip(const char* value) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.ip)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_ip(const char* value, size_t size) {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  ip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.ip)
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::mutable_ip() {
  set_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    ip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.ip)
  return ip_;
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::release_ip() {
  clear_has_ip();
  if (ip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = ip_;
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_allocated_ip(::std::string* ip) {
  if (ip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete ip_;
  }
  if (ip) {
    set_has_ip();
    ip_ = ip;
  } else {
    clear_has_ip();
    ip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.ip)
}

// optional uint32 protocoltype = 4;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_protocoltype() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_protocoltype() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_protocoltype() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_protocoltype() {
  protocoltype_ = 0u;
  clear_has_protocoltype();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants_ParticipantInfo::protocoltype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.protocoltype)
  return protocoltype_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_protocoltype(::google::protobuf::uint32 value) {
  set_has_protocoltype();
  protocoltype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.protocoltype)
}

// optional uint32 bandwidth = 5;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_bandwidth() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_bandwidth() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_bandwidth() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_bandwidth() {
  bandwidth_ = 0u;
  clear_has_bandwidth();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants_ParticipantInfo::bandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.bandwidth)
  return bandwidth_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_bandwidth(::google::protobuf::uint32 value) {
  set_has_bandwidth();
  bandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.bandwidth)
}

// optional uint32 devicetype = 6;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_devicetype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_devicetype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_devicetype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_devicetype() {
  devicetype_ = 0u;
  clear_has_devicetype();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants_ParticipantInfo::devicetype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicetype)
  return devicetype_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_devicetype(::google::protobuf::uint32 value) {
  set_has_devicetype();
  devicetype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicetype)
}

// optional string calloption = 7;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_calloption() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_calloption() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_calloption() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_calloption() {
  if (calloption_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    calloption_->clear();
  }
  clear_has_calloption();
}
inline const ::std::string& CmdGWInvitParticipants_ParticipantInfo::calloption() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.calloption)
  return *calloption_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_calloption(const ::std::string& value) {
  set_has_calloption();
  if (calloption_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    calloption_ = new ::std::string;
  }
  calloption_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.calloption)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_calloption(const char* value) {
  set_has_calloption();
  if (calloption_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    calloption_ = new ::std::string;
  }
  calloption_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.calloption)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_calloption(const char* value, size_t size) {
  set_has_calloption();
  if (calloption_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    calloption_ = new ::std::string;
  }
  calloption_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.calloption)
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::mutable_calloption() {
  set_has_calloption();
  if (calloption_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    calloption_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.calloption)
  return calloption_;
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::release_calloption() {
  clear_has_calloption();
  if (calloption_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = calloption_;
    calloption_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_allocated_calloption(::std::string* calloption) {
  if (calloption_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete calloption_;
  }
  if (calloption) {
    set_has_calloption();
    calloption_ = calloption;
  } else {
    clear_has_calloption();
    calloption_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.calloption)
}

// optional string devicecode = 8;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_devicecode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_devicecode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_devicecode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_devicecode() {
  if (devicecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_->clear();
  }
  clear_has_devicecode();
}
inline const ::std::string& CmdGWInvitParticipants_ParticipantInfo::devicecode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicecode)
  return *devicecode_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_devicecode(const ::std::string& value) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicecode)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_devicecode(const char* value) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicecode)
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_devicecode(const char* value, size_t size) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicecode)
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::mutable_devicecode() {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicecode)
  return devicecode_;
}
inline ::std::string* CmdGWInvitParticipants_ParticipantInfo::release_devicecode() {
  clear_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicecode_;
    devicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_allocated_devicecode(::std::string* devicecode) {
  if (devicecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicecode_;
  }
  if (devicecode) {
    set_has_devicecode();
    devicecode_ = devicecode;
  } else {
    clear_has_devicecode();
    devicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.devicecode)
}

// optional uint32 usertype = 9;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_usertype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_usertype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_usertype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_usertype() {
  usertype_ = 0u;
  clear_has_usertype();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants_ParticipantInfo::usertype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.usertype)
  return usertype_;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_usertype(::google::protobuf::uint32 value) {
  set_has_usertype();
  usertype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.usertype)
}

// optional .SRMsgs.CmdGWInvitParticipants.TimeInfo totaltimespan = 10;
inline bool CmdGWInvitParticipants_ParticipantInfo::has_totaltimespan() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_has_totaltimespan() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_has_totaltimespan() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_totaltimespan() {
  if (totaltimespan_ != NULL) totaltimespan_->::SRMsgs::CmdGWInvitParticipants_TimeInfo::Clear();
  clear_has_totaltimespan();
}
inline const ::SRMsgs::CmdGWInvitParticipants_TimeInfo& CmdGWInvitParticipants_ParticipantInfo::totaltimespan() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.totaltimespan)
  return totaltimespan_ != NULL ? *totaltimespan_ : *default_instance_->totaltimespan_;
}
inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* CmdGWInvitParticipants_ParticipantInfo::mutable_totaltimespan() {
  set_has_totaltimespan();
  if (totaltimespan_ == NULL) totaltimespan_ = new ::SRMsgs::CmdGWInvitParticipants_TimeInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.totaltimespan)
  return totaltimespan_;
}
inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* CmdGWInvitParticipants_ParticipantInfo::release_totaltimespan() {
  clear_has_totaltimespan();
  ::SRMsgs::CmdGWInvitParticipants_TimeInfo* temp = totaltimespan_;
  totaltimespan_ = NULL;
  return temp;
}
inline void CmdGWInvitParticipants_ParticipantInfo::set_allocated_totaltimespan(::SRMsgs::CmdGWInvitParticipants_TimeInfo* totaltimespan) {
  delete totaltimespan_;
  totaltimespan_ = totaltimespan;
  if (totaltimespan) {
    set_has_totaltimespan();
  } else {
    clear_has_totaltimespan();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.totaltimespan)
}

// repeated .SRMsgs.CmdGWInvitParticipants.TimeInfo subtimespans = 11;
inline int CmdGWInvitParticipants_ParticipantInfo::subtimespans_size() const {
  return subtimespans_.size();
}
inline void CmdGWInvitParticipants_ParticipantInfo::clear_subtimespans() {
  subtimespans_.Clear();
}
inline const ::SRMsgs::CmdGWInvitParticipants_TimeInfo& CmdGWInvitParticipants_ParticipantInfo::subtimespans(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.subtimespans)
  return subtimespans_.Get(index);
}
inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* CmdGWInvitParticipants_ParticipantInfo::mutable_subtimespans(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.subtimespans)
  return subtimespans_.Mutable(index);
}
inline ::SRMsgs::CmdGWInvitParticipants_TimeInfo* CmdGWInvitParticipants_ParticipantInfo::add_subtimespans() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.subtimespans)
  return subtimespans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_TimeInfo >&
CmdGWInvitParticipants_ParticipantInfo::subtimespans() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.subtimespans)
  return subtimespans_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_TimeInfo >*
CmdGWInvitParticipants_ParticipantInfo::mutable_subtimespans() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdGWInvitParticipants.ParticipantInfo.subtimespans)
  return &subtimespans_;
}

// -------------------------------------------------------------------

// CmdGWInvitParticipants

// optional uint64 confid = 1;
inline bool CmdGWInvitParticipants::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdGWInvitParticipants::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdGWInvitParticipants::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdGWInvitParticipants::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdGWInvitParticipants::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.confid)
  return confid_;
}
inline void CmdGWInvitParticipants::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.confid)
}

// optional uint32 mcid = 2;
inline bool CmdGWInvitParticipants::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdGWInvitParticipants::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdGWInvitParticipants::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdGWInvitParticipants::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.mcid)
  return mcid_;
}
inline void CmdGWInvitParticipants::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.mcid)
}

// optional uint32 gwid = 3;
inline bool CmdGWInvitParticipants::has_gwid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdGWInvitParticipants::set_has_gwid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdGWInvitParticipants::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdGWInvitParticipants::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 CmdGWInvitParticipants::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.gwid)
  return gwid_;
}
inline void CmdGWInvitParticipants::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.gwid)
}

// repeated .SRMsgs.CmdGWInvitParticipants.ParticipantInfo ivtparticipants = 4;
inline int CmdGWInvitParticipants::ivtparticipants_size() const {
  return ivtparticipants_.size();
}
inline void CmdGWInvitParticipants::clear_ivtparticipants() {
  ivtparticipants_.Clear();
}
inline const ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo& CmdGWInvitParticipants::ivtparticipants(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.ivtparticipants)
  return ivtparticipants_.Get(index);
}
inline ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo* CmdGWInvitParticipants::mutable_ivtparticipants(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.ivtparticipants)
  return ivtparticipants_.Mutable(index);
}
inline ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo* CmdGWInvitParticipants::add_ivtparticipants() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdGWInvitParticipants.ivtparticipants)
  return ivtparticipants_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo >&
CmdGWInvitParticipants::ivtparticipants() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdGWInvitParticipants.ivtparticipants)
  return ivtparticipants_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdGWInvitParticipants_ParticipantInfo >*
CmdGWInvitParticipants::mutable_ivtparticipants() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdGWInvitParticipants.ivtparticipants)
  return &ivtparticipants_;
}

// optional string confsubject = 5;
inline bool CmdGWInvitParticipants::has_confsubject() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdGWInvitParticipants::set_has_confsubject() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdGWInvitParticipants::clear_has_confsubject() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdGWInvitParticipants::clear_confsubject() {
  if (confsubject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confsubject_->clear();
  }
  clear_has_confsubject();
}
inline const ::std::string& CmdGWInvitParticipants::confsubject() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.confsubject)
  return *confsubject_;
}
inline void CmdGWInvitParticipants::set_confsubject(const ::std::string& value) {
  set_has_confsubject();
  if (confsubject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confsubject_ = new ::std::string;
  }
  confsubject_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.confsubject)
}
inline void CmdGWInvitParticipants::set_confsubject(const char* value) {
  set_has_confsubject();
  if (confsubject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confsubject_ = new ::std::string;
  }
  confsubject_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.confsubject)
}
inline void CmdGWInvitParticipants::set_confsubject(const char* value, size_t size) {
  set_has_confsubject();
  if (confsubject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confsubject_ = new ::std::string;
  }
  confsubject_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.confsubject)
}
inline ::std::string* CmdGWInvitParticipants::mutable_confsubject() {
  set_has_confsubject();
  if (confsubject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confsubject_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.confsubject)
  return confsubject_;
}
inline ::std::string* CmdGWInvitParticipants::release_confsubject() {
  clear_has_confsubject();
  if (confsubject_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = confsubject_;
    confsubject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants::set_allocated_confsubject(::std::string* confsubject) {
  if (confsubject_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete confsubject_;
  }
  if (confsubject) {
    set_has_confsubject();
    confsubject_ = confsubject;
  } else {
    clear_has_confsubject();
    confsubject_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.confsubject)
}

// optional string confpwd = 6;
inline bool CmdGWInvitParticipants::has_confpwd() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdGWInvitParticipants::set_has_confpwd() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdGWInvitParticipants::clear_has_confpwd() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdGWInvitParticipants::clear_confpwd() {
  if (confpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confpwd_->clear();
  }
  clear_has_confpwd();
}
inline const ::std::string& CmdGWInvitParticipants::confpwd() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdGWInvitParticipants.confpwd)
  return *confpwd_;
}
inline void CmdGWInvitParticipants::set_confpwd(const ::std::string& value) {
  set_has_confpwd();
  if (confpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confpwd_ = new ::std::string;
  }
  confpwd_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdGWInvitParticipants.confpwd)
}
inline void CmdGWInvitParticipants::set_confpwd(const char* value) {
  set_has_confpwd();
  if (confpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confpwd_ = new ::std::string;
  }
  confpwd_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdGWInvitParticipants.confpwd)
}
inline void CmdGWInvitParticipants::set_confpwd(const char* value, size_t size) {
  set_has_confpwd();
  if (confpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confpwd_ = new ::std::string;
  }
  confpwd_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdGWInvitParticipants.confpwd)
}
inline ::std::string* CmdGWInvitParticipants::mutable_confpwd() {
  set_has_confpwd();
  if (confpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    confpwd_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdGWInvitParticipants.confpwd)
  return confpwd_;
}
inline ::std::string* CmdGWInvitParticipants::release_confpwd() {
  clear_has_confpwd();
  if (confpwd_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = confpwd_;
    confpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdGWInvitParticipants::set_allocated_confpwd(::std::string* confpwd) {
  if (confpwd_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete confpwd_;
  }
  if (confpwd) {
    set_has_confpwd();
    confpwd_ = confpwd;
  } else {
    clear_has_confpwd();
    confpwd_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdGWInvitParticipants.confpwd)
}

// -------------------------------------------------------------------

// IndMCHeartBeatToGW

// optional uint32 mcid = 1;
inline bool IndMCHeartBeatToGW::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMCHeartBeatToGW::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMCHeartBeatToGW::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMCHeartBeatToGW::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMCHeartBeatToGW::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMCHeartBeatToGW.mcid)
  return mcid_;
}
inline void IndMCHeartBeatToGW::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMCHeartBeatToGW.mcid)
}

// optional uint32 gwid = 2;
inline bool IndMCHeartBeatToGW::has_gwid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMCHeartBeatToGW::set_has_gwid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMCHeartBeatToGW::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMCHeartBeatToGW::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 IndMCHeartBeatToGW::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMCHeartBeatToGW.gwid)
  return gwid_;
}
inline void IndMCHeartBeatToGW::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMCHeartBeatToGW.gwid)
}

// -------------------------------------------------------------------

// IndGWHeartBeatToMC

// optional uint32 mcid = 1;
inline bool IndGWHeartBeatToMC::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndGWHeartBeatToMC::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndGWHeartBeatToMC::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndGWHeartBeatToMC::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndGWHeartBeatToMC::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWHeartBeatToMC.mcid)
  return mcid_;
}
inline void IndGWHeartBeatToMC::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWHeartBeatToMC.mcid)
}

// optional uint32 gwid = 2;
inline bool IndGWHeartBeatToMC::has_gwid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndGWHeartBeatToMC::set_has_gwid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndGWHeartBeatToMC::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndGWHeartBeatToMC::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 IndGWHeartBeatToMC::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWHeartBeatToMC.gwid)
  return gwid_;
}
inline void IndGWHeartBeatToMC::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWHeartBeatToMC.gwid)
}

// -------------------------------------------------------------------

// IndGWQueryMonitorRecToMC_TimeInfo

// optional string starttime = 1;
inline bool IndGWQueryMonitorRecToMC_TimeInfo::has_starttime() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_has_starttime() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::clear_has_starttime() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::clear_starttime() {
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_->clear();
  }
  clear_has_starttime();
}
inline const ::std::string& IndGWQueryMonitorRecToMC_TimeInfo::starttime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.starttime)
  return *starttime_;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_starttime(const ::std::string& value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.starttime)
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_starttime(const char* value) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.starttime)
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_starttime(const char* value, size_t size) {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  starttime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.starttime)
}
inline ::std::string* IndGWQueryMonitorRecToMC_TimeInfo::mutable_starttime() {
  set_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    starttime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.starttime)
  return starttime_;
}
inline ::std::string* IndGWQueryMonitorRecToMC_TimeInfo::release_starttime() {
  clear_has_starttime();
  if (starttime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = starttime_;
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_allocated_starttime(::std::string* starttime) {
  if (starttime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete starttime_;
  }
  if (starttime) {
    set_has_starttime();
    starttime_ = starttime;
  } else {
    clear_has_starttime();
    starttime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.starttime)
}

// optional string endtime = 2;
inline bool IndGWQueryMonitorRecToMC_TimeInfo::has_endtime() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_has_endtime() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::clear_has_endtime() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::clear_endtime() {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_->clear();
  }
  clear_has_endtime();
}
inline const ::std::string& IndGWQueryMonitorRecToMC_TimeInfo::endtime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.endtime)
  return *endtime_;
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_endtime(const ::std::string& value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.endtime)
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_endtime(const char* value) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.endtime)
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_endtime(const char* value, size_t size) {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  endtime_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.endtime)
}
inline ::std::string* IndGWQueryMonitorRecToMC_TimeInfo::mutable_endtime() {
  set_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    endtime_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.endtime)
  return endtime_;
}
inline ::std::string* IndGWQueryMonitorRecToMC_TimeInfo::release_endtime() {
  clear_has_endtime();
  if (endtime_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = endtime_;
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndGWQueryMonitorRecToMC_TimeInfo::set_allocated_endtime(::std::string* endtime) {
  if (endtime_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete endtime_;
  }
  if (endtime) {
    set_has_endtime();
    endtime_ = endtime;
  } else {
    clear_has_endtime();
    endtime_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo.endtime)
}

// -------------------------------------------------------------------

// IndGWQueryMonitorRecToMC_MonitorInfo

// optional string devicecode = 1;
inline bool IndGWQueryMonitorRecToMC_MonitorInfo::has_devicecode() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_has_devicecode() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_has_devicecode() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_devicecode() {
  if (devicecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_->clear();
  }
  clear_has_devicecode();
}
inline const ::std::string& IndGWQueryMonitorRecToMC_MonitorInfo::devicecode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.devicecode)
  return *devicecode_;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_devicecode(const ::std::string& value) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.devicecode)
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_devicecode(const char* value) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.devicecode)
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_devicecode(const char* value, size_t size) {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  devicecode_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.devicecode)
}
inline ::std::string* IndGWQueryMonitorRecToMC_MonitorInfo::mutable_devicecode() {
  set_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    devicecode_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.devicecode)
  return devicecode_;
}
inline ::std::string* IndGWQueryMonitorRecToMC_MonitorInfo::release_devicecode() {
  clear_has_devicecode();
  if (devicecode_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = devicecode_;
    devicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_allocated_devicecode(::std::string* devicecode) {
  if (devicecode_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete devicecode_;
  }
  if (devicecode) {
    set_has_devicecode();
    devicecode_ = devicecode;
  } else {
    clear_has_devicecode();
    devicecode_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.devicecode)
}

// optional uint32 querystate = 2;
inline bool IndGWQueryMonitorRecToMC_MonitorInfo::has_querystate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_has_querystate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_has_querystate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_querystate() {
  querystate_ = 0u;
  clear_has_querystate();
}
inline ::google::protobuf::uint32 IndGWQueryMonitorRecToMC_MonitorInfo::querystate() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.querystate)
  return querystate_;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_querystate(::google::protobuf::uint32 value) {
  set_has_querystate();
  querystate_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.querystate)
}

// optional .SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo totaltimespan = 3;
inline bool IndGWQueryMonitorRecToMC_MonitorInfo::has_totaltimespan() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_has_totaltimespan() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_has_totaltimespan() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_totaltimespan() {
  if (totaltimespan_ != NULL) totaltimespan_->::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo::Clear();
  clear_has_totaltimespan();
}
inline const ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo& IndGWQueryMonitorRecToMC_MonitorInfo::totaltimespan() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.totaltimespan)
  return totaltimespan_ != NULL ? *totaltimespan_ : *default_instance_->totaltimespan_;
}
inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* IndGWQueryMonitorRecToMC_MonitorInfo::mutable_totaltimespan() {
  set_has_totaltimespan();
  if (totaltimespan_ == NULL) totaltimespan_ = new ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.totaltimespan)
  return totaltimespan_;
}
inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* IndGWQueryMonitorRecToMC_MonitorInfo::release_totaltimespan() {
  clear_has_totaltimespan();
  ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* temp = totaltimespan_;
  totaltimespan_ = NULL;
  return temp;
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::set_allocated_totaltimespan(::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* totaltimespan) {
  delete totaltimespan_;
  totaltimespan_ = totaltimespan;
  if (totaltimespan) {
    set_has_totaltimespan();
  } else {
    clear_has_totaltimespan();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.totaltimespan)
}

// repeated .SRMsgs.IndGWQueryMonitorRecToMC.TimeInfo subtimespans = 4;
inline int IndGWQueryMonitorRecToMC_MonitorInfo::subtimespans_size() const {
  return subtimespans_.size();
}
inline void IndGWQueryMonitorRecToMC_MonitorInfo::clear_subtimespans() {
  subtimespans_.Clear();
}
inline const ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo& IndGWQueryMonitorRecToMC_MonitorInfo::subtimespans(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.subtimespans)
  return subtimespans_.Get(index);
}
inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* IndGWQueryMonitorRecToMC_MonitorInfo::mutable_subtimespans(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.subtimespans)
  return subtimespans_.Mutable(index);
}
inline ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo* IndGWQueryMonitorRecToMC_MonitorInfo::add_subtimespans() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.subtimespans)
  return subtimespans_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo >&
IndGWQueryMonitorRecToMC_MonitorInfo::subtimespans() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.subtimespans)
  return subtimespans_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_TimeInfo >*
IndGWQueryMonitorRecToMC_MonitorInfo::mutable_subtimespans() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo.subtimespans)
  return &subtimespans_;
}

// -------------------------------------------------------------------

// IndGWQueryMonitorRecToMC

// optional uint64 confid = 1;
inline bool IndGWQueryMonitorRecToMC::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndGWQueryMonitorRecToMC::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndGWQueryMonitorRecToMC::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndGWQueryMonitorRecToMC::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndGWQueryMonitorRecToMC::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.confid)
  return confid_;
}
inline void IndGWQueryMonitorRecToMC::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.confid)
}

// optional uint32 mcid = 2;
inline bool IndGWQueryMonitorRecToMC::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndGWQueryMonitorRecToMC::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndGWQueryMonitorRecToMC::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndGWQueryMonitorRecToMC::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndGWQueryMonitorRecToMC::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.mcid)
  return mcid_;
}
inline void IndGWQueryMonitorRecToMC::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.mcid)
}

// optional uint32 gwid = 3;
inline bool IndGWQueryMonitorRecToMC::has_gwid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndGWQueryMonitorRecToMC::set_has_gwid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndGWQueryMonitorRecToMC::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndGWQueryMonitorRecToMC::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 IndGWQueryMonitorRecToMC::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.gwid)
  return gwid_;
}
inline void IndGWQueryMonitorRecToMC::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndGWQueryMonitorRecToMC.gwid)
}

// repeated .SRMsgs.IndGWQueryMonitorRecToMC.MonitorInfo queryinfos = 4;
inline int IndGWQueryMonitorRecToMC::queryinfos_size() const {
  return queryinfos_.size();
}
inline void IndGWQueryMonitorRecToMC::clear_queryinfos() {
  queryinfos_.Clear();
}
inline const ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo& IndGWQueryMonitorRecToMC::queryinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndGWQueryMonitorRecToMC.queryinfos)
  return queryinfos_.Get(index);
}
inline ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo* IndGWQueryMonitorRecToMC::mutable_queryinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndGWQueryMonitorRecToMC.queryinfos)
  return queryinfos_.Mutable(index);
}
inline ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo* IndGWQueryMonitorRecToMC::add_queryinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndGWQueryMonitorRecToMC.queryinfos)
  return queryinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo >&
IndGWQueryMonitorRecToMC::queryinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndGWQueryMonitorRecToMC.queryinfos)
  return queryinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndGWQueryMonitorRecToMC_MonitorInfo >*
IndGWQueryMonitorRecToMC::mutable_queryinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndGWQueryMonitorRecToMC.queryinfos)
  return &queryinfos_;
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_FrameInfo

// optional uint32 fsw = 1;
inline bool IndTerStatisticsInfoFromGW_FrameInfo::has_fsw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::set_has_fsw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::clear_has_fsw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::clear_fsw() {
  fsw_ = 0u;
  clear_has_fsw();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_FrameInfo::fsw() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo.fsw)
  return fsw_;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::set_fsw(::google::protobuf::uint32 value) {
  set_has_fsw();
  fsw_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo.fsw)
}

// optional uint32 fsh = 2;
inline bool IndTerStatisticsInfoFromGW_FrameInfo::has_fsh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::set_has_fsh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::clear_has_fsh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::clear_fsh() {
  fsh_ = 0u;
  clear_has_fsh();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_FrameInfo::fsh() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo.fsh)
  return fsh_;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::set_fsh(::google::protobuf::uint32 value) {
  set_has_fsh();
  fsh_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo.fsh)
}

// optional uint32 fps = 3;
inline bool IndTerStatisticsInfoFromGW_FrameInfo::has_fps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::set_has_fps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::clear_has_fps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::clear_fps() {
  fps_ = 0u;
  clear_has_fps();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_FrameInfo::fps() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo.fps)
  return fps_;
}
inline void IndTerStatisticsInfoFromGW_FrameInfo::set_fps(::google::protobuf::uint32 value) {
  set_has_fps();
  fps_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo.fps)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_AdvanceInfo

// optional uint32 delay = 1;
inline bool IndTerStatisticsInfoFromGW_AdvanceInfo::has_delay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::set_has_delay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::clear_has_delay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::clear_delay() {
  delay_ = 0u;
  clear_has_delay();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_AdvanceInfo::delay() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo.delay)
  return delay_;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::set_delay(::google::protobuf::uint32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo.delay)
}

// optional uint32 jitter = 2;
inline bool IndTerStatisticsInfoFromGW_AdvanceInfo::has_jitter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::set_has_jitter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::clear_has_jitter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::clear_jitter() {
  jitter_ = 0u;
  clear_has_jitter();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_AdvanceInfo::jitter() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo.jitter)
  return jitter_;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::set_jitter(::google::protobuf::uint32 value) {
  set_has_jitter();
  jitter_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo.jitter)
}

// optional uint32 loss = 3;
inline bool IndTerStatisticsInfoFromGW_AdvanceInfo::has_loss() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::set_has_loss() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::clear_has_loss() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::clear_loss() {
  loss_ = 0u;
  clear_has_loss();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_AdvanceInfo::loss() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo.loss)
  return loss_;
}
inline void IndTerStatisticsInfoFromGW_AdvanceInfo::set_loss(::google::protobuf::uint32 value) {
  set_has_loss();
  loss_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo.loss)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_BaseInfo

// optional uint32 format = 1;
inline bool IndTerStatisticsInfoFromGW_BaseInfo::has_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::set_has_format() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::clear_has_format() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::clear_format() {
  format_ = 0u;
  clear_has_format();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_BaseInfo::format() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo.format)
  return format_;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo.format)
}

// optional uint32 bitrate = 2;
inline bool IndTerStatisticsInfoFromGW_BaseInfo::has_bitrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::set_has_bitrate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_BaseInfo::bitrate() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo.bitrate)
  return bitrate_;
}
inline void IndTerStatisticsInfoFromGW_BaseInfo::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo.bitrate)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_AudioInfo

// optional uint32 atype = 1;
inline bool IndTerStatisticsInfoFromGW_AudioInfo::has_atype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_has_atype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_has_atype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_atype() {
  atype_ = 0u;
  clear_has_atype();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_AudioInfo::atype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.atype)
  return atype_;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_atype(::google::protobuf::uint32 value) {
  set_has_atype();
  atype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.atype)
}

// optional uint32 aterid = 2;
inline bool IndTerStatisticsInfoFromGW_AudioInfo::has_aterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_has_aterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_has_aterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_aterid() {
  aterid_ = 0u;
  clear_has_aterid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_AudioInfo::aterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.aterid)
  return aterid_;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_aterid(::google::protobuf::uint32 value) {
  set_has_aterid();
  aterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.aterid)
}

// optional .SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo baseinfo = 3;
inline bool IndTerStatisticsInfoFromGW_AudioInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo& IndTerStatisticsInfoFromGW_AudioInfo::baseinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.baseinfo)
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* IndTerStatisticsInfoFromGW_AudioInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.baseinfo)
  return baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* IndTerStatisticsInfoFromGW_AudioInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.baseinfo)
}

// optional .SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo advinfo = 4;
inline bool IndTerStatisticsInfoFromGW_AudioInfo::has_advinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_has_advinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_has_advinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::clear_advinfo() {
  if (advinfo_ != NULL) advinfo_->::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo::Clear();
  clear_has_advinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo& IndTerStatisticsInfoFromGW_AudioInfo::advinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.advinfo)
  return advinfo_ != NULL ? *advinfo_ : *default_instance_->advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* IndTerStatisticsInfoFromGW_AudioInfo::mutable_advinfo() {
  set_has_advinfo();
  if (advinfo_ == NULL) advinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.advinfo)
  return advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* IndTerStatisticsInfoFromGW_AudioInfo::release_advinfo() {
  clear_has_advinfo();
  ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* temp = advinfo_;
  advinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromGW_AudioInfo::set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* advinfo) {
  delete advinfo_;
  advinfo_ = advinfo;
  if (advinfo) {
    set_has_advinfo();
  } else {
    clear_has_advinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo.advinfo)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_VideoInfo

// optional uint32 vtype = 1;
inline bool IndTerStatisticsInfoFromGW_VideoInfo::has_vtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_has_vtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_has_vtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_vtype() {
  vtype_ = 0u;
  clear_has_vtype();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_VideoInfo::vtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.vtype)
  return vtype_;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_vtype(::google::protobuf::uint32 value) {
  set_has_vtype();
  vtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.vtype)
}

// optional uint32 vterid = 2;
inline bool IndTerStatisticsInfoFromGW_VideoInfo::has_vterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_has_vterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_has_vterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_vterid() {
  vterid_ = 0u;
  clear_has_vterid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_VideoInfo::vterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.vterid)
  return vterid_;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_vterid(::google::protobuf::uint32 value) {
  set_has_vterid();
  vterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.vterid)
}

// optional .SRMsgs.IndTerStatisticsInfoFromGW.BaseInfo baseinfo = 3;
inline bool IndTerStatisticsInfoFromGW_VideoInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo& IndTerStatisticsInfoFromGW_VideoInfo::baseinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.baseinfo)
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* IndTerStatisticsInfoFromGW_VideoInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.baseinfo)
  return baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* IndTerStatisticsInfoFromGW_VideoInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromGW_BaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.baseinfo)
}

// optional .SRMsgs.IndTerStatisticsInfoFromGW.AdvanceInfo advinfo = 4;
inline bool IndTerStatisticsInfoFromGW_VideoInfo::has_advinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_has_advinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_has_advinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_advinfo() {
  if (advinfo_ != NULL) advinfo_->::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo::Clear();
  clear_has_advinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo& IndTerStatisticsInfoFromGW_VideoInfo::advinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.advinfo)
  return advinfo_ != NULL ? *advinfo_ : *default_instance_->advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* IndTerStatisticsInfoFromGW_VideoInfo::mutable_advinfo() {
  set_has_advinfo();
  if (advinfo_ == NULL) advinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.advinfo)
  return advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* IndTerStatisticsInfoFromGW_VideoInfo::release_advinfo() {
  clear_has_advinfo();
  ::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* temp = advinfo_;
  advinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromGW_AdvanceInfo* advinfo) {
  delete advinfo_;
  advinfo_ = advinfo;
  if (advinfo) {
    set_has_advinfo();
  } else {
    clear_has_advinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.advinfo)
}

// repeated .SRMsgs.IndTerStatisticsInfoFromGW.FrameInfo frameinfo = 5;
inline int IndTerStatisticsInfoFromGW_VideoInfo::frameinfo_size() const {
  return frameinfo_.size();
}
inline void IndTerStatisticsInfoFromGW_VideoInfo::clear_frameinfo() {
  frameinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo& IndTerStatisticsInfoFromGW_VideoInfo::frameinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.frameinfo)
  return frameinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo* IndTerStatisticsInfoFromGW_VideoInfo::mutable_frameinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.frameinfo)
  return frameinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo* IndTerStatisticsInfoFromGW_VideoInfo::add_frameinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.frameinfo)
  return frameinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo >&
IndTerStatisticsInfoFromGW_VideoInfo::frameinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.frameinfo)
  return frameinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_FrameInfo >*
IndTerStatisticsInfoFromGW_VideoInfo::mutable_frameinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo.frameinfo)
  return &frameinfo_;
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_XfeInfo

// repeated .SRMsgs.IndTerStatisticsInfoFromGW.AudioInfo ainfo = 1;
inline int IndTerStatisticsInfoFromGW_XfeInfo::ainfo_size() const {
  return ainfo_.size();
}
inline void IndTerStatisticsInfoFromGW_XfeInfo::clear_ainfo() {
  ainfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo& IndTerStatisticsInfoFromGW_XfeInfo::ainfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.ainfo)
  return ainfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo* IndTerStatisticsInfoFromGW_XfeInfo::mutable_ainfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.ainfo)
  return ainfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo* IndTerStatisticsInfoFromGW_XfeInfo::add_ainfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.ainfo)
  return ainfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo >&
IndTerStatisticsInfoFromGW_XfeInfo::ainfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.ainfo)
  return ainfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_AudioInfo >*
IndTerStatisticsInfoFromGW_XfeInfo::mutable_ainfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.ainfo)
  return &ainfo_;
}

// repeated .SRMsgs.IndTerStatisticsInfoFromGW.VideoInfo vinfo = 2;
inline int IndTerStatisticsInfoFromGW_XfeInfo::vinfo_size() const {
  return vinfo_.size();
}
inline void IndTerStatisticsInfoFromGW_XfeInfo::clear_vinfo() {
  vinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo& IndTerStatisticsInfoFromGW_XfeInfo::vinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.vinfo)
  return vinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo* IndTerStatisticsInfoFromGW_XfeInfo::mutable_vinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.vinfo)
  return vinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo* IndTerStatisticsInfoFromGW_XfeInfo::add_vinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.vinfo)
  return vinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo >&
IndTerStatisticsInfoFromGW_XfeInfo::vinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.vinfo)
  return vinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_VideoInfo >*
IndTerStatisticsInfoFromGW_XfeInfo::mutable_vinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo.vinfo)
  return &vinfo_;
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW_TerStatisticsInfo

// optional uint32 terid = 1;
inline bool IndTerStatisticsInfoFromGW_TerStatisticsInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_TerStatisticsInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.terid)
  return terid_;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.terid)
}

// repeated .SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo txinfo = 2;
inline int IndTerStatisticsInfoFromGW_TerStatisticsInfo::txinfo_size() const {
  return txinfo_.size();
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::clear_txinfo() {
  txinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo& IndTerStatisticsInfoFromGW_TerStatisticsInfo::txinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txinfo)
  return txinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* IndTerStatisticsInfoFromGW_TerStatisticsInfo::mutable_txinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txinfo)
  return txinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* IndTerStatisticsInfoFromGW_TerStatisticsInfo::add_txinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txinfo)
  return txinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >&
IndTerStatisticsInfoFromGW_TerStatisticsInfo::txinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txinfo)
  return txinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >*
IndTerStatisticsInfoFromGW_TerStatisticsInfo::mutable_txinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txinfo)
  return &txinfo_;
}

// repeated .SRMsgs.IndTerStatisticsInfoFromGW.XfeInfo rxinfo = 3;
inline int IndTerStatisticsInfoFromGW_TerStatisticsInfo::rxinfo_size() const {
  return rxinfo_.size();
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::clear_rxinfo() {
  rxinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo& IndTerStatisticsInfoFromGW_TerStatisticsInfo::rxinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.rxinfo)
  return rxinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* IndTerStatisticsInfoFromGW_TerStatisticsInfo::mutable_rxinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.rxinfo)
  return rxinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo* IndTerStatisticsInfoFromGW_TerStatisticsInfo::add_rxinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.rxinfo)
  return rxinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >&
IndTerStatisticsInfoFromGW_TerStatisticsInfo::rxinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.rxinfo)
  return rxinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_XfeInfo >*
IndTerStatisticsInfoFromGW_TerStatisticsInfo::mutable_rxinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.rxinfo)
  return &rxinfo_;
}

// optional uint32 txbweresult = 4;
inline bool IndTerStatisticsInfoFromGW_TerStatisticsInfo::has_txbweresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::set_has_txbweresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::clear_has_txbweresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::clear_txbweresult() {
  txbweresult_ = 0u;
  clear_has_txbweresult();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW_TerStatisticsInfo::txbweresult() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txbweresult)
  return txbweresult_;
}
inline void IndTerStatisticsInfoFromGW_TerStatisticsInfo::set_txbweresult(::google::protobuf::uint32 value) {
  set_has_txbweresult();
  txbweresult_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo.txbweresult)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromGW

// optional uint64 confid = 1;
inline bool IndTerStatisticsInfoFromGW::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromGW::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromGW::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromGW::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndTerStatisticsInfoFromGW::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.confid)
  return confid_;
}
inline void IndTerStatisticsInfoFromGW::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.confid)
}

// optional uint32 mcid = 2;
inline bool IndTerStatisticsInfoFromGW::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromGW::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromGW::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromGW::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.mcid)
  return mcid_;
}
inline void IndTerStatisticsInfoFromGW::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.mcid)
}

// optional uint32 gwid = 3;
inline bool IndTerStatisticsInfoFromGW::has_gwid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromGW::set_has_gwid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromGW::clear_has_gwid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromGW::clear_gwid() {
  gwid_ = 0u;
  clear_has_gwid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromGW::gwid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.gwid)
  return gwid_;
}
inline void IndTerStatisticsInfoFromGW::set_gwid(::google::protobuf::uint32 value) {
  set_has_gwid();
  gwid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromGW.gwid)
}

// repeated .SRMsgs.IndTerStatisticsInfoFromGW.TerStatisticsInfo tsinfo = 4;
inline int IndTerStatisticsInfoFromGW::tsinfo_size() const {
  return tsinfo_.size();
}
inline void IndTerStatisticsInfoFromGW::clear_tsinfo() {
  tsinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo& IndTerStatisticsInfoFromGW::tsinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromGW.tsinfo)
  return tsinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo* IndTerStatisticsInfoFromGW::mutable_tsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromGW.tsinfo)
  return tsinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo* IndTerStatisticsInfoFromGW::add_tsinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromGW.tsinfo)
  return tsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo >&
IndTerStatisticsInfoFromGW::tsinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromGW.tsinfo)
  return tsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromGW_TerStatisticsInfo >*
IndTerStatisticsInfoFromGW::mutable_tsinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromGW.tsinfo)
  return &tsinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SRMsgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mc_5fgw_2eproto__INCLUDED
