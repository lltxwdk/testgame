// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mc_mp.proto

#ifndef PROTOBUF_mc_5fmp_2eproto__INCLUDED
#define PROTOBUF_mc_5fmp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SRMsgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mc_5fmp_2eproto();
void protobuf_AssignDesc_mc_5fmp_2eproto();
void protobuf_ShutdownFile_mc_5fmp_2eproto();

class ReqMPCreateMPI;
class ReqMPCreateMPI_AgcSetting;
class ReqMPCreateMPI_Confcfg;
class ReqMPCreateMPI_NetMpAddr;
class CmdMPDestoryMPI;
class IndMPTerJoined;
class IndMPTerJoined_SourceInfo;
class IndMPTerJoined_DeviceInfo;
class IndMPTerLeft;
class IndCRSChannelInfoToMp;
class IndConfAllTerMediaFormatToMP;
class IndConfAllTerMediaFormatToMP_MediaTypeAndFormat;
class IndConfAllTerMediaFormatToMP_TermsMediaFmt;
class IndMPTerMediaFormat;
class IndMPTerMediaFormat_MediaTypeAndFormat;
class IndMPTerSendMediaFormat;
class IndMPTerSendMediaFormat_MediaTypeAndFormat;
class IndMPTerRecvMediaFormat;
class IndMPTerRecvMediaFormat_MediaTypeAndFormat;
class ReqMPCreateScreen;
class ReqMPCreateScreen_TextATTR;
class ReqMPCreateScreen_TernameATTR;
class CmdMPSetScreenLayout;
class CmdMPSetScreenLayout_AutoPollInfo;
class CmdMPSetScreenLayout_ConfPollInfo;
class CmdMPSetScreenLayout_ScreenPaneInfo;
class CmdMPDestoryScreen;
class CmdMPAddSubtitle;
class CmdMPStopSubtitle;
class CmdMPDisplayTername;
class CmdMPHideTername;
class CmdMPStartSendVideo;
class CmdMPStartSendVideo_VideoSize;
class CmdMPReOpenNetMPMediaPort;
class IndMPChairTransfer;
class IndtMPTerMuteEnable;
class IndMPTerMuteAllEnable;
class IndMPTerCameraEnable;
class IndMPTerCameraEnable_SourceInfo;
class IndMCHeartBeatToMP;
class IndMPAssistVideoOn;
class IndMPAssistVideoOff;
class IndMPSpecialtypeTransfer;
class IndMPChangeVideoSourceName;
class IndMPChangeVideoSourceName_SourceInfo;
class IndMPChangeVideoSourcePriority;
class IndMPChangeVideoSourcePriority_SourceInfo;
class IndMPNewAudioSourceJoined;
class IndMPNewAudioSourceJoined_SourceInfo;
class IndMPAudioSourceLeave;
class IndMPAudioSourceLeave_SourceInfo;
class IndMPNewVideoSourceJoined;
class IndMPNewVideoSourceJoined_SourceInfo;
class IndMPVideoSourceLeave;
class IndMPVideoSourceLeave_SourceInfo;
class IndMPChangeDeviceInfos;
class IndMPChangeDeviceInfos_SourceInfo;
class IndMPChangeDeviceInfos_DeviceInfo;
class IndMPAutoPollInfo;
class IndMPAutoPollInfo_ParticipantInfo;
class IndMPAutoPollInfo_AutoPollInfo;
class IndMPChairLock;
class IndMPChairLock_SourceInfo;
class IndMPChairUnLock;
class IndMPChairUnLock_SourceInfo;
class RspMCCreateMPI;
class RspMCCreateScreen;
class CmdMPSeleteVideo;
class CmdMPSeleteVideo_TermInfo;
class CmdMPSelectAssistVideo;
class CmdMPSelectAssistVideo_TermInfo;
class IndMPHeartBeatToMC;
class IndMPLayoutInfo;
class IndMPLayoutInfo_AutoPollInfo;
class IndMPLayoutInfo_PaneInfo;
class IndMPLayoutInfo_LayoutInfo;

// ===================================================================

class ReqMPCreateMPI_AgcSetting : public ::google::protobuf::Message {
 public:
  ReqMPCreateMPI_AgcSetting();
  virtual ~ReqMPCreateMPI_AgcSetting();

  ReqMPCreateMPI_AgcSetting(const ReqMPCreateMPI_AgcSetting& from);

  inline ReqMPCreateMPI_AgcSetting& operator=(const ReqMPCreateMPI_AgcSetting& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateMPI_AgcSetting& default_instance();

  void Swap(ReqMPCreateMPI_AgcSetting* other);

  // implements Message ----------------------------------------------

  ReqMPCreateMPI_AgcSetting* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateMPI_AgcSetting& from);
  void MergeFrom(const ReqMPCreateMPI_AgcSetting& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool agc_enable = 1;
  inline bool has_agc_enable() const;
  inline void clear_agc_enable();
  static const int kAgcEnableFieldNumber = 1;
  inline bool agc_enable() const;
  inline void set_agc_enable(bool value);

  // optional int32 target_level_dbfs = 2;
  inline bool has_target_level_dbfs() const;
  inline void clear_target_level_dbfs();
  static const int kTargetLevelDbfsFieldNumber = 2;
  inline ::google::protobuf::int32 target_level_dbfs() const;
  inline void set_target_level_dbfs(::google::protobuf::int32 value);

  // optional int32 compression_gain_db = 3;
  inline bool has_compression_gain_db() const;
  inline void clear_compression_gain_db();
  static const int kCompressionGainDbFieldNumber = 3;
  inline ::google::protobuf::int32 compression_gain_db() const;
  inline void set_compression_gain_db(::google::protobuf::int32 value);

  // optional bool limiter_enable = 4;
  inline bool has_limiter_enable() const;
  inline void clear_limiter_enable();
  static const int kLimiterEnableFieldNumber = 4;
  inline bool limiter_enable() const;
  inline void set_limiter_enable(bool value);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateMPI.AgcSetting)
 private:
  inline void set_has_agc_enable();
  inline void clear_has_agc_enable();
  inline void set_has_target_level_dbfs();
  inline void clear_has_target_level_dbfs();
  inline void set_has_compression_gain_db();
  inline void clear_has_compression_gain_db();
  inline void set_has_limiter_enable();
  inline void clear_has_limiter_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 target_level_dbfs_;
  bool agc_enable_;
  bool limiter_enable_;
  ::google::protobuf::int32 compression_gain_db_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateMPI_AgcSetting* default_instance_;
};
// -------------------------------------------------------------------

class ReqMPCreateMPI_Confcfg : public ::google::protobuf::Message {
 public:
  ReqMPCreateMPI_Confcfg();
  virtual ~ReqMPCreateMPI_Confcfg();

  ReqMPCreateMPI_Confcfg(const ReqMPCreateMPI_Confcfg& from);

  inline ReqMPCreateMPI_Confcfg& operator=(const ReqMPCreateMPI_Confcfg& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateMPI_Confcfg& default_instance();

  void Swap(ReqMPCreateMPI_Confcfg* other);

  // implements Message ----------------------------------------------

  ReqMPCreateMPI_Confcfg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateMPI_Confcfg& from);
  void MergeFrom(const ReqMPCreateMPI_Confcfg& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 max_participants = 1;
  inline bool has_max_participants() const;
  inline void clear_max_participants();
  static const int kMaxParticipantsFieldNumber = 1;
  inline ::google::protobuf::uint32 max_participants() const;
  inline void set_max_participants(::google::protobuf::uint32 value);

  // optional uint32 max_audiomix_num = 2;
  inline bool has_max_audiomix_num() const;
  inline void clear_max_audiomix_num();
  static const int kMaxAudiomixNumFieldNumber = 2;
  inline ::google::protobuf::uint32 max_audiomix_num() const;
  inline void set_max_audiomix_num(::google::protobuf::uint32 value);

  // optional uint32 useVideoMixer = 3;
  inline bool has_usevideomixer() const;
  inline void clear_usevideomixer();
  static const int kUseVideoMixerFieldNumber = 3;
  inline ::google::protobuf::uint32 usevideomixer() const;
  inline void set_usevideomixer(::google::protobuf::uint32 value);

  // optional uint32 useAudioMixer = 4;
  inline bool has_useaudiomixer() const;
  inline void clear_useaudiomixer();
  static const int kUseAudioMixerFieldNumber = 4;
  inline ::google::protobuf::uint32 useaudiomixer() const;
  inline void set_useaudiomixer(::google::protobuf::uint32 value);

  // optional uint32 mixing_frequency = 5;
  inline bool has_mixing_frequency() const;
  inline void clear_mixing_frequency();
  static const int kMixingFrequencyFieldNumber = 5;
  inline ::google::protobuf::uint32 mixing_frequency() const;
  inline void set_mixing_frequency(::google::protobuf::uint32 value);

  // optional uint32 max_encoder_num = 6;
  inline bool has_max_encoder_num() const;
  inline void clear_max_encoder_num();
  static const int kMaxEncoderNumFieldNumber = 6;
  inline ::google::protobuf::uint32 max_encoder_num() const;
  inline void set_max_encoder_num(::google::protobuf::uint32 value);

  // optional .SRMsgs.ReqMPCreateMPI.AgcSetting agc_setting = 7;
  inline bool has_agc_setting() const;
  inline void clear_agc_setting();
  static const int kAgcSettingFieldNumber = 7;
  inline const ::SRMsgs::ReqMPCreateMPI_AgcSetting& agc_setting() const;
  inline ::SRMsgs::ReqMPCreateMPI_AgcSetting* mutable_agc_setting();
  inline ::SRMsgs::ReqMPCreateMPI_AgcSetting* release_agc_setting();
  inline void set_allocated_agc_setting(::SRMsgs::ReqMPCreateMPI_AgcSetting* agc_setting);

  // optional uint32 mediaencryptionalgorithm = 8;
  inline bool has_mediaencryptionalgorithm() const;
  inline void clear_mediaencryptionalgorithm();
  static const int kMediaencryptionalgorithmFieldNumber = 8;
  inline ::google::protobuf::uint32 mediaencryptionalgorithm() const;
  inline void set_mediaencryptionalgorithm(::google::protobuf::uint32 value);

  // optional bytes encryptionkey = 9;
  inline bool has_encryptionkey() const;
  inline void clear_encryptionkey();
  static const int kEncryptionkeyFieldNumber = 9;
  inline const ::std::string& encryptionkey() const;
  inline void set_encryptionkey(const ::std::string& value);
  inline void set_encryptionkey(const char* value);
  inline void set_encryptionkey(const void* value, size_t size);
  inline ::std::string* mutable_encryptionkey();
  inline ::std::string* release_encryptionkey();
  inline void set_allocated_encryptionkey(::std::string* encryptionkey);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateMPI.Confcfg)
 private:
  inline void set_has_max_participants();
  inline void clear_has_max_participants();
  inline void set_has_max_audiomix_num();
  inline void clear_has_max_audiomix_num();
  inline void set_has_usevideomixer();
  inline void clear_has_usevideomixer();
  inline void set_has_useaudiomixer();
  inline void clear_has_useaudiomixer();
  inline void set_has_mixing_frequency();
  inline void clear_has_mixing_frequency();
  inline void set_has_max_encoder_num();
  inline void clear_has_max_encoder_num();
  inline void set_has_agc_setting();
  inline void clear_has_agc_setting();
  inline void set_has_mediaencryptionalgorithm();
  inline void clear_has_mediaencryptionalgorithm();
  inline void set_has_encryptionkey();
  inline void clear_has_encryptionkey();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 max_participants_;
  ::google::protobuf::uint32 max_audiomix_num_;
  ::google::protobuf::uint32 usevideomixer_;
  ::google::protobuf::uint32 useaudiomixer_;
  ::google::protobuf::uint32 mixing_frequency_;
  ::google::protobuf::uint32 max_encoder_num_;
  ::SRMsgs::ReqMPCreateMPI_AgcSetting* agc_setting_;
  ::std::string* encryptionkey_;
  ::google::protobuf::uint32 mediaencryptionalgorithm_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateMPI_Confcfg* default_instance_;
};
// -------------------------------------------------------------------

class ReqMPCreateMPI_NetMpAddr : public ::google::protobuf::Message {
 public:
  ReqMPCreateMPI_NetMpAddr();
  virtual ~ReqMPCreateMPI_NetMpAddr();

  ReqMPCreateMPI_NetMpAddr(const ReqMPCreateMPI_NetMpAddr& from);

  inline ReqMPCreateMPI_NetMpAddr& operator=(const ReqMPCreateMPI_NetMpAddr& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateMPI_NetMpAddr& default_instance();

  void Swap(ReqMPCreateMPI_NetMpAddr* other);

  // implements Message ----------------------------------------------

  ReqMPCreateMPI_NetMpAddr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateMPI_NetMpAddr& from);
  void MergeFrom(const ReqMPCreateMPI_NetMpAddr& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 netmpid = 1;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 1;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional string netmpmediaip = 2;
  inline bool has_netmpmediaip() const;
  inline void clear_netmpmediaip();
  static const int kNetmpmediaipFieldNumber = 2;
  inline const ::std::string& netmpmediaip() const;
  inline void set_netmpmediaip(const ::std::string& value);
  inline void set_netmpmediaip(const char* value);
  inline void set_netmpmediaip(const char* value, size_t size);
  inline ::std::string* mutable_netmpmediaip();
  inline ::std::string* release_netmpmediaip();
  inline void set_allocated_netmpmediaip(::std::string* netmpmediaip);

  // optional uint32 audiodatarecvport = 3;
  inline bool has_audiodatarecvport() const;
  inline void clear_audiodatarecvport();
  static const int kAudiodatarecvportFieldNumber = 3;
  inline ::google::protobuf::uint32 audiodatarecvport() const;
  inline void set_audiodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 audioctrlrecvport = 4;
  inline bool has_audioctrlrecvport() const;
  inline void clear_audioctrlrecvport();
  static const int kAudioctrlrecvportFieldNumber = 4;
  inline ::google::protobuf::uint32 audioctrlrecvport() const;
  inline void set_audioctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 videodatarecvport = 5;
  inline bool has_videodatarecvport() const;
  inline void clear_videodatarecvport();
  static const int kVideodatarecvportFieldNumber = 5;
  inline ::google::protobuf::uint32 videodatarecvport() const;
  inline void set_videodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 videoctrlrecvport = 6;
  inline bool has_videoctrlrecvport() const;
  inline void clear_videoctrlrecvport();
  static const int kVideoctrlrecvportFieldNumber = 6;
  inline ::google::protobuf::uint32 videoctrlrecvport() const;
  inline void set_videoctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video2datarecvport = 7;
  inline bool has_video2datarecvport() const;
  inline void clear_video2datarecvport();
  static const int kVideo2DatarecvportFieldNumber = 7;
  inline ::google::protobuf::uint32 video2datarecvport() const;
  inline void set_video2datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video2ctrlrecvport = 8;
  inline bool has_video2ctrlrecvport() const;
  inline void clear_video2ctrlrecvport();
  static const int kVideo2CtrlrecvportFieldNumber = 8;
  inline ::google::protobuf::uint32 video2ctrlrecvport() const;
  inline void set_video2ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video3datarecvport = 9;
  inline bool has_video3datarecvport() const;
  inline void clear_video3datarecvport();
  static const int kVideo3DatarecvportFieldNumber = 9;
  inline ::google::protobuf::uint32 video3datarecvport() const;
  inline void set_video3datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video3ctrlrecvport = 10;
  inline bool has_video3ctrlrecvport() const;
  inline void clear_video3ctrlrecvport();
  static const int kVideo3CtrlrecvportFieldNumber = 10;
  inline ::google::protobuf::uint32 video3ctrlrecvport() const;
  inline void set_video3ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopdatarecvport = 11;
  inline bool has_desktopdatarecvport() const;
  inline void clear_desktopdatarecvport();
  static const int kDesktopdatarecvportFieldNumber = 11;
  inline ::google::protobuf::uint32 desktopdatarecvport() const;
  inline void set_desktopdatarecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopctrlrecvport = 12;
  inline bool has_desktopctrlrecvport() const;
  inline void clear_desktopctrlrecvport();
  static const int kDesktopctrlrecvportFieldNumber = 12;
  inline ::google::protobuf::uint32 desktopctrlrecvport() const;
  inline void set_desktopctrlrecvport(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateMPI.NetMpAddr)
 private:
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_netmpmediaip();
  inline void clear_has_netmpmediaip();
  inline void set_has_audiodatarecvport();
  inline void clear_has_audiodatarecvport();
  inline void set_has_audioctrlrecvport();
  inline void clear_has_audioctrlrecvport();
  inline void set_has_videodatarecvport();
  inline void clear_has_videodatarecvport();
  inline void set_has_videoctrlrecvport();
  inline void clear_has_videoctrlrecvport();
  inline void set_has_video2datarecvport();
  inline void clear_has_video2datarecvport();
  inline void set_has_video2ctrlrecvport();
  inline void clear_has_video2ctrlrecvport();
  inline void set_has_video3datarecvport();
  inline void clear_has_video3datarecvport();
  inline void set_has_video3ctrlrecvport();
  inline void clear_has_video3ctrlrecvport();
  inline void set_has_desktopdatarecvport();
  inline void clear_has_desktopdatarecvport();
  inline void set_has_desktopctrlrecvport();
  inline void clear_has_desktopctrlrecvport();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* netmpmediaip_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 audiodatarecvport_;
  ::google::protobuf::uint32 audioctrlrecvport_;
  ::google::protobuf::uint32 videodatarecvport_;
  ::google::protobuf::uint32 videoctrlrecvport_;
  ::google::protobuf::uint32 video2datarecvport_;
  ::google::protobuf::uint32 video2ctrlrecvport_;
  ::google::protobuf::uint32 video3datarecvport_;
  ::google::protobuf::uint32 video3ctrlrecvport_;
  ::google::protobuf::uint32 desktopdatarecvport_;
  ::google::protobuf::uint32 desktopctrlrecvport_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateMPI_NetMpAddr* default_instance_;
};
// -------------------------------------------------------------------

class ReqMPCreateMPI : public ::google::protobuf::Message {
 public:
  ReqMPCreateMPI();
  virtual ~ReqMPCreateMPI();

  ReqMPCreateMPI(const ReqMPCreateMPI& from);

  inline ReqMPCreateMPI& operator=(const ReqMPCreateMPI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateMPI& default_instance();

  void Swap(ReqMPCreateMPI* other);

  // implements Message ----------------------------------------------

  ReqMPCreateMPI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateMPI& from);
  void MergeFrom(const ReqMPCreateMPI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReqMPCreateMPI_AgcSetting AgcSetting;
  typedef ReqMPCreateMPI_Confcfg Confcfg;
  typedef ReqMPCreateMPI_NetMpAddr NetMpAddr;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.ReqMPCreateMPI.Confcfg confcfg = 5;
  inline bool has_confcfg() const;
  inline void clear_confcfg();
  static const int kConfcfgFieldNumber = 5;
  inline const ::SRMsgs::ReqMPCreateMPI_Confcfg& confcfg() const;
  inline ::SRMsgs::ReqMPCreateMPI_Confcfg* mutable_confcfg();
  inline ::SRMsgs::ReqMPCreateMPI_Confcfg* release_confcfg();
  inline void set_allocated_confcfg(::SRMsgs::ReqMPCreateMPI_Confcfg* confcfg);

  // optional .SRMsgs.ReqMPCreateMPI.NetMpAddr netmpaddr = 6;
  inline bool has_netmpaddr() const;
  inline void clear_netmpaddr();
  static const int kNetmpaddrFieldNumber = 6;
  inline const ::SRMsgs::ReqMPCreateMPI_NetMpAddr& netmpaddr() const;
  inline ::SRMsgs::ReqMPCreateMPI_NetMpAddr* mutable_netmpaddr();
  inline ::SRMsgs::ReqMPCreateMPI_NetMpAddr* release_netmpaddr();
  inline void set_allocated_netmpaddr(::SRMsgs::ReqMPCreateMPI_NetMpAddr* netmpaddr);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateMPI)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_confcfg();
  inline void clear_has_confcfg();
  inline void set_has_netmpaddr();
  inline void clear_has_netmpaddr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::SRMsgs::ReqMPCreateMPI_Confcfg* confcfg_;
  ::SRMsgs::ReqMPCreateMPI_NetMpAddr* netmpaddr_;
  ::google::protobuf::uint32 channelid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateMPI* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPDestoryMPI : public ::google::protobuf::Message {
 public:
  CmdMPDestoryMPI();
  virtual ~CmdMPDestoryMPI();

  CmdMPDestoryMPI(const CmdMPDestoryMPI& from);

  inline CmdMPDestoryMPI& operator=(const CmdMPDestoryMPI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPDestoryMPI& default_instance();

  void Swap(CmdMPDestoryMPI* other);

  // implements Message ----------------------------------------------

  CmdMPDestoryMPI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPDestoryMPI& from);
  void MergeFrom(const CmdMPDestoryMPI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional string reason = 5;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 5;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPDestoryMPI)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::std::string* reason_;
  ::google::protobuf::uint32 channelid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPDestoryMPI* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerJoined_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPTerJoined_SourceInfo();
  virtual ~IndMPTerJoined_SourceInfo();

  IndMPTerJoined_SourceInfo(const IndMPTerJoined_SourceInfo& from);

  inline IndMPTerJoined_SourceInfo& operator=(const IndMPTerJoined_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerJoined_SourceInfo& default_instance();

  void Swap(IndMPTerJoined_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPTerJoined_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerJoined_SourceInfo& from);
  void MergeFrom(const IndMPTerJoined_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool isOn = 3;
  inline bool has_ison() const;
  inline void clear_ison();
  static const int kIsOnFieldNumber = 3;
  inline bool ison() const;
  inline void set_ison(bool value);

  // optional uint32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerJoined.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_ison();
  inline void clear_has_ison();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  bool ison_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerJoined_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerJoined_DeviceInfo : public ::google::protobuf::Message {
 public:
  IndMPTerJoined_DeviceInfo();
  virtual ~IndMPTerJoined_DeviceInfo();

  IndMPTerJoined_DeviceInfo(const IndMPTerJoined_DeviceInfo& from);

  inline IndMPTerJoined_DeviceInfo& operator=(const IndMPTerJoined_DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerJoined_DeviceInfo& default_instance();

  void Swap(IndMPTerJoined_DeviceInfo* other);

  // implements Message ----------------------------------------------

  IndMPTerJoined_DeviceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerJoined_DeviceInfo& from);
  void MergeFrom(const IndMPTerJoined_DeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPTerJoined.SourceInfo srcinfos = 2;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 2;
  inline const ::SRMsgs::IndMPTerJoined_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPTerJoined_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPTerJoined_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerJoined.DeviceInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_SourceInfo > srcinfos_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerJoined_DeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerJoined : public ::google::protobuf::Message {
 public:
  IndMPTerJoined();
  virtual ~IndMPTerJoined();

  IndMPTerJoined(const IndMPTerJoined& from);

  inline IndMPTerJoined& operator=(const IndMPTerJoined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerJoined& default_instance();

  void Swap(IndMPTerJoined* other);

  // implements Message ----------------------------------------------

  IndMPTerJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerJoined& from);
  void MergeFrom(const IndMPTerJoined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPTerJoined_SourceInfo SourceInfo;
  typedef IndMPTerJoined_DeviceInfo DeviceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 termtype = 6;
  inline bool has_termtype() const;
  inline void clear_termtype();
  static const int kTermtypeFieldNumber = 6;
  inline ::google::protobuf::uint32 termtype() const;
  inline void set_termtype(::google::protobuf::uint32 value);

  // optional uint32 fromtype = 7;
  inline bool has_fromtype() const;
  inline void clear_fromtype();
  static const int kFromtypeFieldNumber = 7;
  inline ::google::protobuf::uint32 fromtype() const;
  inline void set_fromtype(::google::protobuf::uint32 value);

  // optional string tername = 8;
  inline bool has_tername() const;
  inline void clear_tername();
  static const int kTernameFieldNumber = 8;
  inline const ::std::string& tername() const;
  inline void set_tername(const ::std::string& value);
  inline void set_tername(const char* value);
  inline void set_tername(const char* value, size_t size);
  inline ::std::string* mutable_tername();
  inline ::std::string* release_tername();
  inline void set_allocated_tername(::std::string* tername);

  // optional uint32 specialtype = 9;
  inline bool has_specialtype() const;
  inline void clear_specialtype();
  static const int kSpecialtypeFieldNumber = 9;
  inline ::google::protobuf::uint32 specialtype() const;
  inline void set_specialtype(::google::protobuf::uint32 value);

  // optional uint32 gmrtype = 10;
  inline bool has_gmrtype() const;
  inline void clear_gmrtype();
  static const int kGmrtypeFieldNumber = 10;
  inline ::google::protobuf::uint32 gmrtype() const;
  inline void set_gmrtype(::google::protobuf::uint32 value);

  // optional uint32 gmrid = 11;
  inline bool has_gmrid() const;
  inline void clear_gmrid();
  static const int kGmridFieldNumber = 11;
  inline ::google::protobuf::uint32 gmrid() const;
  inline void set_gmrid(::google::protobuf::uint32 value);

  // optional string gmrname = 12;
  inline bool has_gmrname() const;
  inline void clear_gmrname();
  static const int kGmrnameFieldNumber = 12;
  inline const ::std::string& gmrname() const;
  inline void set_gmrname(const ::std::string& value);
  inline void set_gmrname(const char* value);
  inline void set_gmrname(const char* value, size_t size);
  inline ::std::string* mutable_gmrname();
  inline ::std::string* release_gmrname();
  inline void set_allocated_gmrname(::std::string* gmrname);

  // repeated .SRMsgs.IndMPTerJoined.DeviceInfo devinfos = 13;
  inline int devinfos_size() const;
  inline void clear_devinfos();
  static const int kDevinfosFieldNumber = 13;
  inline const ::SRMsgs::IndMPTerJoined_DeviceInfo& devinfos(int index) const;
  inline ::SRMsgs::IndMPTerJoined_DeviceInfo* mutable_devinfos(int index);
  inline ::SRMsgs::IndMPTerJoined_DeviceInfo* add_devinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_DeviceInfo >&
      devinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_DeviceInfo >*
      mutable_devinfos();

  // optional uint32 suid = 14;
  inline bool has_suid() const;
  inline void clear_suid();
  static const int kSuidFieldNumber = 14;
  inline ::google::protobuf::uint32 suid() const;
  inline void set_suid(::google::protobuf::uint32 value);

  // optional uint32 producttype = 15;
  inline bool has_producttype() const;
  inline void clear_producttype();
  static const int kProducttypeFieldNumber = 15;
  inline ::google::protobuf::uint32 producttype() const;
  inline void set_producttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerJoined)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_termtype();
  inline void clear_has_termtype();
  inline void set_has_fromtype();
  inline void clear_has_fromtype();
  inline void set_has_tername();
  inline void clear_has_tername();
  inline void set_has_specialtype();
  inline void clear_has_specialtype();
  inline void set_has_gmrtype();
  inline void clear_has_gmrtype();
  inline void set_has_gmrid();
  inline void clear_has_gmrid();
  inline void set_has_gmrname();
  inline void clear_has_gmrname();
  inline void set_has_suid();
  inline void clear_has_suid();
  inline void set_has_producttype();
  inline void clear_has_producttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 termtype_;
  ::google::protobuf::uint32 fromtype_;
  ::std::string* tername_;
  ::google::protobuf::uint32 specialtype_;
  ::google::protobuf::uint32 gmrtype_;
  ::std::string* gmrname_;
  ::google::protobuf::uint32 gmrid_;
  ::google::protobuf::uint32 suid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_DeviceInfo > devinfos_;
  ::google::protobuf::uint32 producttype_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerJoined* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerLeft : public ::google::protobuf::Message {
 public:
  IndMPTerLeft();
  virtual ~IndMPTerLeft();

  IndMPTerLeft(const IndMPTerLeft& from);

  inline IndMPTerLeft& operator=(const IndMPTerLeft& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerLeft& default_instance();

  void Swap(IndMPTerLeft* other);

  // implements Message ----------------------------------------------

  IndMPTerLeft* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerLeft& from);
  void MergeFrom(const IndMPTerLeft& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 gmrtype = 6;
  inline bool has_gmrtype() const;
  inline void clear_gmrtype();
  static const int kGmrtypeFieldNumber = 6;
  inline ::google::protobuf::uint32 gmrtype() const;
  inline void set_gmrtype(::google::protobuf::uint32 value);

  // optional uint32 gmrid = 7;
  inline bool has_gmrid() const;
  inline void clear_gmrid();
  static const int kGmridFieldNumber = 7;
  inline ::google::protobuf::uint32 gmrid() const;
  inline void set_gmrid(::google::protobuf::uint32 value);

  // optional string gmrname = 8;
  inline bool has_gmrname() const;
  inline void clear_gmrname();
  static const int kGmrnameFieldNumber = 8;
  inline const ::std::string& gmrname() const;
  inline void set_gmrname(const ::std::string& value);
  inline void set_gmrname(const char* value);
  inline void set_gmrname(const char* value, size_t size);
  inline ::std::string* mutable_gmrname();
  inline ::std::string* release_gmrname();
  inline void set_allocated_gmrname(::std::string* gmrname);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerLeft)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_gmrtype();
  inline void clear_has_gmrtype();
  inline void set_has_gmrid();
  inline void clear_has_gmrid();
  inline void set_has_gmrname();
  inline void clear_has_gmrname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 gmrtype_;
  ::google::protobuf::uint32 gmrid_;
  ::std::string* gmrname_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerLeft* default_instance_;
};
// -------------------------------------------------------------------

class IndCRSChannelInfoToMp : public ::google::protobuf::Message {
 public:
  IndCRSChannelInfoToMp();
  virtual ~IndCRSChannelInfoToMp();

  IndCRSChannelInfoToMp(const IndCRSChannelInfoToMp& from);

  inline IndCRSChannelInfoToMp& operator=(const IndCRSChannelInfoToMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndCRSChannelInfoToMp& default_instance();

  void Swap(IndCRSChannelInfoToMp* other);

  // implements Message ----------------------------------------------

  IndCRSChannelInfoToMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndCRSChannelInfoToMp& from);
  void MergeFrom(const IndCRSChannelInfoToMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 crsid = 4;
  inline bool has_crsid() const;
  inline void clear_crsid();
  static const int kCrsidFieldNumber = 4;
  inline ::google::protobuf::uint32 crsid() const;
  inline void set_crsid(::google::protobuf::uint32 value);

  // optional uint32 crschannelid = 5;
  inline bool has_crschannelid() const;
  inline void clear_crschannelid();
  static const int kCrschannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 crschannelid() const;
  inline void set_crschannelid(::google::protobuf::uint32 value);

  // optional uint32 addordel = 6;
  inline bool has_addordel() const;
  inline void clear_addordel();
  static const int kAddordelFieldNumber = 6;
  inline ::google::protobuf::uint32 addordel() const;
  inline void set_addordel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndCRSChannelInfoToMp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_crsid();
  inline void clear_has_crsid();
  inline void set_has_crschannelid();
  inline void clear_has_crschannelid();
  inline void set_has_addordel();
  inline void clear_has_addordel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 crsid_;
  ::google::protobuf::uint32 crschannelid_;
  ::google::protobuf::uint32 addordel_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndCRSChannelInfoToMp* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllTerMediaFormatToMP_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndConfAllTerMediaFormatToMP_MediaTypeAndFormat();
  virtual ~IndConfAllTerMediaFormatToMP_MediaTypeAndFormat();

  IndConfAllTerMediaFormatToMP_MediaTypeAndFormat(const IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& from);

  inline IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& operator=(const IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& default_instance();

  void Swap(IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& from);
  void MergeFrom(const IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllTerMediaFormatToMP_TermsMediaFmt : public ::google::protobuf::Message {
 public:
  IndConfAllTerMediaFormatToMP_TermsMediaFmt();
  virtual ~IndConfAllTerMediaFormatToMP_TermsMediaFmt();

  IndConfAllTerMediaFormatToMP_TermsMediaFmt(const IndConfAllTerMediaFormatToMP_TermsMediaFmt& from);

  inline IndConfAllTerMediaFormatToMP_TermsMediaFmt& operator=(const IndConfAllTerMediaFormatToMP_TermsMediaFmt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllTerMediaFormatToMP_TermsMediaFmt& default_instance();

  void Swap(IndConfAllTerMediaFormatToMP_TermsMediaFmt* other);

  // implements Message ----------------------------------------------

  IndConfAllTerMediaFormatToMP_TermsMediaFmt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllTerMediaFormatToMP_TermsMediaFmt& from);
  void MergeFrom(const IndConfAllTerMediaFormatToMP_TermsMediaFmt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat sendmediaformat = 2;
  inline bool has_sendmediaformat() const;
  inline void clear_sendmediaformat();
  static const int kSendmediaformatFieldNumber = 2;
  inline const ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& sendmediaformat() const;
  inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* mutable_sendmediaformat();
  inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* release_sendmediaformat();
  inline void set_allocated_sendmediaformat(::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* sendmediaformat);

  // optional .SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat recvmediaformat = 3;
  inline bool has_recvmediaformat() const;
  inline void clear_recvmediaformat();
  static const int kRecvmediaformatFieldNumber = 3;
  inline const ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& recvmediaformat() const;
  inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* mutable_recvmediaformat();
  inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* release_recvmediaformat();
  inline void set_allocated_recvmediaformat(::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* recvmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_sendmediaformat();
  inline void clear_has_sendmediaformat();
  inline void set_has_recvmediaformat();
  inline void clear_has_recvmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* sendmediaformat_;
  ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* recvmediaformat_;
  ::google::protobuf::uint32 terid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllTerMediaFormatToMP_TermsMediaFmt* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllTerMediaFormatToMP : public ::google::protobuf::Message {
 public:
  IndConfAllTerMediaFormatToMP();
  virtual ~IndConfAllTerMediaFormatToMP();

  IndConfAllTerMediaFormatToMP(const IndConfAllTerMediaFormatToMP& from);

  inline IndConfAllTerMediaFormatToMP& operator=(const IndConfAllTerMediaFormatToMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllTerMediaFormatToMP& default_instance();

  void Swap(IndConfAllTerMediaFormatToMP* other);

  // implements Message ----------------------------------------------

  IndConfAllTerMediaFormatToMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllTerMediaFormatToMP& from);
  void MergeFrom(const IndConfAllTerMediaFormatToMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndConfAllTerMediaFormatToMP_MediaTypeAndFormat MediaTypeAndFormat;
  typedef IndConfAllTerMediaFormatToMP_TermsMediaFmt TermsMediaFmt;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt tersmediainfo = 4;
  inline int tersmediainfo_size() const;
  inline void clear_tersmediainfo();
  static const int kTersmediainfoFieldNumber = 4;
  inline const ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt& tersmediainfo(int index) const;
  inline ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt* mutable_tersmediainfo(int index);
  inline ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt* add_tersmediainfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt >&
      tersmediainfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt >*
      mutable_tersmediainfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllTerMediaFormatToMP)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt > tersmediainfo_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllTerMediaFormatToMP* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerMediaFormat_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndMPTerMediaFormat_MediaTypeAndFormat();
  virtual ~IndMPTerMediaFormat_MediaTypeAndFormat();

  IndMPTerMediaFormat_MediaTypeAndFormat(const IndMPTerMediaFormat_MediaTypeAndFormat& from);

  inline IndMPTerMediaFormat_MediaTypeAndFormat& operator=(const IndMPTerMediaFormat_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerMediaFormat_MediaTypeAndFormat& default_instance();

  void Swap(IndMPTerMediaFormat_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndMPTerMediaFormat_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerMediaFormat_MediaTypeAndFormat& from);
  void MergeFrom(const IndMPTerMediaFormat_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerMediaFormat_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerMediaFormat : public ::google::protobuf::Message {
 public:
  IndMPTerMediaFormat();
  virtual ~IndMPTerMediaFormat();

  IndMPTerMediaFormat(const IndMPTerMediaFormat& from);

  inline IndMPTerMediaFormat& operator=(const IndMPTerMediaFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerMediaFormat& default_instance();

  void Swap(IndMPTerMediaFormat* other);

  // implements Message ----------------------------------------------

  IndMPTerMediaFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerMediaFormat& from);
  void MergeFrom(const IndMPTerMediaFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPTerMediaFormat_MediaTypeAndFormat MediaTypeAndFormat;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
  inline bool has_sendmediaformat() const;
  inline void clear_sendmediaformat();
  static const int kSendmediaformatFieldNumber = 6;
  inline const ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat& sendmediaformat() const;
  inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* mutable_sendmediaformat();
  inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* release_sendmediaformat();
  inline void set_allocated_sendmediaformat(::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* sendmediaformat);

  // optional .SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat recvmediaformat = 7;
  inline bool has_recvmediaformat() const;
  inline void clear_recvmediaformat();
  static const int kRecvmediaformatFieldNumber = 7;
  inline const ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat& recvmediaformat() const;
  inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* mutable_recvmediaformat();
  inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* release_recvmediaformat();
  inline void set_allocated_recvmediaformat(::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* recvmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerMediaFormat)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_sendmediaformat();
  inline void clear_has_sendmediaformat();
  inline void set_has_recvmediaformat();
  inline void clear_has_recvmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* sendmediaformat_;
  ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* recvmediaformat_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerMediaFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerSendMediaFormat_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndMPTerSendMediaFormat_MediaTypeAndFormat();
  virtual ~IndMPTerSendMediaFormat_MediaTypeAndFormat();

  IndMPTerSendMediaFormat_MediaTypeAndFormat(const IndMPTerSendMediaFormat_MediaTypeAndFormat& from);

  inline IndMPTerSendMediaFormat_MediaTypeAndFormat& operator=(const IndMPTerSendMediaFormat_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerSendMediaFormat_MediaTypeAndFormat& default_instance();

  void Swap(IndMPTerSendMediaFormat_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndMPTerSendMediaFormat_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerSendMediaFormat_MediaTypeAndFormat& from);
  void MergeFrom(const IndMPTerSendMediaFormat_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerSendMediaFormat_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerSendMediaFormat : public ::google::protobuf::Message {
 public:
  IndMPTerSendMediaFormat();
  virtual ~IndMPTerSendMediaFormat();

  IndMPTerSendMediaFormat(const IndMPTerSendMediaFormat& from);

  inline IndMPTerSendMediaFormat& operator=(const IndMPTerSendMediaFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerSendMediaFormat& default_instance();

  void Swap(IndMPTerSendMediaFormat* other);

  // implements Message ----------------------------------------------

  IndMPTerSendMediaFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerSendMediaFormat& from);
  void MergeFrom(const IndMPTerSendMediaFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPTerSendMediaFormat_MediaTypeAndFormat MediaTypeAndFormat;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
  inline bool has_sendmediaformat() const;
  inline void clear_sendmediaformat();
  static const int kSendmediaformatFieldNumber = 6;
  inline const ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat& sendmediaformat() const;
  inline ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* mutable_sendmediaformat();
  inline ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* release_sendmediaformat();
  inline void set_allocated_sendmediaformat(::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* sendmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerSendMediaFormat)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_sendmediaformat();
  inline void clear_has_sendmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* sendmediaformat_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerSendMediaFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerRecvMediaFormat_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndMPTerRecvMediaFormat_MediaTypeAndFormat();
  virtual ~IndMPTerRecvMediaFormat_MediaTypeAndFormat();

  IndMPTerRecvMediaFormat_MediaTypeAndFormat(const IndMPTerRecvMediaFormat_MediaTypeAndFormat& from);

  inline IndMPTerRecvMediaFormat_MediaTypeAndFormat& operator=(const IndMPTerRecvMediaFormat_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerRecvMediaFormat_MediaTypeAndFormat& default_instance();

  void Swap(IndMPTerRecvMediaFormat_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndMPTerRecvMediaFormat_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerRecvMediaFormat_MediaTypeAndFormat& from);
  void MergeFrom(const IndMPTerRecvMediaFormat_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerRecvMediaFormat_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerRecvMediaFormat : public ::google::protobuf::Message {
 public:
  IndMPTerRecvMediaFormat();
  virtual ~IndMPTerRecvMediaFormat();

  IndMPTerRecvMediaFormat(const IndMPTerRecvMediaFormat& from);

  inline IndMPTerRecvMediaFormat& operator=(const IndMPTerRecvMediaFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerRecvMediaFormat& default_instance();

  void Swap(IndMPTerRecvMediaFormat* other);

  // implements Message ----------------------------------------------

  IndMPTerRecvMediaFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerRecvMediaFormat& from);
  void MergeFrom(const IndMPTerRecvMediaFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPTerRecvMediaFormat_MediaTypeAndFormat MediaTypeAndFormat;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat recvmediaformat = 6;
  inline bool has_recvmediaformat() const;
  inline void clear_recvmediaformat();
  static const int kRecvmediaformatFieldNumber = 6;
  inline const ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat& recvmediaformat() const;
  inline ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* mutable_recvmediaformat();
  inline ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* release_recvmediaformat();
  inline void set_allocated_recvmediaformat(::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* recvmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerRecvMediaFormat)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_recvmediaformat();
  inline void clear_has_recvmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* recvmediaformat_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerRecvMediaFormat* default_instance_;
};
// -------------------------------------------------------------------

class ReqMPCreateScreen_TextATTR : public ::google::protobuf::Message {
 public:
  ReqMPCreateScreen_TextATTR();
  virtual ~ReqMPCreateScreen_TextATTR();

  ReqMPCreateScreen_TextATTR(const ReqMPCreateScreen_TextATTR& from);

  inline ReqMPCreateScreen_TextATTR& operator=(const ReqMPCreateScreen_TextATTR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateScreen_TextATTR& default_instance();

  void Swap(ReqMPCreateScreen_TextATTR* other);

  // implements Message ----------------------------------------------

  ReqMPCreateScreen_TextATTR* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateScreen_TextATTR& from);
  void MergeFrom(const ReqMPCreateScreen_TextATTR& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 textpos = 1;
  inline bool has_textpos() const;
  inline void clear_textpos();
  static const int kTextposFieldNumber = 1;
  inline ::google::protobuf::uint32 textpos() const;
  inline void set_textpos(::google::protobuf::uint32 value);

  // optional string textcolor = 2;
  inline bool has_textcolor() const;
  inline void clear_textcolor();
  static const int kTextcolorFieldNumber = 2;
  inline const ::std::string& textcolor() const;
  inline void set_textcolor(const ::std::string& value);
  inline void set_textcolor(const char* value);
  inline void set_textcolor(const char* value, size_t size);
  inline ::std::string* mutable_textcolor();
  inline ::std::string* release_textcolor();
  inline void set_allocated_textcolor(::std::string* textcolor);

  // optional uint32 textFontsize = 3;
  inline bool has_textfontsize() const;
  inline void clear_textfontsize();
  static const int kTextFontsizeFieldNumber = 3;
  inline ::google::protobuf::uint32 textfontsize() const;
  inline void set_textfontsize(::google::protobuf::uint32 value);

  // optional bool enableTextBg = 4;
  inline bool has_enabletextbg() const;
  inline void clear_enabletextbg();
  static const int kEnableTextBgFieldNumber = 4;
  inline bool enabletextbg() const;
  inline void set_enabletextbg(bool value);

  // optional string textBgColor = 5;
  inline bool has_textbgcolor() const;
  inline void clear_textbgcolor();
  static const int kTextBgColorFieldNumber = 5;
  inline const ::std::string& textbgcolor() const;
  inline void set_textbgcolor(const ::std::string& value);
  inline void set_textbgcolor(const char* value);
  inline void set_textbgcolor(const char* value, size_t size);
  inline ::std::string* mutable_textbgcolor();
  inline ::std::string* release_textbgcolor();
  inline void set_allocated_textbgcolor(::std::string* textbgcolor);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateScreen.TextATTR)
 private:
  inline void set_has_textpos();
  inline void clear_has_textpos();
  inline void set_has_textcolor();
  inline void clear_has_textcolor();
  inline void set_has_textfontsize();
  inline void clear_has_textfontsize();
  inline void set_has_enabletextbg();
  inline void clear_has_enabletextbg();
  inline void set_has_textbgcolor();
  inline void clear_has_textbgcolor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* textcolor_;
  ::google::protobuf::uint32 textpos_;
  ::google::protobuf::uint32 textfontsize_;
  ::std::string* textbgcolor_;
  bool enabletextbg_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateScreen_TextATTR* default_instance_;
};
// -------------------------------------------------------------------

class ReqMPCreateScreen_TernameATTR : public ::google::protobuf::Message {
 public:
  ReqMPCreateScreen_TernameATTR();
  virtual ~ReqMPCreateScreen_TernameATTR();

  ReqMPCreateScreen_TernameATTR(const ReqMPCreateScreen_TernameATTR& from);

  inline ReqMPCreateScreen_TernameATTR& operator=(const ReqMPCreateScreen_TernameATTR& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateScreen_TernameATTR& default_instance();

  void Swap(ReqMPCreateScreen_TernameATTR* other);

  // implements Message ----------------------------------------------

  ReqMPCreateScreen_TernameATTR* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateScreen_TernameATTR& from);
  void MergeFrom(const ReqMPCreateScreen_TernameATTR& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool enableTername = 1;
  inline bool has_enabletername() const;
  inline void clear_enabletername();
  static const int kEnableTernameFieldNumber = 1;
  inline bool enabletername() const;
  inline void set_enabletername(bool value);

  // optional .SRMsgs.ReqMPCreateScreen.TextATTR ternametextattr = 2;
  inline bool has_ternametextattr() const;
  inline void clear_ternametextattr();
  static const int kTernametextattrFieldNumber = 2;
  inline const ::SRMsgs::ReqMPCreateScreen_TextATTR& ternametextattr() const;
  inline ::SRMsgs::ReqMPCreateScreen_TextATTR* mutable_ternametextattr();
  inline ::SRMsgs::ReqMPCreateScreen_TextATTR* release_ternametextattr();
  inline void set_allocated_ternametextattr(::SRMsgs::ReqMPCreateScreen_TextATTR* ternametextattr);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateScreen.TernameATTR)
 private:
  inline void set_has_enabletername();
  inline void clear_has_enabletername();
  inline void set_has_ternametextattr();
  inline void clear_has_ternametextattr();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SRMsgs::ReqMPCreateScreen_TextATTR* ternametextattr_;
  bool enabletername_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateScreen_TernameATTR* default_instance_;
};
// -------------------------------------------------------------------

class ReqMPCreateScreen : public ::google::protobuf::Message {
 public:
  ReqMPCreateScreen();
  virtual ~ReqMPCreateScreen();

  ReqMPCreateScreen(const ReqMPCreateScreen& from);

  inline ReqMPCreateScreen& operator=(const ReqMPCreateScreen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqMPCreateScreen& default_instance();

  void Swap(ReqMPCreateScreen* other);

  // implements Message ----------------------------------------------

  ReqMPCreateScreen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqMPCreateScreen& from);
  void MergeFrom(const ReqMPCreateScreen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef ReqMPCreateScreen_TextATTR TextATTR;
  typedef ReqMPCreateScreen_TernameATTR TernameATTR;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screentype = 5;
  inline bool has_screentype() const;
  inline void clear_screentype();
  static const int kScreentypeFieldNumber = 5;
  inline ::google::protobuf::uint32 screentype() const;
  inline void set_screentype(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 6;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 6;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional bool voiceActiveInd = 7;
  inline bool has_voiceactiveind() const;
  inline void clear_voiceactiveind();
  static const int kVoiceActiveIndFieldNumber = 7;
  inline bool voiceactiveind() const;
  inline void set_voiceactiveind(bool value);

  // optional string voiceActiveColor = 8;
  inline bool has_voiceactivecolor() const;
  inline void clear_voiceactivecolor();
  static const int kVoiceActiveColorFieldNumber = 8;
  inline const ::std::string& voiceactivecolor() const;
  inline void set_voiceactivecolor(const ::std::string& value);
  inline void set_voiceactivecolor(const char* value);
  inline void set_voiceactivecolor(const char* value, size_t size);
  inline ::std::string* mutable_voiceactivecolor();
  inline ::std::string* release_voiceactivecolor();
  inline void set_allocated_voiceactivecolor(::std::string* voiceactivecolor);

  // optional string chairFeccColor = 9;
  inline bool has_chairfecccolor() const;
  inline void clear_chairfecccolor();
  static const int kChairFeccColorFieldNumber = 9;
  inline const ::std::string& chairfecccolor() const;
  inline void set_chairfecccolor(const ::std::string& value);
  inline void set_chairfecccolor(const char* value);
  inline void set_chairfecccolor(const char* value, size_t size);
  inline ::std::string* mutable_chairfecccolor();
  inline ::std::string* release_chairfecccolor();
  inline void set_allocated_chairfecccolor(::std::string* chairfecccolor);

  // optional .SRMsgs.ReqMPCreateScreen.TernameATTR ternameattr = 10;
  inline bool has_ternameattr() const;
  inline void clear_ternameattr();
  static const int kTernameattrFieldNumber = 10;
  inline const ::SRMsgs::ReqMPCreateScreen_TernameATTR& ternameattr() const;
  inline ::SRMsgs::ReqMPCreateScreen_TernameATTR* mutable_ternameattr();
  inline ::SRMsgs::ReqMPCreateScreen_TernameATTR* release_ternameattr();
  inline void set_allocated_ternameattr(::SRMsgs::ReqMPCreateScreen_TernameATTR* ternameattr);

  // optional uint32 seqnum = 11;
  inline bool has_seqnum() const;
  inline void clear_seqnum();
  static const int kSeqnumFieldNumber = 11;
  inline ::google::protobuf::uint32 seqnum() const;
  inline void set_seqnum(::google::protobuf::uint32 value);

  // optional uint32 screenid = 12;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 12;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 videosize = 13;
  inline bool has_videosize() const;
  inline void clear_videosize();
  static const int kVideosizeFieldNumber = 13;
  inline ::google::protobuf::uint32 videosize() const;
  inline void set_videosize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqMPCreateScreen)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screentype();
  inline void clear_has_screentype();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_voiceactiveind();
  inline void clear_has_voiceactiveind();
  inline void set_has_voiceactivecolor();
  inline void clear_has_voiceactivecolor();
  inline void set_has_chairfecccolor();
  inline void clear_has_chairfecccolor();
  inline void set_has_ternameattr();
  inline void clear_has_ternameattr();
  inline void set_has_seqnum();
  inline void clear_has_seqnum();
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_videosize();
  inline void clear_has_videosize();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screentype_;
  ::google::protobuf::uint32 relatednetmpid_;
  bool voiceactiveind_;
  ::std::string* voiceactivecolor_;
  ::std::string* chairfecccolor_;
  ::SRMsgs::ReqMPCreateScreen_TernameATTR* ternameattr_;
  ::google::protobuf::uint32 seqnum_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::uint32 videosize_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static ReqMPCreateScreen* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSetScreenLayout_AutoPollInfo : public ::google::protobuf::Message {
 public:
  CmdMPSetScreenLayout_AutoPollInfo();
  virtual ~CmdMPSetScreenLayout_AutoPollInfo();

  CmdMPSetScreenLayout_AutoPollInfo(const CmdMPSetScreenLayout_AutoPollInfo& from);

  inline CmdMPSetScreenLayout_AutoPollInfo& operator=(const CmdMPSetScreenLayout_AutoPollInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSetScreenLayout_AutoPollInfo& default_instance();

  void Swap(CmdMPSetScreenLayout_AutoPollInfo* other);

  // implements Message ----------------------------------------------

  CmdMPSetScreenLayout_AutoPollInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSetScreenLayout_AutoPollInfo& from);
  void MergeFrom(const CmdMPSetScreenLayout_AutoPollInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 apid = 1;
  inline bool has_apid() const;
  inline void clear_apid();
  static const int kApidFieldNumber = 1;
  inline ::google::protobuf::uint64 apid() const;
  inline void set_apid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSetScreenLayout.AutoPollInfo)
 private:
  inline void set_has_apid();
  inline void clear_has_apid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 apid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSetScreenLayout_AutoPollInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSetScreenLayout_ConfPollInfo : public ::google::protobuf::Message {
 public:
  CmdMPSetScreenLayout_ConfPollInfo();
  virtual ~CmdMPSetScreenLayout_ConfPollInfo();

  CmdMPSetScreenLayout_ConfPollInfo(const CmdMPSetScreenLayout_ConfPollInfo& from);

  inline CmdMPSetScreenLayout_ConfPollInfo& operator=(const CmdMPSetScreenLayout_ConfPollInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSetScreenLayout_ConfPollInfo& default_instance();

  void Swap(CmdMPSetScreenLayout_ConfPollInfo* other);

  // implements Message ----------------------------------------------

  CmdMPSetScreenLayout_ConfPollInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSetScreenLayout_ConfPollInfo& from);
  void MergeFrom(const CmdMPSetScreenLayout_ConfPollInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSetScreenLayout.ConfPollInfo)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 terid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSetScreenLayout_ConfPollInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSetScreenLayout_ScreenPaneInfo : public ::google::protobuf::Message {
 public:
  CmdMPSetScreenLayout_ScreenPaneInfo();
  virtual ~CmdMPSetScreenLayout_ScreenPaneInfo();

  CmdMPSetScreenLayout_ScreenPaneInfo(const CmdMPSetScreenLayout_ScreenPaneInfo& from);

  inline CmdMPSetScreenLayout_ScreenPaneInfo& operator=(const CmdMPSetScreenLayout_ScreenPaneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSetScreenLayout_ScreenPaneInfo& default_instance();

  void Swap(CmdMPSetScreenLayout_ScreenPaneInfo* other);

  // implements Message ----------------------------------------------

  CmdMPSetScreenLayout_ScreenPaneInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSetScreenLayout_ScreenPaneInfo& from);
  void MergeFrom(const CmdMPSetScreenLayout_ScreenPaneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 paneindex = 1;
  inline bool has_paneindex() const;
  inline void clear_paneindex();
  static const int kPaneindexFieldNumber = 1;
  inline ::google::protobuf::uint32 paneindex() const;
  inline void set_paneindex(::google::protobuf::uint32 value);

  // optional uint32 contenttype = 2;
  inline bool has_contenttype() const;
  inline void clear_contenttype();
  static const int kContenttypeFieldNumber = 2;
  inline ::google::protobuf::uint32 contenttype() const;
  inline void set_contenttype(::google::protobuf::uint32 value);

  // optional uint32 optype = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional uint32 polltime = 4;
  inline bool has_polltime() const;
  inline void clear_polltime();
  static const int kPolltimeFieldNumber = 4;
  inline ::google::protobuf::uint32 polltime() const;
  inline void set_polltime(::google::protobuf::uint32 value);

  // optional uint32 terid = 5;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 5;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 6;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional string tername = 7;
  inline bool has_tername() const;
  inline void clear_tername();
  static const int kTernameFieldNumber = 7;
  inline const ::std::string& tername() const;
  inline void set_tername(const ::std::string& value);
  inline void set_tername(const char* value);
  inline void set_tername(const char* value, size_t size);
  inline ::std::string* mutable_tername();
  inline ::std::string* release_tername();
  inline void set_allocated_tername(::std::string* tername);

  // optional sint32 vsrcid = 8;
  inline bool has_vsrcid() const;
  inline void clear_vsrcid();
  static const int kVsrcidFieldNumber = 8;
  inline ::google::protobuf::int32 vsrcid() const;
  inline void set_vsrcid(::google::protobuf::int32 value);

  // repeated .SRMsgs.CmdMPSetScreenLayout.AutoPollInfo autopolllist = 9;
  inline int autopolllist_size() const;
  inline void clear_autopolllist();
  static const int kAutopolllistFieldNumber = 9;
  inline const ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo& autopolllist(int index) const;
  inline ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo* mutable_autopolllist(int index);
  inline ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo* add_autopolllist();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo >&
      autopolllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo >*
      mutable_autopolllist();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo)
 private:
  inline void set_has_paneindex();
  inline void clear_has_paneindex();
  inline void set_has_contenttype();
  inline void clear_has_contenttype();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_polltime();
  inline void clear_has_polltime();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_tername();
  inline void clear_has_tername();
  inline void set_has_vsrcid();
  inline void clear_has_vsrcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 paneindex_;
  ::google::protobuf::uint32 contenttype_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 polltime_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::std::string* tername_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo > autopolllist_;
  ::google::protobuf::int32 vsrcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSetScreenLayout_ScreenPaneInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSetScreenLayout : public ::google::protobuf::Message {
 public:
  CmdMPSetScreenLayout();
  virtual ~CmdMPSetScreenLayout();

  CmdMPSetScreenLayout(const CmdMPSetScreenLayout& from);

  inline CmdMPSetScreenLayout& operator=(const CmdMPSetScreenLayout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSetScreenLayout& default_instance();

  void Swap(CmdMPSetScreenLayout* other);

  // implements Message ----------------------------------------------

  CmdMPSetScreenLayout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSetScreenLayout& from);
  void MergeFrom(const CmdMPSetScreenLayout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdMPSetScreenLayout_AutoPollInfo AutoPollInfo;
  typedef CmdMPSetScreenLayout_ConfPollInfo ConfPollInfo;
  typedef CmdMPSetScreenLayout_ScreenPaneInfo ScreenPaneInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 5;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 5;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 screentype = 6;
  inline bool has_screentype() const;
  inline void clear_screentype();
  static const int kScreentypeFieldNumber = 6;
  inline ::google::protobuf::uint32 screentype() const;
  inline void set_screentype(::google::protobuf::uint32 value);

  // optional uint32 layoutmode = 7;
  inline bool has_layoutmode() const;
  inline void clear_layoutmode();
  static const int kLayoutmodeFieldNumber = 7;
  inline ::google::protobuf::uint32 layoutmode() const;
  inline void set_layoutmode(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo screenpanelist = 8;
  inline int screenpanelist_size() const;
  inline void clear_screenpanelist();
  static const int kScreenpanelistFieldNumber = 8;
  inline const ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo& screenpanelist(int index) const;
  inline ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo* mutable_screenpanelist(int index);
  inline ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo* add_screenpanelist();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo >&
      screenpanelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo >*
      mutable_screenpanelist();

  // repeated .SRMsgs.CmdMPSetScreenLayout.ConfPollInfo confpolllist = 9;
  inline int confpolllist_size() const;
  inline void clear_confpolllist();
  static const int kConfpolllistFieldNumber = 9;
  inline const ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo& confpolllist(int index) const;
  inline ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo* mutable_confpolllist(int index);
  inline ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo* add_confpolllist();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo >&
      confpolllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo >*
      mutable_confpolllist();

  // optional uint32 chairfollow = 10;
  inline bool has_chairfollow() const;
  inline void clear_chairfollow();
  static const int kChairfollowFieldNumber = 10;
  inline ::google::protobuf::uint32 chairfollow() const;
  inline void set_chairfollow(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSetScreenLayout)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_screentype();
  inline void clear_has_screentype();
  inline void set_has_layoutmode();
  inline void clear_has_layoutmode();
  inline void set_has_chairfollow();
  inline void clear_has_chairfollow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::uint32 screentype_;
  ::google::protobuf::uint32 layoutmode_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo > screenpanelist_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo > confpolllist_;
  ::google::protobuf::uint32 chairfollow_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSetScreenLayout* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPDestoryScreen : public ::google::protobuf::Message {
 public:
  CmdMPDestoryScreen();
  virtual ~CmdMPDestoryScreen();

  CmdMPDestoryScreen(const CmdMPDestoryScreen& from);

  inline CmdMPDestoryScreen& operator=(const CmdMPDestoryScreen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPDestoryScreen& default_instance();

  void Swap(CmdMPDestoryScreen* other);

  // implements Message ----------------------------------------------

  CmdMPDestoryScreen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPDestoryScreen& from);
  void MergeFrom(const CmdMPDestoryScreen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 5;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 5;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPDestoryScreen)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screenid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPDestoryScreen* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPAddSubtitle : public ::google::protobuf::Message {
 public:
  CmdMPAddSubtitle();
  virtual ~CmdMPAddSubtitle();

  CmdMPAddSubtitle(const CmdMPAddSubtitle& from);

  inline CmdMPAddSubtitle& operator=(const CmdMPAddSubtitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPAddSubtitle& default_instance();

  void Swap(CmdMPAddSubtitle* other);

  // implements Message ----------------------------------------------

  CmdMPAddSubtitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPAddSubtitle& from);
  void MergeFrom(const CmdMPAddSubtitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional string message = 4;
  inline bool has_message() const;
  inline void clear_message();
  static const int kMessageFieldNumber = 4;
  inline const ::std::string& message() const;
  inline void set_message(const ::std::string& value);
  inline void set_message(const char* value);
  inline void set_message(const char* value, size_t size);
  inline ::std::string* mutable_message();
  inline ::std::string* release_message();
  inline void set_allocated_message(::std::string* message);

  // optional uint32 msgpos = 5;
  inline bool has_msgpos() const;
  inline void clear_msgpos();
  static const int kMsgposFieldNumber = 5;
  inline ::google::protobuf::uint32 msgpos() const;
  inline void set_msgpos(::google::protobuf::uint32 value);

  // optional string msgcolor = 6;
  inline bool has_msgcolor() const;
  inline void clear_msgcolor();
  static const int kMsgcolorFieldNumber = 6;
  inline const ::std::string& msgcolor() const;
  inline void set_msgcolor(const ::std::string& value);
  inline void set_msgcolor(const char* value);
  inline void set_msgcolor(const char* value, size_t size);
  inline ::std::string* mutable_msgcolor();
  inline ::std::string* release_msgcolor();
  inline void set_allocated_msgcolor(::std::string* msgcolor);

  // optional uint32 fontsize = 7;
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontsizeFieldNumber = 7;
  inline ::google::protobuf::uint32 fontsize() const;
  inline void set_fontsize(::google::protobuf::uint32 value);

  // optional bool enablemsgbg = 8;
  inline bool has_enablemsgbg() const;
  inline void clear_enablemsgbg();
  static const int kEnablemsgbgFieldNumber = 8;
  inline bool enablemsgbg() const;
  inline void set_enablemsgbg(bool value);

  // optional string msgbgcolor = 9;
  inline bool has_msgbgcolor() const;
  inline void clear_msgbgcolor();
  static const int kMsgbgcolorFieldNumber = 9;
  inline const ::std::string& msgbgcolor() const;
  inline void set_msgbgcolor(const ::std::string& value);
  inline void set_msgbgcolor(const char* value);
  inline void set_msgbgcolor(const char* value, size_t size);
  inline ::std::string* mutable_msgbgcolor();
  inline ::std::string* release_msgbgcolor();
  inline void set_allocated_msgbgcolor(::std::string* msgbgcolor);

  // optional uint32 displaytime = 10;
  inline bool has_displaytime() const;
  inline void clear_displaytime();
  static const int kDisplaytimeFieldNumber = 10;
  inline ::google::protobuf::uint32 displaytime() const;
  inline void set_displaytime(::google::protobuf::uint32 value);

  // optional bool enablemsgroll = 11;
  inline bool has_enablemsgroll() const;
  inline void clear_enablemsgroll();
  static const int kEnablemsgrollFieldNumber = 11;
  inline bool enablemsgroll() const;
  inline void set_enablemsgroll(bool value);

  // optional uint32 rollspeed = 12;
  inline bool has_rollspeed() const;
  inline void clear_rollspeed();
  static const int kRollspeedFieldNumber = 12;
  inline ::google::protobuf::uint32 rollspeed() const;
  inline void set_rollspeed(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPAddSubtitle)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_message();
  inline void clear_has_message();
  inline void set_has_msgpos();
  inline void clear_has_msgpos();
  inline void set_has_msgcolor();
  inline void clear_has_msgcolor();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();
  inline void set_has_enablemsgbg();
  inline void clear_has_enablemsgbg();
  inline void set_has_msgbgcolor();
  inline void clear_has_msgbgcolor();
  inline void set_has_displaytime();
  inline void clear_has_displaytime();
  inline void set_has_enablemsgroll();
  inline void clear_has_enablemsgroll();
  inline void set_has_rollspeed();
  inline void clear_has_rollspeed();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::std::string* message_;
  ::std::string* msgcolor_;
  ::google::protobuf::uint32 msgpos_;
  ::google::protobuf::uint32 fontsize_;
  ::std::string* msgbgcolor_;
  bool enablemsgbg_;
  bool enablemsgroll_;
  ::google::protobuf::uint32 displaytime_;
  ::google::protobuf::uint32 rollspeed_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPAddSubtitle* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPStopSubtitle : public ::google::protobuf::Message {
 public:
  CmdMPStopSubtitle();
  virtual ~CmdMPStopSubtitle();

  CmdMPStopSubtitle(const CmdMPStopSubtitle& from);

  inline CmdMPStopSubtitle& operator=(const CmdMPStopSubtitle& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPStopSubtitle& default_instance();

  void Swap(CmdMPStopSubtitle* other);

  // implements Message ----------------------------------------------

  CmdMPStopSubtitle* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPStopSubtitle& from);
  void MergeFrom(const CmdMPStopSubtitle& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPStopSubtitle)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPStopSubtitle* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPDisplayTername : public ::google::protobuf::Message {
 public:
  CmdMPDisplayTername();
  virtual ~CmdMPDisplayTername();

  CmdMPDisplayTername(const CmdMPDisplayTername& from);

  inline CmdMPDisplayTername& operator=(const CmdMPDisplayTername& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPDisplayTername& default_instance();

  void Swap(CmdMPDisplayTername* other);

  // implements Message ----------------------------------------------

  CmdMPDisplayTername* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPDisplayTername& from);
  void MergeFrom(const CmdMPDisplayTername& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 msgpos = 4;
  inline bool has_msgpos() const;
  inline void clear_msgpos();
  static const int kMsgposFieldNumber = 4;
  inline ::google::protobuf::uint32 msgpos() const;
  inline void set_msgpos(::google::protobuf::uint32 value);

  // optional string msgcolor = 5;
  inline bool has_msgcolor() const;
  inline void clear_msgcolor();
  static const int kMsgcolorFieldNumber = 5;
  inline const ::std::string& msgcolor() const;
  inline void set_msgcolor(const ::std::string& value);
  inline void set_msgcolor(const char* value);
  inline void set_msgcolor(const char* value, size_t size);
  inline ::std::string* mutable_msgcolor();
  inline ::std::string* release_msgcolor();
  inline void set_allocated_msgcolor(::std::string* msgcolor);

  // optional uint32 fontsize = 6;
  inline bool has_fontsize() const;
  inline void clear_fontsize();
  static const int kFontsizeFieldNumber = 6;
  inline ::google::protobuf::uint32 fontsize() const;
  inline void set_fontsize(::google::protobuf::uint32 value);

  // optional bool enableMsgBg = 7;
  inline bool has_enablemsgbg() const;
  inline void clear_enablemsgbg();
  static const int kEnableMsgBgFieldNumber = 7;
  inline bool enablemsgbg() const;
  inline void set_enablemsgbg(bool value);

  // optional string msgbgcolor = 8;
  inline bool has_msgbgcolor() const;
  inline void clear_msgbgcolor();
  static const int kMsgbgcolorFieldNumber = 8;
  inline const ::std::string& msgbgcolor() const;
  inline void set_msgbgcolor(const ::std::string& value);
  inline void set_msgbgcolor(const char* value);
  inline void set_msgbgcolor(const char* value, size_t size);
  inline ::std::string* mutable_msgbgcolor();
  inline ::std::string* release_msgbgcolor();
  inline void set_allocated_msgbgcolor(::std::string* msgbgcolor);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPDisplayTername)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_msgpos();
  inline void clear_has_msgpos();
  inline void set_has_msgcolor();
  inline void clear_has_msgcolor();
  inline void set_has_fontsize();
  inline void clear_has_fontsize();
  inline void set_has_enablemsgbg();
  inline void clear_has_enablemsgbg();
  inline void set_has_msgbgcolor();
  inline void clear_has_msgbgcolor();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::std::string* msgcolor_;
  ::google::protobuf::uint32 msgpos_;
  ::google::protobuf::uint32 fontsize_;
  ::std::string* msgbgcolor_;
  bool enablemsgbg_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPDisplayTername* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPHideTername : public ::google::protobuf::Message {
 public:
  CmdMPHideTername();
  virtual ~CmdMPHideTername();

  CmdMPHideTername(const CmdMPHideTername& from);

  inline CmdMPHideTername& operator=(const CmdMPHideTername& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPHideTername& default_instance();

  void Swap(CmdMPHideTername* other);

  // implements Message ----------------------------------------------

  CmdMPHideTername* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPHideTername& from);
  void MergeFrom(const CmdMPHideTername& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPHideTername)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPHideTername* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPStartSendVideo_VideoSize : public ::google::protobuf::Message {
 public:
  CmdMPStartSendVideo_VideoSize();
  virtual ~CmdMPStartSendVideo_VideoSize();

  CmdMPStartSendVideo_VideoSize(const CmdMPStartSendVideo_VideoSize& from);

  inline CmdMPStartSendVideo_VideoSize& operator=(const CmdMPStartSendVideo_VideoSize& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPStartSendVideo_VideoSize& default_instance();

  void Swap(CmdMPStartSendVideo_VideoSize* other);

  // implements Message ----------------------------------------------

  CmdMPStartSendVideo_VideoSize* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPStartSendVideo_VideoSize& from);
  void MergeFrom(const CmdMPStartSendVideo_VideoSize& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 level = 1;
  inline bool has_level() const;
  inline void clear_level();
  static const int kLevelFieldNumber = 1;
  inline ::google::protobuf::uint32 level() const;
  inline void set_level(::google::protobuf::uint32 value);

  // optional uint32 count = 2;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 2;
  inline ::google::protobuf::uint32 count() const;
  inline void set_count(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPStartSendVideo.VideoSize)
 private:
  inline void set_has_level();
  inline void clear_has_level();
  inline void set_has_count();
  inline void clear_has_count();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 level_;
  ::google::protobuf::uint32 count_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPStartSendVideo_VideoSize* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPStartSendVideo : public ::google::protobuf::Message {
 public:
  CmdMPStartSendVideo();
  virtual ~CmdMPStartSendVideo();

  CmdMPStartSendVideo(const CmdMPStartSendVideo& from);

  inline CmdMPStartSendVideo& operator=(const CmdMPStartSendVideo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPStartSendVideo& default_instance();

  void Swap(CmdMPStartSendVideo* other);

  // implements Message ----------------------------------------------

  CmdMPStartSendVideo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPStartSendVideo& from);
  void MergeFrom(const CmdMPStartSendVideo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdMPStartSendVideo_VideoSize VideoSize;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 channelid = 2;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 2;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 3;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 3;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdMPStartSendVideo.VideoSize sendvideosize = 4;
  inline int sendvideosize_size() const;
  inline void clear_sendvideosize();
  static const int kSendvideosizeFieldNumber = 4;
  inline const ::SRMsgs::CmdMPStartSendVideo_VideoSize& sendvideosize(int index) const;
  inline ::SRMsgs::CmdMPStartSendVideo_VideoSize* mutable_sendvideosize(int index);
  inline ::SRMsgs::CmdMPStartSendVideo_VideoSize* add_sendvideosize();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPStartSendVideo_VideoSize >&
      sendvideosize() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPStartSendVideo_VideoSize >*
      mutable_sendvideosize();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPStartSendVideo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPStartSendVideo_VideoSize > sendvideosize_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPStartSendVideo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPReOpenNetMPMediaPort : public ::google::protobuf::Message {
 public:
  CmdMPReOpenNetMPMediaPort();
  virtual ~CmdMPReOpenNetMPMediaPort();

  CmdMPReOpenNetMPMediaPort(const CmdMPReOpenNetMPMediaPort& from);

  inline CmdMPReOpenNetMPMediaPort& operator=(const CmdMPReOpenNetMPMediaPort& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPReOpenNetMPMediaPort& default_instance();

  void Swap(CmdMPReOpenNetMPMediaPort* other);

  // implements Message ----------------------------------------------

  CmdMPReOpenNetMPMediaPort* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPReOpenNetMPMediaPort& from);
  void MergeFrom(const CmdMPReOpenNetMPMediaPort& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string netmpip = 1;
  inline bool has_netmpip() const;
  inline void clear_netmpip();
  static const int kNetmpipFieldNumber = 1;
  inline const ::std::string& netmpip() const;
  inline void set_netmpip(const ::std::string& value);
  inline void set_netmpip(const char* value);
  inline void set_netmpip(const char* value, size_t size);
  inline ::std::string* mutable_netmpip();
  inline ::std::string* release_netmpip();
  inline void set_allocated_netmpip(::std::string* netmpip);

  // optional uint32 audiodatarecvport = 2;
  inline bool has_audiodatarecvport() const;
  inline void clear_audiodatarecvport();
  static const int kAudiodatarecvportFieldNumber = 2;
  inline ::google::protobuf::uint32 audiodatarecvport() const;
  inline void set_audiodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 audioctrlrecvport = 3;
  inline bool has_audioctrlrecvport() const;
  inline void clear_audioctrlrecvport();
  static const int kAudioctrlrecvportFieldNumber = 3;
  inline ::google::protobuf::uint32 audioctrlrecvport() const;
  inline void set_audioctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 videodatarecvport = 4;
  inline bool has_videodatarecvport() const;
  inline void clear_videodatarecvport();
  static const int kVideodatarecvportFieldNumber = 4;
  inline ::google::protobuf::uint32 videodatarecvport() const;
  inline void set_videodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 videoctrlrecvport = 5;
  inline bool has_videoctrlrecvport() const;
  inline void clear_videoctrlrecvport();
  static const int kVideoctrlrecvportFieldNumber = 5;
  inline ::google::protobuf::uint32 videoctrlrecvport() const;
  inline void set_videoctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video2datarecvport = 6;
  inline bool has_video2datarecvport() const;
  inline void clear_video2datarecvport();
  static const int kVideo2DatarecvportFieldNumber = 6;
  inline ::google::protobuf::uint32 video2datarecvport() const;
  inline void set_video2datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video2ctrlrecvport = 7;
  inline bool has_video2ctrlrecvport() const;
  inline void clear_video2ctrlrecvport();
  static const int kVideo2CtrlrecvportFieldNumber = 7;
  inline ::google::protobuf::uint32 video2ctrlrecvport() const;
  inline void set_video2ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video3datarecvport = 8;
  inline bool has_video3datarecvport() const;
  inline void clear_video3datarecvport();
  static const int kVideo3DatarecvportFieldNumber = 8;
  inline ::google::protobuf::uint32 video3datarecvport() const;
  inline void set_video3datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video3ctrlrecvport = 9;
  inline bool has_video3ctrlrecvport() const;
  inline void clear_video3ctrlrecvport();
  static const int kVideo3CtrlrecvportFieldNumber = 9;
  inline ::google::protobuf::uint32 video3ctrlrecvport() const;
  inline void set_video3ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopdatarecvport = 10;
  inline bool has_desktopdatarecvport() const;
  inline void clear_desktopdatarecvport();
  static const int kDesktopdatarecvportFieldNumber = 10;
  inline ::google::protobuf::uint32 desktopdatarecvport() const;
  inline void set_desktopdatarecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopctrlrecvport = 11;
  inline bool has_desktopctrlrecvport() const;
  inline void clear_desktopctrlrecvport();
  static const int kDesktopctrlrecvportFieldNumber = 11;
  inline ::google::protobuf::uint32 desktopctrlrecvport() const;
  inline void set_desktopctrlrecvport(::google::protobuf::uint32 value);

  // optional uint64 confid = 12;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 12;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 13;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 13;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 14;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 14;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 15;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 15;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPReOpenNetMPMediaPort)
 private:
  inline void set_has_netmpip();
  inline void clear_has_netmpip();
  inline void set_has_audiodatarecvport();
  inline void clear_has_audiodatarecvport();
  inline void set_has_audioctrlrecvport();
  inline void clear_has_audioctrlrecvport();
  inline void set_has_videodatarecvport();
  inline void clear_has_videodatarecvport();
  inline void set_has_videoctrlrecvport();
  inline void clear_has_videoctrlrecvport();
  inline void set_has_video2datarecvport();
  inline void clear_has_video2datarecvport();
  inline void set_has_video2ctrlrecvport();
  inline void clear_has_video2ctrlrecvport();
  inline void set_has_video3datarecvport();
  inline void clear_has_video3datarecvport();
  inline void set_has_video3ctrlrecvport();
  inline void clear_has_video3ctrlrecvport();
  inline void set_has_desktopdatarecvport();
  inline void clear_has_desktopdatarecvport();
  inline void set_has_desktopctrlrecvport();
  inline void clear_has_desktopctrlrecvport();
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* netmpip_;
  ::google::protobuf::uint32 audiodatarecvport_;
  ::google::protobuf::uint32 audioctrlrecvport_;
  ::google::protobuf::uint32 videodatarecvport_;
  ::google::protobuf::uint32 videoctrlrecvport_;
  ::google::protobuf::uint32 video2datarecvport_;
  ::google::protobuf::uint32 video2ctrlrecvport_;
  ::google::protobuf::uint32 video3datarecvport_;
  ::google::protobuf::uint32 video3ctrlrecvport_;
  ::google::protobuf::uint32 desktopdatarecvport_;
  ::google::protobuf::uint32 desktopctrlrecvport_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPReOpenNetMPMediaPort* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChairTransfer : public ::google::protobuf::Message {
 public:
  IndMPChairTransfer();
  virtual ~IndMPChairTransfer();

  IndMPChairTransfer(const IndMPChairTransfer& from);

  inline IndMPChairTransfer& operator=(const IndMPChairTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChairTransfer& default_instance();

  void Swap(IndMPChairTransfer* other);

  // implements Message ----------------------------------------------

  IndMPChairTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChairTransfer& from);
  void MergeFrom(const IndMPChairTransfer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 nchterid = 4;
  inline bool has_nchterid() const;
  inline void clear_nchterid();
  static const int kNchteridFieldNumber = 4;
  inline ::google::protobuf::uint32 nchterid() const;
  inline void set_nchterid(::google::protobuf::uint32 value);

  // optional uint32 nchchannelid = 5;
  inline bool has_nchchannelid() const;
  inline void clear_nchchannelid();
  static const int kNchchannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 nchchannelid() const;
  inline void set_nchchannelid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChairTransfer)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_nchterid();
  inline void clear_has_nchterid();
  inline void set_has_nchchannelid();
  inline void clear_has_nchchannelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 nchterid_;
  ::google::protobuf::uint32 nchchannelid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChairTransfer* default_instance_;
};
// -------------------------------------------------------------------

class IndtMPTerMuteEnable : public ::google::protobuf::Message {
 public:
  IndtMPTerMuteEnable();
  virtual ~IndtMPTerMuteEnable();

  IndtMPTerMuteEnable(const IndtMPTerMuteEnable& from);

  inline IndtMPTerMuteEnable& operator=(const IndtMPTerMuteEnable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndtMPTerMuteEnable& default_instance();

  void Swap(IndtMPTerMuteEnable* other);

  // implements Message ----------------------------------------------

  IndtMPTerMuteEnable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndtMPTerMuteEnable& from);
  void MergeFrom(const IndtMPTerMuteEnable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional bool mute_enable = 6;
  inline bool has_mute_enable() const;
  inline void clear_mute_enable();
  static const int kMuteEnableFieldNumber = 6;
  inline bool mute_enable() const;
  inline void set_mute_enable(bool value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndtMPTerMuteEnable)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_mute_enable();
  inline void clear_has_mute_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  bool mute_enable_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndtMPTerMuteEnable* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerMuteAllEnable : public ::google::protobuf::Message {
 public:
  IndMPTerMuteAllEnable();
  virtual ~IndMPTerMuteAllEnable();

  IndMPTerMuteAllEnable(const IndMPTerMuteAllEnable& from);

  inline IndMPTerMuteAllEnable& operator=(const IndMPTerMuteAllEnable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerMuteAllEnable& default_instance();

  void Swap(IndMPTerMuteAllEnable* other);

  // implements Message ----------------------------------------------

  IndMPTerMuteAllEnable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerMuteAllEnable& from);
  void MergeFrom(const IndMPTerMuteAllEnable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional bool mute_all_enable = 4;
  inline bool has_mute_all_enable() const;
  inline void clear_mute_all_enable();
  static const int kMuteAllEnableFieldNumber = 4;
  inline bool mute_all_enable() const;
  inline void set_mute_all_enable(bool value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerMuteAllEnable)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_mute_all_enable();
  inline void clear_has_mute_all_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  bool mute_all_enable_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerMuteAllEnable* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerCameraEnable_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPTerCameraEnable_SourceInfo();
  virtual ~IndMPTerCameraEnable_SourceInfo();

  IndMPTerCameraEnable_SourceInfo(const IndMPTerCameraEnable_SourceInfo& from);

  inline IndMPTerCameraEnable_SourceInfo& operator=(const IndMPTerCameraEnable_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerCameraEnable_SourceInfo& default_instance();

  void Swap(IndMPTerCameraEnable_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPTerCameraEnable_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerCameraEnable_SourceInfo& from);
  void MergeFrom(const IndMPTerCameraEnable_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerCameraEnable.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerCameraEnable_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPTerCameraEnable : public ::google::protobuf::Message {
 public:
  IndMPTerCameraEnable();
  virtual ~IndMPTerCameraEnable();

  IndMPTerCameraEnable(const IndMPTerCameraEnable& from);

  inline IndMPTerCameraEnable& operator=(const IndMPTerCameraEnable& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPTerCameraEnable& default_instance();

  void Swap(IndMPTerCameraEnable* other);

  // implements Message ----------------------------------------------

  IndMPTerCameraEnable* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPTerCameraEnable& from);
  void MergeFrom(const IndMPTerCameraEnable& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPTerCameraEnable_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional bool camera_enable = 6;
  inline bool has_camera_enable() const;
  inline void clear_camera_enable();
  static const int kCameraEnableFieldNumber = 6;
  inline bool camera_enable() const;
  inline void set_camera_enable(bool value);

  // repeated .SRMsgs.IndMPTerCameraEnable.SourceInfo srcinfos = 7;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 7;
  inline const ::SRMsgs::IndMPTerCameraEnable_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPTerCameraEnable_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPTerCameraEnable_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerCameraEnable_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerCameraEnable_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPTerCameraEnable)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_camera_enable();
  inline void clear_has_camera_enable();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerCameraEnable_SourceInfo > srcinfos_;
  bool camera_enable_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPTerCameraEnable* default_instance_;
};
// -------------------------------------------------------------------

class IndMCHeartBeatToMP : public ::google::protobuf::Message {
 public:
  IndMCHeartBeatToMP();
  virtual ~IndMCHeartBeatToMP();

  IndMCHeartBeatToMP(const IndMCHeartBeatToMP& from);

  inline IndMCHeartBeatToMP& operator=(const IndMCHeartBeatToMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMCHeartBeatToMP& default_instance();

  void Swap(IndMCHeartBeatToMP* other);

  // implements Message ----------------------------------------------

  IndMCHeartBeatToMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMCHeartBeatToMP& from);
  void MergeFrom(const IndMCHeartBeatToMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 2;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 2;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMCHeartBeatToMP)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMCHeartBeatToMP* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAssistVideoOn : public ::google::protobuf::Message {
 public:
  IndMPAssistVideoOn();
  virtual ~IndMPAssistVideoOn();

  IndMPAssistVideoOn(const IndMPAssistVideoOn& from);

  inline IndMPAssistVideoOn& operator=(const IndMPAssistVideoOn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAssistVideoOn& default_instance();

  void Swap(IndMPAssistVideoOn* other);

  // implements Message ----------------------------------------------

  IndMPAssistVideoOn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAssistVideoOn& from);
  void MergeFrom(const IndMPAssistVideoOn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 avterid = 4;
  inline bool has_avterid() const;
  inline void clear_avterid();
  static const int kAvteridFieldNumber = 4;
  inline ::google::protobuf::uint32 avterid() const;
  inline void set_avterid(::google::protobuf::uint32 value);

  // optional uint32 avtype = 5;
  inline bool has_avtype() const;
  inline void clear_avtype();
  static const int kAvtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 avtype() const;
  inline void set_avtype(::google::protobuf::uint32 value);

  // optional uint32 sharedaudio = 6;
  inline bool has_sharedaudio() const;
  inline void clear_sharedaudio();
  static const int kSharedaudioFieldNumber = 6;
  inline ::google::protobuf::uint32 sharedaudio() const;
  inline void set_sharedaudio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAssistVideoOn)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_avterid();
  inline void clear_has_avterid();
  inline void set_has_avtype();
  inline void clear_has_avtype();
  inline void set_has_sharedaudio();
  inline void clear_has_sharedaudio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 avterid_;
  ::google::protobuf::uint32 avtype_;
  ::google::protobuf::uint32 sharedaudio_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAssistVideoOn* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAssistVideoOff : public ::google::protobuf::Message {
 public:
  IndMPAssistVideoOff();
  virtual ~IndMPAssistVideoOff();

  IndMPAssistVideoOff(const IndMPAssistVideoOff& from);

  inline IndMPAssistVideoOff& operator=(const IndMPAssistVideoOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAssistVideoOff& default_instance();

  void Swap(IndMPAssistVideoOff* other);

  // implements Message ----------------------------------------------

  IndMPAssistVideoOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAssistVideoOff& from);
  void MergeFrom(const IndMPAssistVideoOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 avterid = 4;
  inline bool has_avterid() const;
  inline void clear_avterid();
  static const int kAvteridFieldNumber = 4;
  inline ::google::protobuf::uint32 avterid() const;
  inline void set_avterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAssistVideoOff)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_avterid();
  inline void clear_has_avterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 avterid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAssistVideoOff* default_instance_;
};
// -------------------------------------------------------------------

class IndMPSpecialtypeTransfer : public ::google::protobuf::Message {
 public:
  IndMPSpecialtypeTransfer();
  virtual ~IndMPSpecialtypeTransfer();

  IndMPSpecialtypeTransfer(const IndMPSpecialtypeTransfer& from);

  inline IndMPSpecialtypeTransfer& operator=(const IndMPSpecialtypeTransfer& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPSpecialtypeTransfer& default_instance();

  void Swap(IndMPSpecialtypeTransfer* other);

  // implements Message ----------------------------------------------

  IndMPSpecialtypeTransfer* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPSpecialtypeTransfer& from);
  void MergeFrom(const IndMPSpecialtypeTransfer& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 nspclterid = 4;
  inline bool has_nspclterid() const;
  inline void clear_nspclterid();
  static const int kNspclteridFieldNumber = 4;
  inline ::google::protobuf::uint32 nspclterid() const;
  inline void set_nspclterid(::google::protobuf::uint32 value);

  // optional uint32 nspcltype = 5;
  inline bool has_nspcltype() const;
  inline void clear_nspcltype();
  static const int kNspcltypeFieldNumber = 5;
  inline ::google::protobuf::uint32 nspcltype() const;
  inline void set_nspcltype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPSpecialtypeTransfer)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_nspclterid();
  inline void clear_has_nspclterid();
  inline void set_has_nspcltype();
  inline void clear_has_nspcltype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 nspclterid_;
  ::google::protobuf::uint32 nspcltype_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPSpecialtypeTransfer* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeVideoSourceName_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPChangeVideoSourceName_SourceInfo();
  virtual ~IndMPChangeVideoSourceName_SourceInfo();

  IndMPChangeVideoSourceName_SourceInfo(const IndMPChangeVideoSourceName_SourceInfo& from);

  inline IndMPChangeVideoSourceName_SourceInfo& operator=(const IndMPChangeVideoSourceName_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeVideoSourceName_SourceInfo& default_instance();

  void Swap(IndMPChangeVideoSourceName_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPChangeVideoSourceName_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeVideoSourceName_SourceInfo& from);
  void MergeFrom(const IndMPChangeVideoSourceName_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeVideoSourceName.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeVideoSourceName_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeVideoSourceName : public ::google::protobuf::Message {
 public:
  IndMPChangeVideoSourceName();
  virtual ~IndMPChangeVideoSourceName();

  IndMPChangeVideoSourceName(const IndMPChangeVideoSourceName& from);

  inline IndMPChangeVideoSourceName& operator=(const IndMPChangeVideoSourceName& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeVideoSourceName& default_instance();

  void Swap(IndMPChangeVideoSourceName* other);

  // implements Message ----------------------------------------------

  IndMPChangeVideoSourceName* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeVideoSourceName& from);
  void MergeFrom(const IndMPChangeVideoSourceName& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPChangeVideoSourceName_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPChangeVideoSourceName.SourceInfo srcinfos = 6;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeVideoSourceName)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo > srcinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeVideoSourceName* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeVideoSourcePriority_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPChangeVideoSourcePriority_SourceInfo();
  virtual ~IndMPChangeVideoSourcePriority_SourceInfo();

  IndMPChangeVideoSourcePriority_SourceInfo(const IndMPChangeVideoSourcePriority_SourceInfo& from);

  inline IndMPChangeVideoSourcePriority_SourceInfo& operator=(const IndMPChangeVideoSourcePriority_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeVideoSourcePriority_SourceInfo& default_instance();

  void Swap(IndMPChangeVideoSourcePriority_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPChangeVideoSourcePriority_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeVideoSourcePriority_SourceInfo& from);
  void MergeFrom(const IndMPChangeVideoSourcePriority_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional uint32 priority = 2;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 2;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcid_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeVideoSourcePriority_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeVideoSourcePriority : public ::google::protobuf::Message {
 public:
  IndMPChangeVideoSourcePriority();
  virtual ~IndMPChangeVideoSourcePriority();

  IndMPChangeVideoSourcePriority(const IndMPChangeVideoSourcePriority& from);

  inline IndMPChangeVideoSourcePriority& operator=(const IndMPChangeVideoSourcePriority& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeVideoSourcePriority& default_instance();

  void Swap(IndMPChangeVideoSourcePriority* other);

  // implements Message ----------------------------------------------

  IndMPChangeVideoSourcePriority* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeVideoSourcePriority& from);
  void MergeFrom(const IndMPChangeVideoSourcePriority& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPChangeVideoSourcePriority_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo allsrcinfos = 6;
  inline int allsrcinfos_size() const;
  inline void clear_allsrcinfos();
  static const int kAllsrcinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo& allsrcinfos(int index) const;
  inline ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo* mutable_allsrcinfos(int index);
  inline ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo* add_allsrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo >&
      allsrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo >*
      mutable_allsrcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeVideoSourcePriority)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo > allsrcinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeVideoSourcePriority* default_instance_;
};
// -------------------------------------------------------------------

class IndMPNewAudioSourceJoined_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPNewAudioSourceJoined_SourceInfo();
  virtual ~IndMPNewAudioSourceJoined_SourceInfo();

  IndMPNewAudioSourceJoined_SourceInfo(const IndMPNewAudioSourceJoined_SourceInfo& from);

  inline IndMPNewAudioSourceJoined_SourceInfo& operator=(const IndMPNewAudioSourceJoined_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPNewAudioSourceJoined_SourceInfo& default_instance();

  void Swap(IndMPNewAudioSourceJoined_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPNewAudioSourceJoined_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPNewAudioSourceJoined_SourceInfo& from);
  void MergeFrom(const IndMPNewAudioSourceJoined_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool isOn = 3;
  inline bool has_ison() const;
  inline void clear_ison();
  static const int kIsOnFieldNumber = 3;
  inline bool ison() const;
  inline void set_ison(bool value);

  // optional uint32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_ison();
  inline void clear_has_ison();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  bool ison_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPNewAudioSourceJoined_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPNewAudioSourceJoined : public ::google::protobuf::Message {
 public:
  IndMPNewAudioSourceJoined();
  virtual ~IndMPNewAudioSourceJoined();

  IndMPNewAudioSourceJoined(const IndMPNewAudioSourceJoined& from);

  inline IndMPNewAudioSourceJoined& operator=(const IndMPNewAudioSourceJoined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPNewAudioSourceJoined& default_instance();

  void Swap(IndMPNewAudioSourceJoined* other);

  // implements Message ----------------------------------------------

  IndMPNewAudioSourceJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPNewAudioSourceJoined& from);
  void MergeFrom(const IndMPNewAudioSourceJoined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPNewAudioSourceJoined_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPNewAudioSourceJoined.SourceInfo srcinfos = 6;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPNewAudioSourceJoined)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo > srcinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPNewAudioSourceJoined* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAudioSourceLeave_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPAudioSourceLeave_SourceInfo();
  virtual ~IndMPAudioSourceLeave_SourceInfo();

  IndMPAudioSourceLeave_SourceInfo(const IndMPAudioSourceLeave_SourceInfo& from);

  inline IndMPAudioSourceLeave_SourceInfo& operator=(const IndMPAudioSourceLeave_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAudioSourceLeave_SourceInfo& default_instance();

  void Swap(IndMPAudioSourceLeave_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPAudioSourceLeave_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAudioSourceLeave_SourceInfo& from);
  void MergeFrom(const IndMPAudioSourceLeave_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAudioSourceLeave.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAudioSourceLeave_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAudioSourceLeave : public ::google::protobuf::Message {
 public:
  IndMPAudioSourceLeave();
  virtual ~IndMPAudioSourceLeave();

  IndMPAudioSourceLeave(const IndMPAudioSourceLeave& from);

  inline IndMPAudioSourceLeave& operator=(const IndMPAudioSourceLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAudioSourceLeave& default_instance();

  void Swap(IndMPAudioSourceLeave* other);

  // implements Message ----------------------------------------------

  IndMPAudioSourceLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAudioSourceLeave& from);
  void MergeFrom(const IndMPAudioSourceLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPAudioSourceLeave_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPAudioSourceLeave.SourceInfo srcinfos = 6;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPAudioSourceLeave_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPAudioSourceLeave_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPAudioSourceLeave_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAudioSourceLeave_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAudioSourceLeave_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAudioSourceLeave)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAudioSourceLeave_SourceInfo > srcinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAudioSourceLeave* default_instance_;
};
// -------------------------------------------------------------------

class IndMPNewVideoSourceJoined_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPNewVideoSourceJoined_SourceInfo();
  virtual ~IndMPNewVideoSourceJoined_SourceInfo();

  IndMPNewVideoSourceJoined_SourceInfo(const IndMPNewVideoSourceJoined_SourceInfo& from);

  inline IndMPNewVideoSourceJoined_SourceInfo& operator=(const IndMPNewVideoSourceJoined_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPNewVideoSourceJoined_SourceInfo& default_instance();

  void Swap(IndMPNewVideoSourceJoined_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPNewVideoSourceJoined_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPNewVideoSourceJoined_SourceInfo& from);
  void MergeFrom(const IndMPNewVideoSourceJoined_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool isOn = 3;
  inline bool has_ison() const;
  inline void clear_ison();
  static const int kIsOnFieldNumber = 3;
  inline bool ison() const;
  inline void set_ison(bool value);

  // optional uint32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_ison();
  inline void clear_has_ison();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  bool ison_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPNewVideoSourceJoined_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPNewVideoSourceJoined : public ::google::protobuf::Message {
 public:
  IndMPNewVideoSourceJoined();
  virtual ~IndMPNewVideoSourceJoined();

  IndMPNewVideoSourceJoined(const IndMPNewVideoSourceJoined& from);

  inline IndMPNewVideoSourceJoined& operator=(const IndMPNewVideoSourceJoined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPNewVideoSourceJoined& default_instance();

  void Swap(IndMPNewVideoSourceJoined* other);

  // implements Message ----------------------------------------------

  IndMPNewVideoSourceJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPNewVideoSourceJoined& from);
  void MergeFrom(const IndMPNewVideoSourceJoined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPNewVideoSourceJoined_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPNewVideoSourceJoined.SourceInfo newsrcinfos = 6;
  inline int newsrcinfos_size() const;
  inline void clear_newsrcinfos();
  static const int kNewsrcinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo& newsrcinfos(int index) const;
  inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* mutable_newsrcinfos(int index);
  inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* add_newsrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >&
      newsrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >*
      mutable_newsrcinfos();

  // repeated .SRMsgs.IndMPNewVideoSourceJoined.SourceInfo allsrcinfos = 7;
  inline int allsrcinfos_size() const;
  inline void clear_allsrcinfos();
  static const int kAllsrcinfosFieldNumber = 7;
  inline const ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo& allsrcinfos(int index) const;
  inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* mutable_allsrcinfos(int index);
  inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* add_allsrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >&
      allsrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >*
      mutable_allsrcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPNewVideoSourceJoined)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo > newsrcinfos_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo > allsrcinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPNewVideoSourceJoined* default_instance_;
};
// -------------------------------------------------------------------

class IndMPVideoSourceLeave_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPVideoSourceLeave_SourceInfo();
  virtual ~IndMPVideoSourceLeave_SourceInfo();

  IndMPVideoSourceLeave_SourceInfo(const IndMPVideoSourceLeave_SourceInfo& from);

  inline IndMPVideoSourceLeave_SourceInfo& operator=(const IndMPVideoSourceLeave_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPVideoSourceLeave_SourceInfo& default_instance();

  void Swap(IndMPVideoSourceLeave_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPVideoSourceLeave_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPVideoSourceLeave_SourceInfo& from);
  void MergeFrom(const IndMPVideoSourceLeave_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool isOn = 3;
  inline bool has_ison() const;
  inline void clear_ison();
  static const int kIsOnFieldNumber = 3;
  inline bool ison() const;
  inline void set_ison(bool value);

  // optional uint32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPVideoSourceLeave.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_ison();
  inline void clear_has_ison();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  bool ison_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPVideoSourceLeave_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPVideoSourceLeave : public ::google::protobuf::Message {
 public:
  IndMPVideoSourceLeave();
  virtual ~IndMPVideoSourceLeave();

  IndMPVideoSourceLeave(const IndMPVideoSourceLeave& from);

  inline IndMPVideoSourceLeave& operator=(const IndMPVideoSourceLeave& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPVideoSourceLeave& default_instance();

  void Swap(IndMPVideoSourceLeave* other);

  // implements Message ----------------------------------------------

  IndMPVideoSourceLeave* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPVideoSourceLeave& from);
  void MergeFrom(const IndMPVideoSourceLeave& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPVideoSourceLeave_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPVideoSourceLeave.SourceInfo delsrcinfos = 6;
  inline int delsrcinfos_size() const;
  inline void clear_delsrcinfos();
  static const int kDelsrcinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPVideoSourceLeave_SourceInfo& delsrcinfos(int index) const;
  inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* mutable_delsrcinfos(int index);
  inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* add_delsrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >&
      delsrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >*
      mutable_delsrcinfos();

  // repeated .SRMsgs.IndMPVideoSourceLeave.SourceInfo cursrcinfos = 7;
  inline int cursrcinfos_size() const;
  inline void clear_cursrcinfos();
  static const int kCursrcinfosFieldNumber = 7;
  inline const ::SRMsgs::IndMPVideoSourceLeave_SourceInfo& cursrcinfos(int index) const;
  inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* mutable_cursrcinfos(int index);
  inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* add_cursrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >&
      cursrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >*
      mutable_cursrcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPVideoSourceLeave)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo > delsrcinfos_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo > cursrcinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPVideoSourceLeave* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeDeviceInfos_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPChangeDeviceInfos_SourceInfo();
  virtual ~IndMPChangeDeviceInfos_SourceInfo();

  IndMPChangeDeviceInfos_SourceInfo(const IndMPChangeDeviceInfos_SourceInfo& from);

  inline IndMPChangeDeviceInfos_SourceInfo& operator=(const IndMPChangeDeviceInfos_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeDeviceInfos_SourceInfo& default_instance();

  void Swap(IndMPChangeDeviceInfos_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPChangeDeviceInfos_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeDeviceInfos_SourceInfo& from);
  void MergeFrom(const IndMPChangeDeviceInfos_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional bool isOn = 3;
  inline bool has_ison() const;
  inline void clear_ison();
  static const int kIsOnFieldNumber = 3;
  inline bool ison() const;
  inline void set_ison(bool value);

  // optional uint32 priority = 4;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 4;
  inline ::google::protobuf::uint32 priority() const;
  inline void set_priority(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeDeviceInfos.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_ison();
  inline void clear_has_ison();
  inline void set_has_priority();
  inline void clear_has_priority();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* name_;
  ::google::protobuf::uint32 srcid_;
  bool ison_;
  ::google::protobuf::uint32 priority_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeDeviceInfos_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeDeviceInfos_DeviceInfo : public ::google::protobuf::Message {
 public:
  IndMPChangeDeviceInfos_DeviceInfo();
  virtual ~IndMPChangeDeviceInfos_DeviceInfo();

  IndMPChangeDeviceInfos_DeviceInfo(const IndMPChangeDeviceInfos_DeviceInfo& from);

  inline IndMPChangeDeviceInfos_DeviceInfo& operator=(const IndMPChangeDeviceInfos_DeviceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeDeviceInfos_DeviceInfo& default_instance();

  void Swap(IndMPChangeDeviceInfos_DeviceInfo* other);

  // implements Message ----------------------------------------------

  IndMPChangeDeviceInfos_DeviceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeDeviceInfos_DeviceInfo& from);
  void MergeFrom(const IndMPChangeDeviceInfos_DeviceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPChangeDeviceInfos.SourceInfo oldsrcinfos = 2;
  inline int oldsrcinfos_size() const;
  inline void clear_oldsrcinfos();
  static const int kOldsrcinfosFieldNumber = 2;
  inline const ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo& oldsrcinfos(int index) const;
  inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* mutable_oldsrcinfos(int index);
  inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* add_oldsrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >&
      oldsrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >*
      mutable_oldsrcinfos();

  // repeated .SRMsgs.IndMPChangeDeviceInfos.SourceInfo newsrcinfos = 3;
  inline int newsrcinfos_size() const;
  inline void clear_newsrcinfos();
  static const int kNewsrcinfosFieldNumber = 3;
  inline const ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo& newsrcinfos(int index) const;
  inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* mutable_newsrcinfos(int index);
  inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* add_newsrcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >&
      newsrcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >*
      mutable_newsrcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo > oldsrcinfos_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo > newsrcinfos_;
  ::google::protobuf::uint32 type_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeDeviceInfos_DeviceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChangeDeviceInfos : public ::google::protobuf::Message {
 public:
  IndMPChangeDeviceInfos();
  virtual ~IndMPChangeDeviceInfos();

  IndMPChangeDeviceInfos(const IndMPChangeDeviceInfos& from);

  inline IndMPChangeDeviceInfos& operator=(const IndMPChangeDeviceInfos& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChangeDeviceInfos& default_instance();

  void Swap(IndMPChangeDeviceInfos* other);

  // implements Message ----------------------------------------------

  IndMPChangeDeviceInfos* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChangeDeviceInfos& from);
  void MergeFrom(const IndMPChangeDeviceInfos& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPChangeDeviceInfos_SourceInfo SourceInfo;
  typedef IndMPChangeDeviceInfos_DeviceInfo DeviceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPChangeDeviceInfos.DeviceInfo deviceinfos = 6;
  inline int deviceinfos_size() const;
  inline void clear_deviceinfos();
  static const int kDeviceinfosFieldNumber = 6;
  inline const ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo& deviceinfos(int index) const;
  inline ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo* mutable_deviceinfos(int index);
  inline ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo* add_deviceinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo >&
      deviceinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo >*
      mutable_deviceinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChangeDeviceInfos)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo > deviceinfos_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChangeDeviceInfos* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAutoPollInfo_ParticipantInfo : public ::google::protobuf::Message {
 public:
  IndMPAutoPollInfo_ParticipantInfo();
  virtual ~IndMPAutoPollInfo_ParticipantInfo();

  IndMPAutoPollInfo_ParticipantInfo(const IndMPAutoPollInfo_ParticipantInfo& from);

  inline IndMPAutoPollInfo_ParticipantInfo& operator=(const IndMPAutoPollInfo_ParticipantInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAutoPollInfo_ParticipantInfo& default_instance();

  void Swap(IndMPAutoPollInfo_ParticipantInfo* other);

  // implements Message ----------------------------------------------

  IndMPAutoPollInfo_ParticipantInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAutoPollInfo_ParticipantInfo& from);
  void MergeFrom(const IndMPAutoPollInfo_ParticipantInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 psuid = 1;
  inline bool has_psuid() const;
  inline void clear_psuid();
  static const int kPsuidFieldNumber = 1;
  inline ::google::protobuf::uint32 psuid() const;
  inline void set_psuid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAutoPollInfo.ParticipantInfo)
 private:
  inline void set_has_psuid();
  inline void clear_has_psuid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 psuid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAutoPollInfo_ParticipantInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAutoPollInfo_AutoPollInfo : public ::google::protobuf::Message {
 public:
  IndMPAutoPollInfo_AutoPollInfo();
  virtual ~IndMPAutoPollInfo_AutoPollInfo();

  IndMPAutoPollInfo_AutoPollInfo(const IndMPAutoPollInfo_AutoPollInfo& from);

  inline IndMPAutoPollInfo_AutoPollInfo& operator=(const IndMPAutoPollInfo_AutoPollInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAutoPollInfo_AutoPollInfo& default_instance();

  void Swap(IndMPAutoPollInfo_AutoPollInfo* other);

  // implements Message ----------------------------------------------

  IndMPAutoPollInfo_AutoPollInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAutoPollInfo_AutoPollInfo& from);
  void MergeFrom(const IndMPAutoPollInfo_AutoPollInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 apid = 1;
  inline bool has_apid() const;
  inline void clear_apid();
  static const int kApidFieldNumber = 1;
  inline ::google::protobuf::uint64 apid() const;
  inline void set_apid(::google::protobuf::uint64 value);

  // optional string apname = 2;
  inline bool has_apname() const;
  inline void clear_apname();
  static const int kApnameFieldNumber = 2;
  inline const ::std::string& apname() const;
  inline void set_apname(const ::std::string& value);
  inline void set_apname(const char* value);
  inline void set_apname(const char* value, size_t size);
  inline ::std::string* mutable_apname();
  inline ::std::string* release_apname();
  inline void set_allocated_apname(::std::string* apname);

  // optional uint32 addordel = 3;
  inline bool has_addordel() const;
  inline void clear_addordel();
  static const int kAddordelFieldNumber = 3;
  inline ::google::protobuf::uint32 addordel() const;
  inline void set_addordel(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPAutoPollInfo.ParticipantInfo parts = 4;
  inline int parts_size() const;
  inline void clear_parts();
  static const int kPartsFieldNumber = 4;
  inline const ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo& parts(int index) const;
  inline ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo* mutable_parts(int index);
  inline ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo* add_parts();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo >&
      parts() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo >*
      mutable_parts();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAutoPollInfo.AutoPollInfo)
 private:
  inline void set_has_apid();
  inline void clear_has_apid();
  inline void set_has_apname();
  inline void clear_has_apname();
  inline void set_has_addordel();
  inline void clear_has_addordel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 apid_;
  ::std::string* apname_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo > parts_;
  ::google::protobuf::uint32 addordel_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAutoPollInfo_AutoPollInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPAutoPollInfo : public ::google::protobuf::Message {
 public:
  IndMPAutoPollInfo();
  virtual ~IndMPAutoPollInfo();

  IndMPAutoPollInfo(const IndMPAutoPollInfo& from);

  inline IndMPAutoPollInfo& operator=(const IndMPAutoPollInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPAutoPollInfo& default_instance();

  void Swap(IndMPAutoPollInfo* other);

  // implements Message ----------------------------------------------

  IndMPAutoPollInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPAutoPollInfo& from);
  void MergeFrom(const IndMPAutoPollInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPAutoPollInfo_ParticipantInfo ParticipantInfo;
  typedef IndMPAutoPollInfo_AutoPollInfo AutoPollInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPAutoPollInfo.AutoPollInfo autopolllist = 4;
  inline int autopolllist_size() const;
  inline void clear_autopolllist();
  static const int kAutopolllistFieldNumber = 4;
  inline const ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo& autopolllist(int index) const;
  inline ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo* mutable_autopolllist(int index);
  inline ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo* add_autopolllist();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo >&
      autopolllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo >*
      mutable_autopolllist();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPAutoPollInfo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo > autopolllist_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPAutoPollInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChairLock_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPChairLock_SourceInfo();
  virtual ~IndMPChairLock_SourceInfo();

  IndMPChairLock_SourceInfo(const IndMPChairLock_SourceInfo& from);

  inline IndMPChairLock_SourceInfo& operator=(const IndMPChairLock_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChairLock_SourceInfo& default_instance();

  void Swap(IndMPChairLock_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPChairLock_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChairLock_SourceInfo& from);
  void MergeFrom(const IndMPChairLock_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChairLock.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChairLock_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChairLock : public ::google::protobuf::Message {
 public:
  IndMPChairLock();
  virtual ~IndMPChairLock();

  IndMPChairLock(const IndMPChairLock& from);

  inline IndMPChairLock& operator=(const IndMPChairLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChairLock& default_instance();

  void Swap(IndMPChairLock* other);

  // implements Message ----------------------------------------------

  IndMPChairLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChairLock& from);
  void MergeFrom(const IndMPChairLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPChairLock_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 lockedterid = 4;
  inline bool has_lockedterid() const;
  inline void clear_lockedterid();
  static const int kLockedteridFieldNumber = 4;
  inline ::google::protobuf::uint32 lockedterid() const;
  inline void set_lockedterid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPChairLock.SourceInfo srcinfos = 5;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 5;
  inline const ::SRMsgs::IndMPChairLock_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPChairLock_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPChairLock_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairLock_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairLock_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChairLock)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_lockedterid();
  inline void clear_has_lockedterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairLock_SourceInfo > srcinfos_;
  ::google::protobuf::uint32 lockedterid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChairLock* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChairUnLock_SourceInfo : public ::google::protobuf::Message {
 public:
  IndMPChairUnLock_SourceInfo();
  virtual ~IndMPChairUnLock_SourceInfo();

  IndMPChairUnLock_SourceInfo(const IndMPChairUnLock_SourceInfo& from);

  inline IndMPChairUnLock_SourceInfo& operator=(const IndMPChairUnLock_SourceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChairUnLock_SourceInfo& default_instance();

  void Swap(IndMPChairUnLock_SourceInfo* other);

  // implements Message ----------------------------------------------

  IndMPChairUnLock_SourceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChairUnLock_SourceInfo& from);
  void MergeFrom(const IndMPChairUnLock_SourceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 srcid = 1;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 1;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChairUnLock.SourceInfo)
 private:
  inline void set_has_srcid();
  inline void clear_has_srcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 srcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChairUnLock_SourceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPChairUnLock : public ::google::protobuf::Message {
 public:
  IndMPChairUnLock();
  virtual ~IndMPChairUnLock();

  IndMPChairUnLock(const IndMPChairUnLock& from);

  inline IndMPChairUnLock& operator=(const IndMPChairUnLock& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPChairUnLock& default_instance();

  void Swap(IndMPChairUnLock* other);

  // implements Message ----------------------------------------------

  IndMPChairUnLock* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPChairUnLock& from);
  void MergeFrom(const IndMPChairUnLock& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPChairUnLock_SourceInfo SourceInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 unlockedterid = 4;
  inline bool has_unlockedterid() const;
  inline void clear_unlockedterid();
  static const int kUnlockedteridFieldNumber = 4;
  inline ::google::protobuf::uint32 unlockedterid() const;
  inline void set_unlockedterid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPChairUnLock.SourceInfo srcinfos = 5;
  inline int srcinfos_size() const;
  inline void clear_srcinfos();
  static const int kSrcinfosFieldNumber = 5;
  inline const ::SRMsgs::IndMPChairUnLock_SourceInfo& srcinfos(int index) const;
  inline ::SRMsgs::IndMPChairUnLock_SourceInfo* mutable_srcinfos(int index);
  inline ::SRMsgs::IndMPChairUnLock_SourceInfo* add_srcinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairUnLock_SourceInfo >&
      srcinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairUnLock_SourceInfo >*
      mutable_srcinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPChairUnLock)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_unlockedterid();
  inline void clear_has_unlockedterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairUnLock_SourceInfo > srcinfos_;
  ::google::protobuf::uint32 unlockedterid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPChairUnLock* default_instance_;
};
// -------------------------------------------------------------------

class RspMCCreateMPI : public ::google::protobuf::Message {
 public:
  RspMCCreateMPI();
  virtual ~RspMCCreateMPI();

  RspMCCreateMPI(const RspMCCreateMPI& from);

  inline RspMCCreateMPI& operator=(const RspMCCreateMPI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspMCCreateMPI& default_instance();

  void Swap(RspMCCreateMPI* other);

  // implements Message ----------------------------------------------

  RspMCCreateMPI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspMCCreateMPI& from);
  void MergeFrom(const RspMCCreateMPI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isok = 1;
  inline bool has_isok() const;
  inline void clear_isok();
  static const int kIsokFieldNumber = 1;
  inline bool isok() const;
  inline void set_isok(bool value);

  // optional uint64 confid = 2;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 2;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 3;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 3;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 4;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 4;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 6;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 6;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional string failreason = 7;
  inline bool has_failreason() const;
  inline void clear_failreason();
  static const int kFailreasonFieldNumber = 7;
  inline const ::std::string& failreason() const;
  inline void set_failreason(const ::std::string& value);
  inline void set_failreason(const char* value);
  inline void set_failreason(const char* value, size_t size);
  inline ::std::string* mutable_failreason();
  inline ::std::string* release_failreason();
  inline void set_allocated_failreason(::std::string* failreason);

  // optional uint32 errorcode = 8;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 8;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.RspMCCreateMPI)
 private:
  inline void set_has_isok();
  inline void clear_has_isok();
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_failreason();
  inline void clear_has_failreason();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  bool isok_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  ::std::string* failreason_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static RspMCCreateMPI* default_instance_;
};
// -------------------------------------------------------------------

class RspMCCreateScreen : public ::google::protobuf::Message {
 public:
  RspMCCreateScreen();
  virtual ~RspMCCreateScreen();

  RspMCCreateScreen(const RspMCCreateScreen& from);

  inline RspMCCreateScreen& operator=(const RspMCCreateScreen& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspMCCreateScreen& default_instance();

  void Swap(RspMCCreateScreen* other);

  // implements Message ----------------------------------------------

  RspMCCreateScreen* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspMCCreateScreen& from);
  void MergeFrom(const RspMCCreateScreen& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isok = 1;
  inline bool has_isok() const;
  inline void clear_isok();
  static const int kIsokFieldNumber = 1;
  inline bool isok() const;
  inline void set_isok(bool value);

  // optional uint64 confid = 2;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 2;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 3;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 3;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 4;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 4;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 5;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 6;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 7;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 7;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 screentype = 8;
  inline bool has_screentype() const;
  inline void clear_screentype();
  static const int kScreentypeFieldNumber = 8;
  inline ::google::protobuf::uint32 screentype() const;
  inline void set_screentype(::google::protobuf::uint32 value);

  // optional string failreason = 9;
  inline bool has_failreason() const;
  inline void clear_failreason();
  static const int kFailreasonFieldNumber = 9;
  inline const ::std::string& failreason() const;
  inline void set_failreason(const ::std::string& value);
  inline void set_failreason(const char* value);
  inline void set_failreason(const char* value, size_t size);
  inline ::std::string* mutable_failreason();
  inline ::std::string* release_failreason();
  inline void set_allocated_failreason(::std::string* failreason);

  // optional uint32 seqnum = 10;
  inline bool has_seqnum() const;
  inline void clear_seqnum();
  static const int kSeqnumFieldNumber = 10;
  inline ::google::protobuf::uint32 seqnum() const;
  inline void set_seqnum(::google::protobuf::uint32 value);

  // optional uint32 errorcode = 11;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 11;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.RspMCCreateScreen)
 private:
  inline void set_has_isok();
  inline void clear_has_isok();
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_screentype();
  inline void clear_has_screentype();
  inline void set_has_failreason();
  inline void clear_has_failreason();
  inline void set_has_seqnum();
  inline void clear_has_seqnum();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  bool isok_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screenid_;
  ::std::string* failreason_;
  ::google::protobuf::uint32 screentype_;
  ::google::protobuf::uint32 seqnum_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static RspMCCreateScreen* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSeleteVideo_TermInfo : public ::google::protobuf::Message {
 public:
  CmdMPSeleteVideo_TermInfo();
  virtual ~CmdMPSeleteVideo_TermInfo();

  CmdMPSeleteVideo_TermInfo(const CmdMPSeleteVideo_TermInfo& from);

  inline CmdMPSeleteVideo_TermInfo& operator=(const CmdMPSeleteVideo_TermInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSeleteVideo_TermInfo& default_instance();

  void Swap(CmdMPSeleteVideo_TermInfo* other);

  // implements Message ----------------------------------------------

  CmdMPSeleteVideo_TermInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSeleteVideo_TermInfo& from);
  void MergeFrom(const CmdMPSeleteVideo_TermInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 2;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 2;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 videosize = 3;
  inline bool has_videosize() const;
  inline void clear_videosize();
  static const int kVideosizeFieldNumber = 3;
  inline ::google::protobuf::uint32 videosize() const;
  inline void set_videosize(::google::protobuf::uint32 value);

  // optional uint32 srcid = 4;
  inline bool has_srcid() const;
  inline void clear_srcid();
  static const int kSrcidFieldNumber = 4;
  inline ::google::protobuf::uint32 srcid() const;
  inline void set_srcid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSeleteVideo.TermInfo)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_videosize();
  inline void clear_has_videosize();
  inline void set_has_srcid();
  inline void clear_has_srcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 videosize_;
  ::google::protobuf::uint32 srcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSeleteVideo_TermInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSeleteVideo : public ::google::protobuf::Message {
 public:
  CmdMPSeleteVideo();
  virtual ~CmdMPSeleteVideo();

  CmdMPSeleteVideo(const CmdMPSeleteVideo& from);

  inline CmdMPSeleteVideo& operator=(const CmdMPSeleteVideo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSeleteVideo& default_instance();

  void Swap(CmdMPSeleteVideo* other);

  // implements Message ----------------------------------------------

  CmdMPSeleteVideo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSeleteVideo& from);
  void MergeFrom(const CmdMPSeleteVideo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdMPSeleteVideo_TermInfo TermInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 5;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 5;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdMPSeleteVideo.TermInfo seleteterinfo = 6;
  inline int seleteterinfo_size() const;
  inline void clear_seleteterinfo();
  static const int kSeleteterinfoFieldNumber = 6;
  inline const ::SRMsgs::CmdMPSeleteVideo_TermInfo& seleteterinfo(int index) const;
  inline ::SRMsgs::CmdMPSeleteVideo_TermInfo* mutable_seleteterinfo(int index);
  inline ::SRMsgs::CmdMPSeleteVideo_TermInfo* add_seleteterinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSeleteVideo_TermInfo >&
      seleteterinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSeleteVideo_TermInfo >*
      mutable_seleteterinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSeleteVideo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSeleteVideo_TermInfo > seleteterinfo_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSeleteVideo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSelectAssistVideo_TermInfo : public ::google::protobuf::Message {
 public:
  CmdMPSelectAssistVideo_TermInfo();
  virtual ~CmdMPSelectAssistVideo_TermInfo();

  CmdMPSelectAssistVideo_TermInfo(const CmdMPSelectAssistVideo_TermInfo& from);

  inline CmdMPSelectAssistVideo_TermInfo& operator=(const CmdMPSelectAssistVideo_TermInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSelectAssistVideo_TermInfo& default_instance();

  void Swap(CmdMPSelectAssistVideo_TermInfo* other);

  // implements Message ----------------------------------------------

  CmdMPSelectAssistVideo_TermInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSelectAssistVideo_TermInfo& from);
  void MergeFrom(const CmdMPSelectAssistVideo_TermInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 2;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 2;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 recvfmt = 3;
  inline bool has_recvfmt() const;
  inline void clear_recvfmt();
  static const int kRecvfmtFieldNumber = 3;
  inline ::google::protobuf::uint32 recvfmt() const;
  inline void set_recvfmt(::google::protobuf::uint32 value);

  // optional uint32 recvsize = 4;
  inline bool has_recvsize() const;
  inline void clear_recvsize();
  static const int kRecvsizeFieldNumber = 4;
  inline ::google::protobuf::uint32 recvsize() const;
  inline void set_recvsize(::google::protobuf::uint32 value);

  // optional uint32 recvavtype = 5;
  inline bool has_recvavtype() const;
  inline void clear_recvavtype();
  static const int kRecvavtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 recvavtype() const;
  inline void set_recvavtype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSelectAssistVideo.TermInfo)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_recvfmt();
  inline void clear_has_recvfmt();
  inline void set_has_recvsize();
  inline void clear_has_recvsize();
  inline void set_has_recvavtype();
  inline void clear_has_recvavtype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 recvfmt_;
  ::google::protobuf::uint32 recvsize_;
  ::google::protobuf::uint32 recvavtype_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSelectAssistVideo_TermInfo* default_instance_;
};
// -------------------------------------------------------------------

class CmdMPSelectAssistVideo : public ::google::protobuf::Message {
 public:
  CmdMPSelectAssistVideo();
  virtual ~CmdMPSelectAssistVideo();

  CmdMPSelectAssistVideo(const CmdMPSelectAssistVideo& from);

  inline CmdMPSelectAssistVideo& operator=(const CmdMPSelectAssistVideo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdMPSelectAssistVideo& default_instance();

  void Swap(CmdMPSelectAssistVideo* other);

  // implements Message ----------------------------------------------

  CmdMPSelectAssistVideo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdMPSelectAssistVideo& from);
  void MergeFrom(const CmdMPSelectAssistVideo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdMPSelectAssistVideo_TermInfo TermInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 5;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 5;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdMPSelectAssistVideo.TermInfo selectavinfo = 6;
  inline int selectavinfo_size() const;
  inline void clear_selectavinfo();
  static const int kSelectavinfoFieldNumber = 6;
  inline const ::SRMsgs::CmdMPSelectAssistVideo_TermInfo& selectavinfo(int index) const;
  inline ::SRMsgs::CmdMPSelectAssistVideo_TermInfo* mutable_selectavinfo(int index);
  inline ::SRMsgs::CmdMPSelectAssistVideo_TermInfo* add_selectavinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSelectAssistVideo_TermInfo >&
      selectavinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSelectAssistVideo_TermInfo >*
      mutable_selectavinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdMPSelectAssistVideo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSelectAssistVideo_TermInfo > selectavinfo_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static CmdMPSelectAssistVideo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPHeartBeatToMC : public ::google::protobuf::Message {
 public:
  IndMPHeartBeatToMC();
  virtual ~IndMPHeartBeatToMC();

  IndMPHeartBeatToMC(const IndMPHeartBeatToMC& from);

  inline IndMPHeartBeatToMC& operator=(const IndMPHeartBeatToMC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPHeartBeatToMC& default_instance();

  void Swap(IndMPHeartBeatToMC* other);

  // implements Message ----------------------------------------------

  IndMPHeartBeatToMC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPHeartBeatToMC& from);
  void MergeFrom(const IndMPHeartBeatToMC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 2;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 2;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPHeartBeatToMC)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPHeartBeatToMC* default_instance_;
};
// -------------------------------------------------------------------

class IndMPLayoutInfo_AutoPollInfo : public ::google::protobuf::Message {
 public:
  IndMPLayoutInfo_AutoPollInfo();
  virtual ~IndMPLayoutInfo_AutoPollInfo();

  IndMPLayoutInfo_AutoPollInfo(const IndMPLayoutInfo_AutoPollInfo& from);

  inline IndMPLayoutInfo_AutoPollInfo& operator=(const IndMPLayoutInfo_AutoPollInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPLayoutInfo_AutoPollInfo& default_instance();

  void Swap(IndMPLayoutInfo_AutoPollInfo* other);

  // implements Message ----------------------------------------------

  IndMPLayoutInfo_AutoPollInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPLayoutInfo_AutoPollInfo& from);
  void MergeFrom(const IndMPLayoutInfo_AutoPollInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 apid = 1;
  inline bool has_apid() const;
  inline void clear_apid();
  static const int kApidFieldNumber = 1;
  inline ::google::protobuf::uint64 apid() const;
  inline void set_apid(::google::protobuf::uint64 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPLayoutInfo.AutoPollInfo)
 private:
  inline void set_has_apid();
  inline void clear_has_apid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 apid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPLayoutInfo_AutoPollInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPLayoutInfo_PaneInfo : public ::google::protobuf::Message {
 public:
  IndMPLayoutInfo_PaneInfo();
  virtual ~IndMPLayoutInfo_PaneInfo();

  IndMPLayoutInfo_PaneInfo(const IndMPLayoutInfo_PaneInfo& from);

  inline IndMPLayoutInfo_PaneInfo& operator=(const IndMPLayoutInfo_PaneInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPLayoutInfo_PaneInfo& default_instance();

  void Swap(IndMPLayoutInfo_PaneInfo* other);

  // implements Message ----------------------------------------------

  IndMPLayoutInfo_PaneInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPLayoutInfo_PaneInfo& from);
  void MergeFrom(const IndMPLayoutInfo_PaneInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 paneindex = 1;
  inline bool has_paneindex() const;
  inline void clear_paneindex();
  static const int kPaneindexFieldNumber = 1;
  inline ::google::protobuf::uint32 paneindex() const;
  inline void set_paneindex(::google::protobuf::uint32 value);

  // optional uint32 contenttype = 2;
  inline bool has_contenttype() const;
  inline void clear_contenttype();
  static const int kContenttypeFieldNumber = 2;
  inline ::google::protobuf::uint32 contenttype() const;
  inline void set_contenttype(::google::protobuf::uint32 value);

  // optional uint32 optype = 3;
  inline bool has_optype() const;
  inline void clear_optype();
  static const int kOptypeFieldNumber = 3;
  inline ::google::protobuf::uint32 optype() const;
  inline void set_optype(::google::protobuf::uint32 value);

  // optional uint32 polltime = 4;
  inline bool has_polltime() const;
  inline void clear_polltime();
  static const int kPolltimeFieldNumber = 4;
  inline ::google::protobuf::uint32 polltime() const;
  inline void set_polltime(::google::protobuf::uint32 value);

  // optional uint32 terid = 5;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 5;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 6;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional string tername = 7;
  inline bool has_tername() const;
  inline void clear_tername();
  static const int kTernameFieldNumber = 7;
  inline const ::std::string& tername() const;
  inline void set_tername(const ::std::string& value);
  inline void set_tername(const char* value);
  inline void set_tername(const char* value, size_t size);
  inline ::std::string* mutable_tername();
  inline ::std::string* release_tername();
  inline void set_allocated_tername(::std::string* tername);

  // optional sint32 vsrcid = 8;
  inline bool has_vsrcid() const;
  inline void clear_vsrcid();
  static const int kVsrcidFieldNumber = 8;
  inline ::google::protobuf::int32 vsrcid() const;
  inline void set_vsrcid(::google::protobuf::int32 value);

  // repeated .SRMsgs.IndMPLayoutInfo.AutoPollInfo autopolllist = 9;
  inline int autopolllist_size() const;
  inline void clear_autopolllist();
  static const int kAutopolllistFieldNumber = 9;
  inline const ::SRMsgs::IndMPLayoutInfo_AutoPollInfo& autopolllist(int index) const;
  inline ::SRMsgs::IndMPLayoutInfo_AutoPollInfo* mutable_autopolllist(int index);
  inline ::SRMsgs::IndMPLayoutInfo_AutoPollInfo* add_autopolllist();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_AutoPollInfo >&
      autopolllist() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_AutoPollInfo >*
      mutable_autopolllist();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPLayoutInfo.PaneInfo)
 private:
  inline void set_has_paneindex();
  inline void clear_has_paneindex();
  inline void set_has_contenttype();
  inline void clear_has_contenttype();
  inline void set_has_optype();
  inline void clear_has_optype();
  inline void set_has_polltime();
  inline void clear_has_polltime();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_tername();
  inline void clear_has_tername();
  inline void set_has_vsrcid();
  inline void clear_has_vsrcid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 paneindex_;
  ::google::protobuf::uint32 contenttype_;
  ::google::protobuf::uint32 optype_;
  ::google::protobuf::uint32 polltime_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::std::string* tername_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_AutoPollInfo > autopolllist_;
  ::google::protobuf::int32 vsrcid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPLayoutInfo_PaneInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPLayoutInfo_LayoutInfo : public ::google::protobuf::Message {
 public:
  IndMPLayoutInfo_LayoutInfo();
  virtual ~IndMPLayoutInfo_LayoutInfo();

  IndMPLayoutInfo_LayoutInfo(const IndMPLayoutInfo_LayoutInfo& from);

  inline IndMPLayoutInfo_LayoutInfo& operator=(const IndMPLayoutInfo_LayoutInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPLayoutInfo_LayoutInfo& default_instance();

  void Swap(IndMPLayoutInfo_LayoutInfo* other);

  // implements Message ----------------------------------------------

  IndMPLayoutInfo_LayoutInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPLayoutInfo_LayoutInfo& from);
  void MergeFrom(const IndMPLayoutInfo_LayoutInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 screenid = 1;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 1;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 screentype = 2;
  inline bool has_screentype() const;
  inline void clear_screentype();
  static const int kScreentypeFieldNumber = 2;
  inline ::google::protobuf::uint32 screentype() const;
  inline void set_screentype(::google::protobuf::uint32 value);

  // optional uint32 layoutmode = 3;
  inline bool has_layoutmode() const;
  inline void clear_layoutmode();
  static const int kLayoutmodeFieldNumber = 3;
  inline ::google::protobuf::uint32 layoutmode() const;
  inline void set_layoutmode(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPLayoutInfo.PaneInfo panes = 4;
  inline int panes_size() const;
  inline void clear_panes();
  static const int kPanesFieldNumber = 4;
  inline const ::SRMsgs::IndMPLayoutInfo_PaneInfo& panes(int index) const;
  inline ::SRMsgs::IndMPLayoutInfo_PaneInfo* mutable_panes(int index);
  inline ::SRMsgs::IndMPLayoutInfo_PaneInfo* add_panes();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_PaneInfo >&
      panes() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_PaneInfo >*
      mutable_panes();

  // optional uint32 chairfollow = 5;
  inline bool has_chairfollow() const;
  inline void clear_chairfollow();
  static const int kChairfollowFieldNumber = 5;
  inline ::google::protobuf::uint32 chairfollow() const;
  inline void set_chairfollow(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPLayoutInfo.LayoutInfo)
 private:
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_screentype();
  inline void clear_has_screentype();
  inline void set_has_layoutmode();
  inline void clear_has_layoutmode();
  inline void set_has_chairfollow();
  inline void clear_has_chairfollow();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::uint32 screentype_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_PaneInfo > panes_;
  ::google::protobuf::uint32 layoutmode_;
  ::google::protobuf::uint32 chairfollow_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPLayoutInfo_LayoutInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndMPLayoutInfo : public ::google::protobuf::Message {
 public:
  IndMPLayoutInfo();
  virtual ~IndMPLayoutInfo();

  IndMPLayoutInfo(const IndMPLayoutInfo& from);

  inline IndMPLayoutInfo& operator=(const IndMPLayoutInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPLayoutInfo& default_instance();

  void Swap(IndMPLayoutInfo* other);

  // implements Message ----------------------------------------------

  IndMPLayoutInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPLayoutInfo& from);
  void MergeFrom(const IndMPLayoutInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndMPLayoutInfo_AutoPollInfo AutoPollInfo;
  typedef IndMPLayoutInfo_PaneInfo PaneInfo;
  typedef IndMPLayoutInfo_LayoutInfo LayoutInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 mpid = 3;
  inline bool has_mpid() const;
  inline void clear_mpid();
  static const int kMpidFieldNumber = 3;
  inline ::google::protobuf::uint32 mpid() const;
  inline void set_mpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 4;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndMPLayoutInfo.LayoutInfo layoutinfos = 5;
  inline int layoutinfos_size() const;
  inline void clear_layoutinfos();
  static const int kLayoutinfosFieldNumber = 5;
  inline const ::SRMsgs::IndMPLayoutInfo_LayoutInfo& layoutinfos(int index) const;
  inline ::SRMsgs::IndMPLayoutInfo_LayoutInfo* mutable_layoutinfos(int index);
  inline ::SRMsgs::IndMPLayoutInfo_LayoutInfo* add_layoutinfos();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_LayoutInfo >&
      layoutinfos() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_LayoutInfo >*
      mutable_layoutinfos();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPLayoutInfo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_mpid();
  inline void clear_has_mpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 mpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_LayoutInfo > layoutinfos_;
  ::google::protobuf::uint32 channelid_;
  friend void  protobuf_AddDesc_mc_5fmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPLayoutInfo* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqMPCreateMPI_AgcSetting

// optional bool agc_enable = 1;
inline bool ReqMPCreateMPI_AgcSetting::has_agc_enable() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateMPI_AgcSetting::set_has_agc_enable() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_has_agc_enable() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_agc_enable() {
  agc_enable_ = false;
  clear_has_agc_enable();
}
inline bool ReqMPCreateMPI_AgcSetting::agc_enable() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.AgcSetting.agc_enable)
  return agc_enable_;
}
inline void ReqMPCreateMPI_AgcSetting::set_agc_enable(bool value) {
  set_has_agc_enable();
  agc_enable_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.AgcSetting.agc_enable)
}

// optional int32 target_level_dbfs = 2;
inline bool ReqMPCreateMPI_AgcSetting::has_target_level_dbfs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateMPI_AgcSetting::set_has_target_level_dbfs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_has_target_level_dbfs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_target_level_dbfs() {
  target_level_dbfs_ = 0;
  clear_has_target_level_dbfs();
}
inline ::google::protobuf::int32 ReqMPCreateMPI_AgcSetting::target_level_dbfs() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.AgcSetting.target_level_dbfs)
  return target_level_dbfs_;
}
inline void ReqMPCreateMPI_AgcSetting::set_target_level_dbfs(::google::protobuf::int32 value) {
  set_has_target_level_dbfs();
  target_level_dbfs_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.AgcSetting.target_level_dbfs)
}

// optional int32 compression_gain_db = 3;
inline bool ReqMPCreateMPI_AgcSetting::has_compression_gain_db() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMPCreateMPI_AgcSetting::set_has_compression_gain_db() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_has_compression_gain_db() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_compression_gain_db() {
  compression_gain_db_ = 0;
  clear_has_compression_gain_db();
}
inline ::google::protobuf::int32 ReqMPCreateMPI_AgcSetting::compression_gain_db() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.AgcSetting.compression_gain_db)
  return compression_gain_db_;
}
inline void ReqMPCreateMPI_AgcSetting::set_compression_gain_db(::google::protobuf::int32 value) {
  set_has_compression_gain_db();
  compression_gain_db_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.AgcSetting.compression_gain_db)
}

// optional bool limiter_enable = 4;
inline bool ReqMPCreateMPI_AgcSetting::has_limiter_enable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqMPCreateMPI_AgcSetting::set_has_limiter_enable() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_has_limiter_enable() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqMPCreateMPI_AgcSetting::clear_limiter_enable() {
  limiter_enable_ = false;
  clear_has_limiter_enable();
}
inline bool ReqMPCreateMPI_AgcSetting::limiter_enable() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.AgcSetting.limiter_enable)
  return limiter_enable_;
}
inline void ReqMPCreateMPI_AgcSetting::set_limiter_enable(bool value) {
  set_has_limiter_enable();
  limiter_enable_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.AgcSetting.limiter_enable)
}

// -------------------------------------------------------------------

// ReqMPCreateMPI_Confcfg

// optional uint32 max_participants = 1;
inline bool ReqMPCreateMPI_Confcfg::has_max_participants() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_max_participants() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_max_participants() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateMPI_Confcfg::clear_max_participants() {
  max_participants_ = 0u;
  clear_has_max_participants();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::max_participants() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.max_participants)
  return max_participants_;
}
inline void ReqMPCreateMPI_Confcfg::set_max_participants(::google::protobuf::uint32 value) {
  set_has_max_participants();
  max_participants_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.max_participants)
}

// optional uint32 max_audiomix_num = 2;
inline bool ReqMPCreateMPI_Confcfg::has_max_audiomix_num() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_max_audiomix_num() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_max_audiomix_num() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateMPI_Confcfg::clear_max_audiomix_num() {
  max_audiomix_num_ = 0u;
  clear_has_max_audiomix_num();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::max_audiomix_num() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.max_audiomix_num)
  return max_audiomix_num_;
}
inline void ReqMPCreateMPI_Confcfg::set_max_audiomix_num(::google::protobuf::uint32 value) {
  set_has_max_audiomix_num();
  max_audiomix_num_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.max_audiomix_num)
}

// optional uint32 useVideoMixer = 3;
inline bool ReqMPCreateMPI_Confcfg::has_usevideomixer() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_usevideomixer() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_usevideomixer() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMPCreateMPI_Confcfg::clear_usevideomixer() {
  usevideomixer_ = 0u;
  clear_has_usevideomixer();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::usevideomixer() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.useVideoMixer)
  return usevideomixer_;
}
inline void ReqMPCreateMPI_Confcfg::set_usevideomixer(::google::protobuf::uint32 value) {
  set_has_usevideomixer();
  usevideomixer_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.useVideoMixer)
}

// optional uint32 useAudioMixer = 4;
inline bool ReqMPCreateMPI_Confcfg::has_useaudiomixer() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_useaudiomixer() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_useaudiomixer() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqMPCreateMPI_Confcfg::clear_useaudiomixer() {
  useaudiomixer_ = 0u;
  clear_has_useaudiomixer();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::useaudiomixer() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.useAudioMixer)
  return useaudiomixer_;
}
inline void ReqMPCreateMPI_Confcfg::set_useaudiomixer(::google::protobuf::uint32 value) {
  set_has_useaudiomixer();
  useaudiomixer_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.useAudioMixer)
}

// optional uint32 mixing_frequency = 5;
inline bool ReqMPCreateMPI_Confcfg::has_mixing_frequency() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_mixing_frequency() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_mixing_frequency() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqMPCreateMPI_Confcfg::clear_mixing_frequency() {
  mixing_frequency_ = 0u;
  clear_has_mixing_frequency();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::mixing_frequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.mixing_frequency)
  return mixing_frequency_;
}
inline void ReqMPCreateMPI_Confcfg::set_mixing_frequency(::google::protobuf::uint32 value) {
  set_has_mixing_frequency();
  mixing_frequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.mixing_frequency)
}

// optional uint32 max_encoder_num = 6;
inline bool ReqMPCreateMPI_Confcfg::has_max_encoder_num() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_max_encoder_num() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_max_encoder_num() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqMPCreateMPI_Confcfg::clear_max_encoder_num() {
  max_encoder_num_ = 0u;
  clear_has_max_encoder_num();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::max_encoder_num() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.max_encoder_num)
  return max_encoder_num_;
}
inline void ReqMPCreateMPI_Confcfg::set_max_encoder_num(::google::protobuf::uint32 value) {
  set_has_max_encoder_num();
  max_encoder_num_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.max_encoder_num)
}

// optional .SRMsgs.ReqMPCreateMPI.AgcSetting agc_setting = 7;
inline bool ReqMPCreateMPI_Confcfg::has_agc_setting() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_agc_setting() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_agc_setting() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqMPCreateMPI_Confcfg::clear_agc_setting() {
  if (agc_setting_ != NULL) agc_setting_->::SRMsgs::ReqMPCreateMPI_AgcSetting::Clear();
  clear_has_agc_setting();
}
inline const ::SRMsgs::ReqMPCreateMPI_AgcSetting& ReqMPCreateMPI_Confcfg::agc_setting() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.agc_setting)
  return agc_setting_ != NULL ? *agc_setting_ : *default_instance_->agc_setting_;
}
inline ::SRMsgs::ReqMPCreateMPI_AgcSetting* ReqMPCreateMPI_Confcfg::mutable_agc_setting() {
  set_has_agc_setting();
  if (agc_setting_ == NULL) agc_setting_ = new ::SRMsgs::ReqMPCreateMPI_AgcSetting;
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateMPI.Confcfg.agc_setting)
  return agc_setting_;
}
inline ::SRMsgs::ReqMPCreateMPI_AgcSetting* ReqMPCreateMPI_Confcfg::release_agc_setting() {
  clear_has_agc_setting();
  ::SRMsgs::ReqMPCreateMPI_AgcSetting* temp = agc_setting_;
  agc_setting_ = NULL;
  return temp;
}
inline void ReqMPCreateMPI_Confcfg::set_allocated_agc_setting(::SRMsgs::ReqMPCreateMPI_AgcSetting* agc_setting) {
  delete agc_setting_;
  agc_setting_ = agc_setting;
  if (agc_setting) {
    set_has_agc_setting();
  } else {
    clear_has_agc_setting();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateMPI.Confcfg.agc_setting)
}

// optional uint32 mediaencryptionalgorithm = 8;
inline bool ReqMPCreateMPI_Confcfg::has_mediaencryptionalgorithm() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_mediaencryptionalgorithm() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_mediaencryptionalgorithm() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReqMPCreateMPI_Confcfg::clear_mediaencryptionalgorithm() {
  mediaencryptionalgorithm_ = 0u;
  clear_has_mediaencryptionalgorithm();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_Confcfg::mediaencryptionalgorithm() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.mediaencryptionalgorithm)
  return mediaencryptionalgorithm_;
}
inline void ReqMPCreateMPI_Confcfg::set_mediaencryptionalgorithm(::google::protobuf::uint32 value) {
  set_has_mediaencryptionalgorithm();
  mediaencryptionalgorithm_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.mediaencryptionalgorithm)
}

// optional bytes encryptionkey = 9;
inline bool ReqMPCreateMPI_Confcfg::has_encryptionkey() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReqMPCreateMPI_Confcfg::set_has_encryptionkey() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReqMPCreateMPI_Confcfg::clear_has_encryptionkey() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReqMPCreateMPI_Confcfg::clear_encryptionkey() {
  if (encryptionkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptionkey_->clear();
  }
  clear_has_encryptionkey();
}
inline const ::std::string& ReqMPCreateMPI_Confcfg::encryptionkey() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.Confcfg.encryptionkey)
  return *encryptionkey_;
}
inline void ReqMPCreateMPI_Confcfg::set_encryptionkey(const ::std::string& value) {
  set_has_encryptionkey();
  if (encryptionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptionkey_ = new ::std::string;
  }
  encryptionkey_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.Confcfg.encryptionkey)
}
inline void ReqMPCreateMPI_Confcfg::set_encryptionkey(const char* value) {
  set_has_encryptionkey();
  if (encryptionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptionkey_ = new ::std::string;
  }
  encryptionkey_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.ReqMPCreateMPI.Confcfg.encryptionkey)
}
inline void ReqMPCreateMPI_Confcfg::set_encryptionkey(const void* value, size_t size) {
  set_has_encryptionkey();
  if (encryptionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptionkey_ = new ::std::string;
  }
  encryptionkey_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.ReqMPCreateMPI.Confcfg.encryptionkey)
}
inline ::std::string* ReqMPCreateMPI_Confcfg::mutable_encryptionkey() {
  set_has_encryptionkey();
  if (encryptionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    encryptionkey_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateMPI.Confcfg.encryptionkey)
  return encryptionkey_;
}
inline ::std::string* ReqMPCreateMPI_Confcfg::release_encryptionkey() {
  clear_has_encryptionkey();
  if (encryptionkey_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = encryptionkey_;
    encryptionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqMPCreateMPI_Confcfg::set_allocated_encryptionkey(::std::string* encryptionkey) {
  if (encryptionkey_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete encryptionkey_;
  }
  if (encryptionkey) {
    set_has_encryptionkey();
    encryptionkey_ = encryptionkey;
  } else {
    clear_has_encryptionkey();
    encryptionkey_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateMPI.Confcfg.encryptionkey)
}

// -------------------------------------------------------------------

// ReqMPCreateMPI_NetMpAddr

// optional uint32 netmpid = 1;
inline bool ReqMPCreateMPI_NetMpAddr::has_netmpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_netmpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpid)
  return netmpid_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpid)
}

// optional string netmpmediaip = 2;
inline bool ReqMPCreateMPI_NetMpAddr::has_netmpmediaip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_netmpmediaip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_netmpmediaip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_netmpmediaip() {
  if (netmpmediaip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpmediaip_->clear();
  }
  clear_has_netmpmediaip();
}
inline const ::std::string& ReqMPCreateMPI_NetMpAddr::netmpmediaip() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpmediaip)
  return *netmpmediaip_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_netmpmediaip(const ::std::string& value) {
  set_has_netmpmediaip();
  if (netmpmediaip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpmediaip_ = new ::std::string;
  }
  netmpmediaip_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpmediaip)
}
inline void ReqMPCreateMPI_NetMpAddr::set_netmpmediaip(const char* value) {
  set_has_netmpmediaip();
  if (netmpmediaip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpmediaip_ = new ::std::string;
  }
  netmpmediaip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpmediaip)
}
inline void ReqMPCreateMPI_NetMpAddr::set_netmpmediaip(const char* value, size_t size) {
  set_has_netmpmediaip();
  if (netmpmediaip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpmediaip_ = new ::std::string;
  }
  netmpmediaip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpmediaip)
}
inline ::std::string* ReqMPCreateMPI_NetMpAddr::mutable_netmpmediaip() {
  set_has_netmpmediaip();
  if (netmpmediaip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpmediaip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpmediaip)
  return netmpmediaip_;
}
inline ::std::string* ReqMPCreateMPI_NetMpAddr::release_netmpmediaip() {
  clear_has_netmpmediaip();
  if (netmpmediaip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = netmpmediaip_;
    netmpmediaip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqMPCreateMPI_NetMpAddr::set_allocated_netmpmediaip(::std::string* netmpmediaip) {
  if (netmpmediaip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete netmpmediaip_;
  }
  if (netmpmediaip) {
    set_has_netmpmediaip();
    netmpmediaip_ = netmpmediaip;
  } else {
    clear_has_netmpmediaip();
    netmpmediaip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateMPI.NetMpAddr.netmpmediaip)
}

// optional uint32 audiodatarecvport = 3;
inline bool ReqMPCreateMPI_NetMpAddr::has_audiodatarecvport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_audiodatarecvport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_audiodatarecvport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_audiodatarecvport() {
  audiodatarecvport_ = 0u;
  clear_has_audiodatarecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::audiodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.audiodatarecvport)
  return audiodatarecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_audiodatarecvport(::google::protobuf::uint32 value) {
  set_has_audiodatarecvport();
  audiodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.audiodatarecvport)
}

// optional uint32 audioctrlrecvport = 4;
inline bool ReqMPCreateMPI_NetMpAddr::has_audioctrlrecvport() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_audioctrlrecvport() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_audioctrlrecvport() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_audioctrlrecvport() {
  audioctrlrecvport_ = 0u;
  clear_has_audioctrlrecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::audioctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.audioctrlrecvport)
  return audioctrlrecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_audioctrlrecvport(::google::protobuf::uint32 value) {
  set_has_audioctrlrecvport();
  audioctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.audioctrlrecvport)
}

// optional uint32 videodatarecvport = 5;
inline bool ReqMPCreateMPI_NetMpAddr::has_videodatarecvport() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_videodatarecvport() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_videodatarecvport() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_videodatarecvport() {
  videodatarecvport_ = 0u;
  clear_has_videodatarecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::videodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.videodatarecvport)
  return videodatarecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_videodatarecvport(::google::protobuf::uint32 value) {
  set_has_videodatarecvport();
  videodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.videodatarecvport)
}

// optional uint32 videoctrlrecvport = 6;
inline bool ReqMPCreateMPI_NetMpAddr::has_videoctrlrecvport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_videoctrlrecvport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_videoctrlrecvport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_videoctrlrecvport() {
  videoctrlrecvport_ = 0u;
  clear_has_videoctrlrecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::videoctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.videoctrlrecvport)
  return videoctrlrecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_videoctrlrecvport(::google::protobuf::uint32 value) {
  set_has_videoctrlrecvport();
  videoctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.videoctrlrecvport)
}

// optional uint32 video2datarecvport = 7;
inline bool ReqMPCreateMPI_NetMpAddr::has_video2datarecvport() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_video2datarecvport() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_video2datarecvport() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_video2datarecvport() {
  video2datarecvport_ = 0u;
  clear_has_video2datarecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::video2datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.video2datarecvport)
  return video2datarecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_video2datarecvport(::google::protobuf::uint32 value) {
  set_has_video2datarecvport();
  video2datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.video2datarecvport)
}

// optional uint32 video2ctrlrecvport = 8;
inline bool ReqMPCreateMPI_NetMpAddr::has_video2ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_video2ctrlrecvport() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_video2ctrlrecvport() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_video2ctrlrecvport() {
  video2ctrlrecvport_ = 0u;
  clear_has_video2ctrlrecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::video2ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.video2ctrlrecvport)
  return video2ctrlrecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_video2ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video2ctrlrecvport();
  video2ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.video2ctrlrecvport)
}

// optional uint32 video3datarecvport = 9;
inline bool ReqMPCreateMPI_NetMpAddr::has_video3datarecvport() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_video3datarecvport() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_video3datarecvport() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_video3datarecvport() {
  video3datarecvport_ = 0u;
  clear_has_video3datarecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::video3datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.video3datarecvport)
  return video3datarecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_video3datarecvport(::google::protobuf::uint32 value) {
  set_has_video3datarecvport();
  video3datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.video3datarecvport)
}

// optional uint32 video3ctrlrecvport = 10;
inline bool ReqMPCreateMPI_NetMpAddr::has_video3ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_video3ctrlrecvport() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_video3ctrlrecvport() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_video3ctrlrecvport() {
  video3ctrlrecvport_ = 0u;
  clear_has_video3ctrlrecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::video3ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.video3ctrlrecvport)
  return video3ctrlrecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_video3ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video3ctrlrecvport();
  video3ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.video3ctrlrecvport)
}

// optional uint32 desktopdatarecvport = 11;
inline bool ReqMPCreateMPI_NetMpAddr::has_desktopdatarecvport() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_desktopdatarecvport() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_desktopdatarecvport() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_desktopdatarecvport() {
  desktopdatarecvport_ = 0u;
  clear_has_desktopdatarecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::desktopdatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.desktopdatarecvport)
  return desktopdatarecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_desktopdatarecvport(::google::protobuf::uint32 value) {
  set_has_desktopdatarecvport();
  desktopdatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.desktopdatarecvport)
}

// optional uint32 desktopctrlrecvport = 12;
inline bool ReqMPCreateMPI_NetMpAddr::has_desktopctrlrecvport() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReqMPCreateMPI_NetMpAddr::set_has_desktopctrlrecvport() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_has_desktopctrlrecvport() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReqMPCreateMPI_NetMpAddr::clear_desktopctrlrecvport() {
  desktopctrlrecvport_ = 0u;
  clear_has_desktopctrlrecvport();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI_NetMpAddr::desktopctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.NetMpAddr.desktopctrlrecvport)
  return desktopctrlrecvport_;
}
inline void ReqMPCreateMPI_NetMpAddr::set_desktopctrlrecvport(::google::protobuf::uint32 value) {
  set_has_desktopctrlrecvport();
  desktopctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.NetMpAddr.desktopctrlrecvport)
}

// -------------------------------------------------------------------

// ReqMPCreateMPI

// optional uint64 confid = 1;
inline bool ReqMPCreateMPI::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateMPI::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateMPI::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateMPI::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 ReqMPCreateMPI::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.confid)
  return confid_;
}
inline void ReqMPCreateMPI::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.confid)
}

// optional uint32 mcid = 2;
inline bool ReqMPCreateMPI::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateMPI::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateMPI::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateMPI::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.mcid)
  return mcid_;
}
inline void ReqMPCreateMPI::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.mcid)
}

// optional uint32 mpid = 3;
inline bool ReqMPCreateMPI::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMPCreateMPI::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMPCreateMPI::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMPCreateMPI::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.mpid)
  return mpid_;
}
inline void ReqMPCreateMPI::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.mpid)
}

// optional uint32 channelid = 4;
inline bool ReqMPCreateMPI::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqMPCreateMPI::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqMPCreateMPI::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqMPCreateMPI::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 ReqMPCreateMPI::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.channelid)
  return channelid_;
}
inline void ReqMPCreateMPI::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateMPI.channelid)
}

// optional .SRMsgs.ReqMPCreateMPI.Confcfg confcfg = 5;
inline bool ReqMPCreateMPI::has_confcfg() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqMPCreateMPI::set_has_confcfg() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqMPCreateMPI::clear_has_confcfg() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqMPCreateMPI::clear_confcfg() {
  if (confcfg_ != NULL) confcfg_->::SRMsgs::ReqMPCreateMPI_Confcfg::Clear();
  clear_has_confcfg();
}
inline const ::SRMsgs::ReqMPCreateMPI_Confcfg& ReqMPCreateMPI::confcfg() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.confcfg)
  return confcfg_ != NULL ? *confcfg_ : *default_instance_->confcfg_;
}
inline ::SRMsgs::ReqMPCreateMPI_Confcfg* ReqMPCreateMPI::mutable_confcfg() {
  set_has_confcfg();
  if (confcfg_ == NULL) confcfg_ = new ::SRMsgs::ReqMPCreateMPI_Confcfg;
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateMPI.confcfg)
  return confcfg_;
}
inline ::SRMsgs::ReqMPCreateMPI_Confcfg* ReqMPCreateMPI::release_confcfg() {
  clear_has_confcfg();
  ::SRMsgs::ReqMPCreateMPI_Confcfg* temp = confcfg_;
  confcfg_ = NULL;
  return temp;
}
inline void ReqMPCreateMPI::set_allocated_confcfg(::SRMsgs::ReqMPCreateMPI_Confcfg* confcfg) {
  delete confcfg_;
  confcfg_ = confcfg;
  if (confcfg) {
    set_has_confcfg();
  } else {
    clear_has_confcfg();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateMPI.confcfg)
}

// optional .SRMsgs.ReqMPCreateMPI.NetMpAddr netmpaddr = 6;
inline bool ReqMPCreateMPI::has_netmpaddr() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqMPCreateMPI::set_has_netmpaddr() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqMPCreateMPI::clear_has_netmpaddr() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqMPCreateMPI::clear_netmpaddr() {
  if (netmpaddr_ != NULL) netmpaddr_->::SRMsgs::ReqMPCreateMPI_NetMpAddr::Clear();
  clear_has_netmpaddr();
}
inline const ::SRMsgs::ReqMPCreateMPI_NetMpAddr& ReqMPCreateMPI::netmpaddr() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateMPI.netmpaddr)
  return netmpaddr_ != NULL ? *netmpaddr_ : *default_instance_->netmpaddr_;
}
inline ::SRMsgs::ReqMPCreateMPI_NetMpAddr* ReqMPCreateMPI::mutable_netmpaddr() {
  set_has_netmpaddr();
  if (netmpaddr_ == NULL) netmpaddr_ = new ::SRMsgs::ReqMPCreateMPI_NetMpAddr;
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateMPI.netmpaddr)
  return netmpaddr_;
}
inline ::SRMsgs::ReqMPCreateMPI_NetMpAddr* ReqMPCreateMPI::release_netmpaddr() {
  clear_has_netmpaddr();
  ::SRMsgs::ReqMPCreateMPI_NetMpAddr* temp = netmpaddr_;
  netmpaddr_ = NULL;
  return temp;
}
inline void ReqMPCreateMPI::set_allocated_netmpaddr(::SRMsgs::ReqMPCreateMPI_NetMpAddr* netmpaddr) {
  delete netmpaddr_;
  netmpaddr_ = netmpaddr;
  if (netmpaddr) {
    set_has_netmpaddr();
  } else {
    clear_has_netmpaddr();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateMPI.netmpaddr)
}

// -------------------------------------------------------------------

// CmdMPDestoryMPI

// optional uint64 confid = 1;
inline bool CmdMPDestoryMPI::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPDestoryMPI::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPDestoryMPI::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPDestoryMPI::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPDestoryMPI::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryMPI.confid)
  return confid_;
}
inline void CmdMPDestoryMPI::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryMPI.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPDestoryMPI::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPDestoryMPI::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPDestoryMPI::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPDestoryMPI::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPDestoryMPI::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryMPI.mcid)
  return mcid_;
}
inline void CmdMPDestoryMPI::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryMPI.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPDestoryMPI::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPDestoryMPI::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPDestoryMPI::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPDestoryMPI::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPDestoryMPI::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryMPI.mpid)
  return mpid_;
}
inline void CmdMPDestoryMPI::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryMPI.mpid)
}

// optional uint32 channelid = 4;
inline bool CmdMPDestoryMPI::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPDestoryMPI::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPDestoryMPI::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPDestoryMPI::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPDestoryMPI::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryMPI.channelid)
  return channelid_;
}
inline void CmdMPDestoryMPI::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryMPI.channelid)
}

// optional string reason = 5;
inline bool CmdMPDestoryMPI::has_reason() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPDestoryMPI::set_has_reason() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPDestoryMPI::clear_has_reason() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPDestoryMPI::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& CmdMPDestoryMPI::reason() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryMPI.reason)
  return *reason_;
}
inline void CmdMPDestoryMPI::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryMPI.reason)
}
inline void CmdMPDestoryMPI::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPDestoryMPI.reason)
}
inline void CmdMPDestoryMPI::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPDestoryMPI.reason)
}
inline ::std::string* CmdMPDestoryMPI::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPDestoryMPI.reason)
  return reason_;
}
inline ::std::string* CmdMPDestoryMPI::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPDestoryMPI::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPDestoryMPI.reason)
}

// -------------------------------------------------------------------

// IndMPTerJoined_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPTerJoined_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerJoined_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerJoined_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerJoined_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPTerJoined_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPTerJoined_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPTerJoined_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerJoined_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerJoined_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerJoined_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPTerJoined_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.SourceInfo.name)
  return *name_;
}
inline void IndMPTerJoined_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.SourceInfo.name)
}
inline void IndMPTerJoined_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPTerJoined.SourceInfo.name)
}
inline void IndMPTerJoined_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPTerJoined.SourceInfo.name)
}
inline ::std::string* IndMPTerJoined_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerJoined.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPTerJoined_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPTerJoined_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerJoined.SourceInfo.name)
}

// optional bool isOn = 3;
inline bool IndMPTerJoined_SourceInfo::has_ison() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerJoined_SourceInfo::set_has_ison() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerJoined_SourceInfo::clear_has_ison() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerJoined_SourceInfo::clear_ison() {
  ison_ = false;
  clear_has_ison();
}
inline bool IndMPTerJoined_SourceInfo::ison() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.SourceInfo.isOn)
  return ison_;
}
inline void IndMPTerJoined_SourceInfo::set_ison(bool value) {
  set_has_ison();
  ison_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.SourceInfo.isOn)
}

// optional uint32 priority = 4;
inline bool IndMPTerJoined_SourceInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerJoined_SourceInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerJoined_SourceInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerJoined_SourceInfo::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 IndMPTerJoined_SourceInfo::priority() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.SourceInfo.priority)
  return priority_;
}
inline void IndMPTerJoined_SourceInfo::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.SourceInfo.priority)
}

// -------------------------------------------------------------------

// IndMPTerJoined_DeviceInfo

// optional uint32 type = 1;
inline bool IndMPTerJoined_DeviceInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerJoined_DeviceInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerJoined_DeviceInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerJoined_DeviceInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 IndMPTerJoined_DeviceInfo::type() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.DeviceInfo.type)
  return type_;
}
inline void IndMPTerJoined_DeviceInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.DeviceInfo.type)
}

// repeated .SRMsgs.IndMPTerJoined.SourceInfo srcinfos = 2;
inline int IndMPTerJoined_DeviceInfo::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPTerJoined_DeviceInfo::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPTerJoined_SourceInfo& IndMPTerJoined_DeviceInfo::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.DeviceInfo.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPTerJoined_SourceInfo* IndMPTerJoined_DeviceInfo::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerJoined.DeviceInfo.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPTerJoined_SourceInfo* IndMPTerJoined_DeviceInfo::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPTerJoined.DeviceInfo.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_SourceInfo >&
IndMPTerJoined_DeviceInfo::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPTerJoined.DeviceInfo.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_SourceInfo >*
IndMPTerJoined_DeviceInfo::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPTerJoined.DeviceInfo.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// IndMPTerJoined

// optional uint64 confid = 1;
inline bool IndMPTerJoined::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerJoined::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerJoined::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerJoined::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerJoined::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.confid)
  return confid_;
}
inline void IndMPTerJoined::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerJoined::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerJoined::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerJoined::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerJoined::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerJoined::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.mcid)
  return mcid_;
}
inline void IndMPTerJoined::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerJoined::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerJoined::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerJoined::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerJoined::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerJoined::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.mpid)
  return mpid_;
}
inline void IndMPTerJoined::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPTerJoined::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerJoined::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerJoined::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerJoined::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPTerJoined::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.terid)
  return terid_;
}
inline void IndMPTerJoined::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPTerJoined::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerJoined::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerJoined::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerJoined::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPTerJoined::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.channelid)
  return channelid_;
}
inline void IndMPTerJoined::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.channelid)
}

// optional uint32 termtype = 6;
inline bool IndMPTerJoined::has_termtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerJoined::set_has_termtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerJoined::clear_has_termtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerJoined::clear_termtype() {
  termtype_ = 0u;
  clear_has_termtype();
}
inline ::google::protobuf::uint32 IndMPTerJoined::termtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.termtype)
  return termtype_;
}
inline void IndMPTerJoined::set_termtype(::google::protobuf::uint32 value) {
  set_has_termtype();
  termtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.termtype)
}

// optional uint32 fromtype = 7;
inline bool IndMPTerJoined::has_fromtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPTerJoined::set_has_fromtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPTerJoined::clear_has_fromtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPTerJoined::clear_fromtype() {
  fromtype_ = 0u;
  clear_has_fromtype();
}
inline ::google::protobuf::uint32 IndMPTerJoined::fromtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.fromtype)
  return fromtype_;
}
inline void IndMPTerJoined::set_fromtype(::google::protobuf::uint32 value) {
  set_has_fromtype();
  fromtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.fromtype)
}

// optional string tername = 8;
inline bool IndMPTerJoined::has_tername() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndMPTerJoined::set_has_tername() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndMPTerJoined::clear_has_tername() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndMPTerJoined::clear_tername() {
  if (tername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_->clear();
  }
  clear_has_tername();
}
inline const ::std::string& IndMPTerJoined::tername() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.tername)
  return *tername_;
}
inline void IndMPTerJoined::set_tername(const ::std::string& value) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.tername)
}
inline void IndMPTerJoined::set_tername(const char* value) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPTerJoined.tername)
}
inline void IndMPTerJoined::set_tername(const char* value, size_t size) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPTerJoined.tername)
}
inline ::std::string* IndMPTerJoined::mutable_tername() {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerJoined.tername)
  return tername_;
}
inline ::std::string* IndMPTerJoined::release_tername() {
  clear_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tername_;
    tername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPTerJoined::set_allocated_tername(::std::string* tername) {
  if (tername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tername_;
  }
  if (tername) {
    set_has_tername();
    tername_ = tername;
  } else {
    clear_has_tername();
    tername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerJoined.tername)
}

// optional uint32 specialtype = 9;
inline bool IndMPTerJoined::has_specialtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndMPTerJoined::set_has_specialtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndMPTerJoined::clear_has_specialtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndMPTerJoined::clear_specialtype() {
  specialtype_ = 0u;
  clear_has_specialtype();
}
inline ::google::protobuf::uint32 IndMPTerJoined::specialtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.specialtype)
  return specialtype_;
}
inline void IndMPTerJoined::set_specialtype(::google::protobuf::uint32 value) {
  set_has_specialtype();
  specialtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.specialtype)
}

// optional uint32 gmrtype = 10;
inline bool IndMPTerJoined::has_gmrtype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndMPTerJoined::set_has_gmrtype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndMPTerJoined::clear_has_gmrtype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndMPTerJoined::clear_gmrtype() {
  gmrtype_ = 0u;
  clear_has_gmrtype();
}
inline ::google::protobuf::uint32 IndMPTerJoined::gmrtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.gmrtype)
  return gmrtype_;
}
inline void IndMPTerJoined::set_gmrtype(::google::protobuf::uint32 value) {
  set_has_gmrtype();
  gmrtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.gmrtype)
}

// optional uint32 gmrid = 11;
inline bool IndMPTerJoined::has_gmrid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IndMPTerJoined::set_has_gmrid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IndMPTerJoined::clear_has_gmrid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IndMPTerJoined::clear_gmrid() {
  gmrid_ = 0u;
  clear_has_gmrid();
}
inline ::google::protobuf::uint32 IndMPTerJoined::gmrid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.gmrid)
  return gmrid_;
}
inline void IndMPTerJoined::set_gmrid(::google::protobuf::uint32 value) {
  set_has_gmrid();
  gmrid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.gmrid)
}

// optional string gmrname = 12;
inline bool IndMPTerJoined::has_gmrname() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IndMPTerJoined::set_has_gmrname() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IndMPTerJoined::clear_has_gmrname() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IndMPTerJoined::clear_gmrname() {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_->clear();
  }
  clear_has_gmrname();
}
inline const ::std::string& IndMPTerJoined::gmrname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.gmrname)
  return *gmrname_;
}
inline void IndMPTerJoined::set_gmrname(const ::std::string& value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.gmrname)
}
inline void IndMPTerJoined::set_gmrname(const char* value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPTerJoined.gmrname)
}
inline void IndMPTerJoined::set_gmrname(const char* value, size_t size) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPTerJoined.gmrname)
}
inline ::std::string* IndMPTerJoined::mutable_gmrname() {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerJoined.gmrname)
  return gmrname_;
}
inline ::std::string* IndMPTerJoined::release_gmrname() {
  clear_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmrname_;
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPTerJoined::set_allocated_gmrname(::std::string* gmrname) {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmrname_;
  }
  if (gmrname) {
    set_has_gmrname();
    gmrname_ = gmrname;
  } else {
    clear_has_gmrname();
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerJoined.gmrname)
}

// repeated .SRMsgs.IndMPTerJoined.DeviceInfo devinfos = 13;
inline int IndMPTerJoined::devinfos_size() const {
  return devinfos_.size();
}
inline void IndMPTerJoined::clear_devinfos() {
  devinfos_.Clear();
}
inline const ::SRMsgs::IndMPTerJoined_DeviceInfo& IndMPTerJoined::devinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.devinfos)
  return devinfos_.Get(index);
}
inline ::SRMsgs::IndMPTerJoined_DeviceInfo* IndMPTerJoined::mutable_devinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerJoined.devinfos)
  return devinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPTerJoined_DeviceInfo* IndMPTerJoined::add_devinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPTerJoined.devinfos)
  return devinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_DeviceInfo >&
IndMPTerJoined::devinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPTerJoined.devinfos)
  return devinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerJoined_DeviceInfo >*
IndMPTerJoined::mutable_devinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPTerJoined.devinfos)
  return &devinfos_;
}

// optional uint32 suid = 14;
inline bool IndMPTerJoined::has_suid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void IndMPTerJoined::set_has_suid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void IndMPTerJoined::clear_has_suid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void IndMPTerJoined::clear_suid() {
  suid_ = 0u;
  clear_has_suid();
}
inline ::google::protobuf::uint32 IndMPTerJoined::suid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.suid)
  return suid_;
}
inline void IndMPTerJoined::set_suid(::google::protobuf::uint32 value) {
  set_has_suid();
  suid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.suid)
}

// optional uint32 producttype = 15;
inline bool IndMPTerJoined::has_producttype() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void IndMPTerJoined::set_has_producttype() {
  _has_bits_[0] |= 0x00004000u;
}
inline void IndMPTerJoined::clear_has_producttype() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void IndMPTerJoined::clear_producttype() {
  producttype_ = 0u;
  clear_has_producttype();
}
inline ::google::protobuf::uint32 IndMPTerJoined::producttype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerJoined.producttype)
  return producttype_;
}
inline void IndMPTerJoined::set_producttype(::google::protobuf::uint32 value) {
  set_has_producttype();
  producttype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerJoined.producttype)
}

// -------------------------------------------------------------------

// IndMPTerLeft

// optional uint64 confid = 1;
inline bool IndMPTerLeft::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerLeft::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerLeft::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerLeft::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerLeft::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.confid)
  return confid_;
}
inline void IndMPTerLeft::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerLeft::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerLeft::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerLeft::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerLeft::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerLeft::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.mcid)
  return mcid_;
}
inline void IndMPTerLeft::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerLeft::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerLeft::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerLeft::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerLeft::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerLeft::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.mpid)
  return mpid_;
}
inline void IndMPTerLeft::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPTerLeft::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerLeft::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerLeft::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerLeft::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPTerLeft::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.terid)
  return terid_;
}
inline void IndMPTerLeft::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPTerLeft::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerLeft::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerLeft::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerLeft::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPTerLeft::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.channelid)
  return channelid_;
}
inline void IndMPTerLeft::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.channelid)
}

// optional uint32 gmrtype = 6;
inline bool IndMPTerLeft::has_gmrtype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerLeft::set_has_gmrtype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerLeft::clear_has_gmrtype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerLeft::clear_gmrtype() {
  gmrtype_ = 0u;
  clear_has_gmrtype();
}
inline ::google::protobuf::uint32 IndMPTerLeft::gmrtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.gmrtype)
  return gmrtype_;
}
inline void IndMPTerLeft::set_gmrtype(::google::protobuf::uint32 value) {
  set_has_gmrtype();
  gmrtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.gmrtype)
}

// optional uint32 gmrid = 7;
inline bool IndMPTerLeft::has_gmrid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPTerLeft::set_has_gmrid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPTerLeft::clear_has_gmrid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPTerLeft::clear_gmrid() {
  gmrid_ = 0u;
  clear_has_gmrid();
}
inline ::google::protobuf::uint32 IndMPTerLeft::gmrid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.gmrid)
  return gmrid_;
}
inline void IndMPTerLeft::set_gmrid(::google::protobuf::uint32 value) {
  set_has_gmrid();
  gmrid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.gmrid)
}

// optional string gmrname = 8;
inline bool IndMPTerLeft::has_gmrname() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndMPTerLeft::set_has_gmrname() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndMPTerLeft::clear_has_gmrname() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndMPTerLeft::clear_gmrname() {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_->clear();
  }
  clear_has_gmrname();
}
inline const ::std::string& IndMPTerLeft::gmrname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerLeft.gmrname)
  return *gmrname_;
}
inline void IndMPTerLeft::set_gmrname(const ::std::string& value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerLeft.gmrname)
}
inline void IndMPTerLeft::set_gmrname(const char* value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPTerLeft.gmrname)
}
inline void IndMPTerLeft::set_gmrname(const char* value, size_t size) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPTerLeft.gmrname)
}
inline ::std::string* IndMPTerLeft::mutable_gmrname() {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerLeft.gmrname)
  return gmrname_;
}
inline ::std::string* IndMPTerLeft::release_gmrname() {
  clear_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmrname_;
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPTerLeft::set_allocated_gmrname(::std::string* gmrname) {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmrname_;
  }
  if (gmrname) {
    set_has_gmrname();
    gmrname_ = gmrname;
  } else {
    clear_has_gmrname();
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerLeft.gmrname)
}

// -------------------------------------------------------------------

// IndCRSChannelInfoToMp

// optional uint64 confid = 1;
inline bool IndCRSChannelInfoToMp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndCRSChannelInfoToMp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndCRSChannelInfoToMp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndCRSChannelInfoToMp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndCRSChannelInfoToMp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelInfoToMp.confid)
  return confid_;
}
inline void IndCRSChannelInfoToMp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelInfoToMp.confid)
}

// optional uint32 mcid = 2;
inline bool IndCRSChannelInfoToMp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndCRSChannelInfoToMp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndCRSChannelInfoToMp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndCRSChannelInfoToMp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndCRSChannelInfoToMp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelInfoToMp.mcid)
  return mcid_;
}
inline void IndCRSChannelInfoToMp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelInfoToMp.mcid)
}

// optional uint32 mpid = 3;
inline bool IndCRSChannelInfoToMp::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndCRSChannelInfoToMp::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndCRSChannelInfoToMp::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndCRSChannelInfoToMp::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndCRSChannelInfoToMp::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelInfoToMp.mpid)
  return mpid_;
}
inline void IndCRSChannelInfoToMp::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelInfoToMp.mpid)
}

// optional uint32 crsid = 4;
inline bool IndCRSChannelInfoToMp::has_crsid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndCRSChannelInfoToMp::set_has_crsid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndCRSChannelInfoToMp::clear_has_crsid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndCRSChannelInfoToMp::clear_crsid() {
  crsid_ = 0u;
  clear_has_crsid();
}
inline ::google::protobuf::uint32 IndCRSChannelInfoToMp::crsid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelInfoToMp.crsid)
  return crsid_;
}
inline void IndCRSChannelInfoToMp::set_crsid(::google::protobuf::uint32 value) {
  set_has_crsid();
  crsid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelInfoToMp.crsid)
}

// optional uint32 crschannelid = 5;
inline bool IndCRSChannelInfoToMp::has_crschannelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndCRSChannelInfoToMp::set_has_crschannelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndCRSChannelInfoToMp::clear_has_crschannelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndCRSChannelInfoToMp::clear_crschannelid() {
  crschannelid_ = 0u;
  clear_has_crschannelid();
}
inline ::google::protobuf::uint32 IndCRSChannelInfoToMp::crschannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelInfoToMp.crschannelid)
  return crschannelid_;
}
inline void IndCRSChannelInfoToMp::set_crschannelid(::google::protobuf::uint32 value) {
  set_has_crschannelid();
  crschannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelInfoToMp.crschannelid)
}

// optional uint32 addordel = 6;
inline bool IndCRSChannelInfoToMp::has_addordel() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndCRSChannelInfoToMp::set_has_addordel() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndCRSChannelInfoToMp::clear_has_addordel() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndCRSChannelInfoToMp::clear_addordel() {
  addordel_ = 0u;
  clear_has_addordel();
}
inline ::google::protobuf::uint32 IndCRSChannelInfoToMp::addordel() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelInfoToMp.addordel)
  return addordel_;
}
inline void IndCRSChannelInfoToMp::set_addordel(::google::protobuf::uint32 value) {
  set_has_addordel();
  addordel_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelInfoToMp.addordel)
}

// -------------------------------------------------------------------

// IndConfAllTerMediaFormatToMP_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndConfAllTerMediaFormatToMP_TermsMediaFmt

// optional uint32 terid = 1;
inline bool IndConfAllTerMediaFormatToMP_TermsMediaFmt::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP_TermsMediaFmt::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.terid)
  return terid_;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.terid)
}

// optional .SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat sendmediaformat = 2;
inline bool IndConfAllTerMediaFormatToMP_TermsMediaFmt::has_sendmediaformat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::set_has_sendmediaformat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::clear_has_sendmediaformat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::clear_sendmediaformat() {
  if (sendmediaformat_ != NULL) sendmediaformat_->::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::Clear();
  clear_has_sendmediaformat();
}
inline const ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& IndConfAllTerMediaFormatToMP_TermsMediaFmt::sendmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.sendmediaformat)
  return sendmediaformat_ != NULL ? *sendmediaformat_ : *default_instance_->sendmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToMP_TermsMediaFmt::mutable_sendmediaformat() {
  set_has_sendmediaformat();
  if (sendmediaformat_ == NULL) sendmediaformat_ = new ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.sendmediaformat)
  return sendmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToMP_TermsMediaFmt::release_sendmediaformat() {
  clear_has_sendmediaformat();
  ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* temp = sendmediaformat_;
  sendmediaformat_ = NULL;
  return temp;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::set_allocated_sendmediaformat(::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* sendmediaformat) {
  delete sendmediaformat_;
  sendmediaformat_ = sendmediaformat;
  if (sendmediaformat) {
    set_has_sendmediaformat();
  } else {
    clear_has_sendmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.sendmediaformat)
}

// optional .SRMsgs.IndConfAllTerMediaFormatToMP.MediaTypeAndFormat recvmediaformat = 3;
inline bool IndConfAllTerMediaFormatToMP_TermsMediaFmt::has_recvmediaformat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::set_has_recvmediaformat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::clear_has_recvmediaformat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::clear_recvmediaformat() {
  if (recvmediaformat_ != NULL) recvmediaformat_->::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat::Clear();
  clear_has_recvmediaformat();
}
inline const ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat& IndConfAllTerMediaFormatToMP_TermsMediaFmt::recvmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.recvmediaformat)
  return recvmediaformat_ != NULL ? *recvmediaformat_ : *default_instance_->recvmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToMP_TermsMediaFmt::mutable_recvmediaformat() {
  set_has_recvmediaformat();
  if (recvmediaformat_ == NULL) recvmediaformat_ = new ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.recvmediaformat)
  return recvmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToMP_TermsMediaFmt::release_recvmediaformat() {
  clear_has_recvmediaformat();
  ::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* temp = recvmediaformat_;
  recvmediaformat_ = NULL;
  return temp;
}
inline void IndConfAllTerMediaFormatToMP_TermsMediaFmt::set_allocated_recvmediaformat(::SRMsgs::IndConfAllTerMediaFormatToMP_MediaTypeAndFormat* recvmediaformat) {
  delete recvmediaformat_;
  recvmediaformat_ = recvmediaformat;
  if (recvmediaformat) {
    set_has_recvmediaformat();
  } else {
    clear_has_recvmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt.recvmediaformat)
}

// -------------------------------------------------------------------

// IndConfAllTerMediaFormatToMP

// optional uint64 confid = 1;
inline bool IndConfAllTerMediaFormatToMP::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllTerMediaFormatToMP::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllTerMediaFormatToMP::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllTerMediaFormatToMP::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndConfAllTerMediaFormatToMP::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.confid)
  return confid_;
}
inline void IndConfAllTerMediaFormatToMP::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.confid)
}

// optional uint32 mcid = 2;
inline bool IndConfAllTerMediaFormatToMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllTerMediaFormatToMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllTerMediaFormatToMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllTerMediaFormatToMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.mcid)
  return mcid_;
}
inline void IndConfAllTerMediaFormatToMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.mcid)
}

// optional uint32 mpid = 3;
inline bool IndConfAllTerMediaFormatToMP::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllTerMediaFormatToMP::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllTerMediaFormatToMP::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllTerMediaFormatToMP::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToMP::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.mpid)
  return mpid_;
}
inline void IndConfAllTerMediaFormatToMP::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToMP.mpid)
}

// repeated .SRMsgs.IndConfAllTerMediaFormatToMP.TermsMediaFmt tersmediainfo = 4;
inline int IndConfAllTerMediaFormatToMP::tersmediainfo_size() const {
  return tersmediainfo_.size();
}
inline void IndConfAllTerMediaFormatToMP::clear_tersmediainfo() {
  tersmediainfo_.Clear();
}
inline const ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt& IndConfAllTerMediaFormatToMP::tersmediainfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToMP.tersmediainfo)
  return tersmediainfo_.Get(index);
}
inline ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt* IndConfAllTerMediaFormatToMP::mutable_tersmediainfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllTerMediaFormatToMP.tersmediainfo)
  return tersmediainfo_.Mutable(index);
}
inline ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt* IndConfAllTerMediaFormatToMP::add_tersmediainfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndConfAllTerMediaFormatToMP.tersmediainfo)
  return tersmediainfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt >&
IndConfAllTerMediaFormatToMP::tersmediainfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndConfAllTerMediaFormatToMP.tersmediainfo)
  return tersmediainfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToMP_TermsMediaFmt >*
IndConfAllTerMediaFormatToMP::mutable_tersmediainfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndConfAllTerMediaFormatToMP.tersmediainfo)
  return &tersmediainfo_;
}

// -------------------------------------------------------------------

// IndMPTerMediaFormat_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndMPTerMediaFormat_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndMPTerMediaFormat_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndMPTerMediaFormat

// optional uint64 confid = 1;
inline bool IndMPTerMediaFormat::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerMediaFormat::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerMediaFormat::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerMediaFormat::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerMediaFormat::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.confid)
  return confid_;
}
inline void IndMPTerMediaFormat::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerMediaFormat::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerMediaFormat::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerMediaFormat::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerMediaFormat::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.mcid)
  return mcid_;
}
inline void IndMPTerMediaFormat::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerMediaFormat::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerMediaFormat::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerMediaFormat::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerMediaFormat::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.mpid)
  return mpid_;
}
inline void IndMPTerMediaFormat::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPTerMediaFormat::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerMediaFormat::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerMediaFormat::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerMediaFormat::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.terid)
  return terid_;
}
inline void IndMPTerMediaFormat::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPTerMediaFormat::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerMediaFormat::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerMediaFormat::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerMediaFormat::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPTerMediaFormat::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.channelid)
  return channelid_;
}
inline void IndMPTerMediaFormat::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMediaFormat.channelid)
}

// optional .SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
inline bool IndMPTerMediaFormat::has_sendmediaformat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerMediaFormat::set_has_sendmediaformat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerMediaFormat::clear_has_sendmediaformat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerMediaFormat::clear_sendmediaformat() {
  if (sendmediaformat_ != NULL) sendmediaformat_->::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_sendmediaformat();
}
inline const ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat& IndMPTerMediaFormat::sendmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.sendmediaformat)
  return sendmediaformat_ != NULL ? *sendmediaformat_ : *default_instance_->sendmediaformat_;
}
inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* IndMPTerMediaFormat::mutable_sendmediaformat() {
  set_has_sendmediaformat();
  if (sendmediaformat_ == NULL) sendmediaformat_ = new ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerMediaFormat.sendmediaformat)
  return sendmediaformat_;
}
inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* IndMPTerMediaFormat::release_sendmediaformat() {
  clear_has_sendmediaformat();
  ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* temp = sendmediaformat_;
  sendmediaformat_ = NULL;
  return temp;
}
inline void IndMPTerMediaFormat::set_allocated_sendmediaformat(::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* sendmediaformat) {
  delete sendmediaformat_;
  sendmediaformat_ = sendmediaformat;
  if (sendmediaformat) {
    set_has_sendmediaformat();
  } else {
    clear_has_sendmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerMediaFormat.sendmediaformat)
}

// optional .SRMsgs.IndMPTerMediaFormat.MediaTypeAndFormat recvmediaformat = 7;
inline bool IndMPTerMediaFormat::has_recvmediaformat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPTerMediaFormat::set_has_recvmediaformat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPTerMediaFormat::clear_has_recvmediaformat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPTerMediaFormat::clear_recvmediaformat() {
  if (recvmediaformat_ != NULL) recvmediaformat_->::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_recvmediaformat();
}
inline const ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat& IndMPTerMediaFormat::recvmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMediaFormat.recvmediaformat)
  return recvmediaformat_ != NULL ? *recvmediaformat_ : *default_instance_->recvmediaformat_;
}
inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* IndMPTerMediaFormat::mutable_recvmediaformat() {
  set_has_recvmediaformat();
  if (recvmediaformat_ == NULL) recvmediaformat_ = new ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerMediaFormat.recvmediaformat)
  return recvmediaformat_;
}
inline ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* IndMPTerMediaFormat::release_recvmediaformat() {
  clear_has_recvmediaformat();
  ::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* temp = recvmediaformat_;
  recvmediaformat_ = NULL;
  return temp;
}
inline void IndMPTerMediaFormat::set_allocated_recvmediaformat(::SRMsgs::IndMPTerMediaFormat_MediaTypeAndFormat* recvmediaformat) {
  delete recvmediaformat_;
  recvmediaformat_ = recvmediaformat;
  if (recvmediaformat) {
    set_has_recvmediaformat();
  } else {
    clear_has_recvmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerMediaFormat.recvmediaformat)
}

// -------------------------------------------------------------------

// IndMPTerSendMediaFormat_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndMPTerSendMediaFormat_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndMPTerSendMediaFormat_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndMPTerSendMediaFormat

// optional uint64 confid = 1;
inline bool IndMPTerSendMediaFormat::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerSendMediaFormat::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerSendMediaFormat::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerSendMediaFormat::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerSendMediaFormat::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.confid)
  return confid_;
}
inline void IndMPTerSendMediaFormat::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerSendMediaFormat::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerSendMediaFormat::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerSendMediaFormat::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerSendMediaFormat::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.mcid)
  return mcid_;
}
inline void IndMPTerSendMediaFormat::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerSendMediaFormat::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerSendMediaFormat::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerSendMediaFormat::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerSendMediaFormat::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.mpid)
  return mpid_;
}
inline void IndMPTerSendMediaFormat::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPTerSendMediaFormat::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerSendMediaFormat::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerSendMediaFormat::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerSendMediaFormat::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.terid)
  return terid_;
}
inline void IndMPTerSendMediaFormat::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPTerSendMediaFormat::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerSendMediaFormat::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerSendMediaFormat::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerSendMediaFormat::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPTerSendMediaFormat::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.channelid)
  return channelid_;
}
inline void IndMPTerSendMediaFormat::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerSendMediaFormat.channelid)
}

// optional .SRMsgs.IndMPTerSendMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
inline bool IndMPTerSendMediaFormat::has_sendmediaformat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerSendMediaFormat::set_has_sendmediaformat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerSendMediaFormat::clear_has_sendmediaformat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerSendMediaFormat::clear_sendmediaformat() {
  if (sendmediaformat_ != NULL) sendmediaformat_->::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_sendmediaformat();
}
inline const ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat& IndMPTerSendMediaFormat::sendmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerSendMediaFormat.sendmediaformat)
  return sendmediaformat_ != NULL ? *sendmediaformat_ : *default_instance_->sendmediaformat_;
}
inline ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* IndMPTerSendMediaFormat::mutable_sendmediaformat() {
  set_has_sendmediaformat();
  if (sendmediaformat_ == NULL) sendmediaformat_ = new ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerSendMediaFormat.sendmediaformat)
  return sendmediaformat_;
}
inline ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* IndMPTerSendMediaFormat::release_sendmediaformat() {
  clear_has_sendmediaformat();
  ::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* temp = sendmediaformat_;
  sendmediaformat_ = NULL;
  return temp;
}
inline void IndMPTerSendMediaFormat::set_allocated_sendmediaformat(::SRMsgs::IndMPTerSendMediaFormat_MediaTypeAndFormat* sendmediaformat) {
  delete sendmediaformat_;
  sendmediaformat_ = sendmediaformat;
  if (sendmediaformat) {
    set_has_sendmediaformat();
  } else {
    clear_has_sendmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerSendMediaFormat.sendmediaformat)
}

// -------------------------------------------------------------------

// IndMPTerRecvMediaFormat_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndMPTerRecvMediaFormat_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndMPTerRecvMediaFormat_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndMPTerRecvMediaFormat

// optional uint64 confid = 1;
inline bool IndMPTerRecvMediaFormat::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerRecvMediaFormat::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerRecvMediaFormat::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerRecvMediaFormat::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerRecvMediaFormat::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.confid)
  return confid_;
}
inline void IndMPTerRecvMediaFormat::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerRecvMediaFormat::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerRecvMediaFormat::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerRecvMediaFormat::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerRecvMediaFormat::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.mcid)
  return mcid_;
}
inline void IndMPTerRecvMediaFormat::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerRecvMediaFormat::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerRecvMediaFormat::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerRecvMediaFormat::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerRecvMediaFormat::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.mpid)
  return mpid_;
}
inline void IndMPTerRecvMediaFormat::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPTerRecvMediaFormat::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerRecvMediaFormat::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerRecvMediaFormat::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerRecvMediaFormat::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.terid)
  return terid_;
}
inline void IndMPTerRecvMediaFormat::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPTerRecvMediaFormat::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerRecvMediaFormat::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerRecvMediaFormat::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerRecvMediaFormat::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPTerRecvMediaFormat::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.channelid)
  return channelid_;
}
inline void IndMPTerRecvMediaFormat::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerRecvMediaFormat.channelid)
}

// optional .SRMsgs.IndMPTerRecvMediaFormat.MediaTypeAndFormat recvmediaformat = 6;
inline bool IndMPTerRecvMediaFormat::has_recvmediaformat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerRecvMediaFormat::set_has_recvmediaformat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerRecvMediaFormat::clear_has_recvmediaformat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerRecvMediaFormat::clear_recvmediaformat() {
  if (recvmediaformat_ != NULL) recvmediaformat_->::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_recvmediaformat();
}
inline const ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat& IndMPTerRecvMediaFormat::recvmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerRecvMediaFormat.recvmediaformat)
  return recvmediaformat_ != NULL ? *recvmediaformat_ : *default_instance_->recvmediaformat_;
}
inline ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* IndMPTerRecvMediaFormat::mutable_recvmediaformat() {
  set_has_recvmediaformat();
  if (recvmediaformat_ == NULL) recvmediaformat_ = new ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerRecvMediaFormat.recvmediaformat)
  return recvmediaformat_;
}
inline ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* IndMPTerRecvMediaFormat::release_recvmediaformat() {
  clear_has_recvmediaformat();
  ::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* temp = recvmediaformat_;
  recvmediaformat_ = NULL;
  return temp;
}
inline void IndMPTerRecvMediaFormat::set_allocated_recvmediaformat(::SRMsgs::IndMPTerRecvMediaFormat_MediaTypeAndFormat* recvmediaformat) {
  delete recvmediaformat_;
  recvmediaformat_ = recvmediaformat;
  if (recvmediaformat) {
    set_has_recvmediaformat();
  } else {
    clear_has_recvmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerRecvMediaFormat.recvmediaformat)
}

// -------------------------------------------------------------------

// ReqMPCreateScreen_TextATTR

// optional uint32 textpos = 1;
inline bool ReqMPCreateScreen_TextATTR::has_textpos() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateScreen_TextATTR::set_has_textpos() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateScreen_TextATTR::clear_has_textpos() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateScreen_TextATTR::clear_textpos() {
  textpos_ = 0u;
  clear_has_textpos();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen_TextATTR::textpos() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TextATTR.textpos)
  return textpos_;
}
inline void ReqMPCreateScreen_TextATTR::set_textpos(::google::protobuf::uint32 value) {
  set_has_textpos();
  textpos_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.TextATTR.textpos)
}

// optional string textcolor = 2;
inline bool ReqMPCreateScreen_TextATTR::has_textcolor() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateScreen_TextATTR::set_has_textcolor() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateScreen_TextATTR::clear_has_textcolor() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateScreen_TextATTR::clear_textcolor() {
  if (textcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textcolor_->clear();
  }
  clear_has_textcolor();
}
inline const ::std::string& ReqMPCreateScreen_TextATTR::textcolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TextATTR.textcolor)
  return *textcolor_;
}
inline void ReqMPCreateScreen_TextATTR::set_textcolor(const ::std::string& value) {
  set_has_textcolor();
  if (textcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textcolor_ = new ::std::string;
  }
  textcolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.TextATTR.textcolor)
}
inline void ReqMPCreateScreen_TextATTR::set_textcolor(const char* value) {
  set_has_textcolor();
  if (textcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textcolor_ = new ::std::string;
  }
  textcolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.ReqMPCreateScreen.TextATTR.textcolor)
}
inline void ReqMPCreateScreen_TextATTR::set_textcolor(const char* value, size_t size) {
  set_has_textcolor();
  if (textcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textcolor_ = new ::std::string;
  }
  textcolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.ReqMPCreateScreen.TextATTR.textcolor)
}
inline ::std::string* ReqMPCreateScreen_TextATTR::mutable_textcolor() {
  set_has_textcolor();
  if (textcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textcolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateScreen.TextATTR.textcolor)
  return textcolor_;
}
inline ::std::string* ReqMPCreateScreen_TextATTR::release_textcolor() {
  clear_has_textcolor();
  if (textcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = textcolor_;
    textcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqMPCreateScreen_TextATTR::set_allocated_textcolor(::std::string* textcolor) {
  if (textcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete textcolor_;
  }
  if (textcolor) {
    set_has_textcolor();
    textcolor_ = textcolor;
  } else {
    clear_has_textcolor();
    textcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateScreen.TextATTR.textcolor)
}

// optional uint32 textFontsize = 3;
inline bool ReqMPCreateScreen_TextATTR::has_textfontsize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMPCreateScreen_TextATTR::set_has_textfontsize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMPCreateScreen_TextATTR::clear_has_textfontsize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMPCreateScreen_TextATTR::clear_textfontsize() {
  textfontsize_ = 0u;
  clear_has_textfontsize();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen_TextATTR::textfontsize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TextATTR.textFontsize)
  return textfontsize_;
}
inline void ReqMPCreateScreen_TextATTR::set_textfontsize(::google::protobuf::uint32 value) {
  set_has_textfontsize();
  textfontsize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.TextATTR.textFontsize)
}

// optional bool enableTextBg = 4;
inline bool ReqMPCreateScreen_TextATTR::has_enabletextbg() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqMPCreateScreen_TextATTR::set_has_enabletextbg() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqMPCreateScreen_TextATTR::clear_has_enabletextbg() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqMPCreateScreen_TextATTR::clear_enabletextbg() {
  enabletextbg_ = false;
  clear_has_enabletextbg();
}
inline bool ReqMPCreateScreen_TextATTR::enabletextbg() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TextATTR.enableTextBg)
  return enabletextbg_;
}
inline void ReqMPCreateScreen_TextATTR::set_enabletextbg(bool value) {
  set_has_enabletextbg();
  enabletextbg_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.TextATTR.enableTextBg)
}

// optional string textBgColor = 5;
inline bool ReqMPCreateScreen_TextATTR::has_textbgcolor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqMPCreateScreen_TextATTR::set_has_textbgcolor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqMPCreateScreen_TextATTR::clear_has_textbgcolor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqMPCreateScreen_TextATTR::clear_textbgcolor() {
  if (textbgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textbgcolor_->clear();
  }
  clear_has_textbgcolor();
}
inline const ::std::string& ReqMPCreateScreen_TextATTR::textbgcolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TextATTR.textBgColor)
  return *textbgcolor_;
}
inline void ReqMPCreateScreen_TextATTR::set_textbgcolor(const ::std::string& value) {
  set_has_textbgcolor();
  if (textbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textbgcolor_ = new ::std::string;
  }
  textbgcolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.TextATTR.textBgColor)
}
inline void ReqMPCreateScreen_TextATTR::set_textbgcolor(const char* value) {
  set_has_textbgcolor();
  if (textbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textbgcolor_ = new ::std::string;
  }
  textbgcolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.ReqMPCreateScreen.TextATTR.textBgColor)
}
inline void ReqMPCreateScreen_TextATTR::set_textbgcolor(const char* value, size_t size) {
  set_has_textbgcolor();
  if (textbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textbgcolor_ = new ::std::string;
  }
  textbgcolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.ReqMPCreateScreen.TextATTR.textBgColor)
}
inline ::std::string* ReqMPCreateScreen_TextATTR::mutable_textbgcolor() {
  set_has_textbgcolor();
  if (textbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    textbgcolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateScreen.TextATTR.textBgColor)
  return textbgcolor_;
}
inline ::std::string* ReqMPCreateScreen_TextATTR::release_textbgcolor() {
  clear_has_textbgcolor();
  if (textbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = textbgcolor_;
    textbgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqMPCreateScreen_TextATTR::set_allocated_textbgcolor(::std::string* textbgcolor) {
  if (textbgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete textbgcolor_;
  }
  if (textbgcolor) {
    set_has_textbgcolor();
    textbgcolor_ = textbgcolor;
  } else {
    clear_has_textbgcolor();
    textbgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateScreen.TextATTR.textBgColor)
}

// -------------------------------------------------------------------

// ReqMPCreateScreen_TernameATTR

// optional bool enableTername = 1;
inline bool ReqMPCreateScreen_TernameATTR::has_enabletername() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateScreen_TernameATTR::set_has_enabletername() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateScreen_TernameATTR::clear_has_enabletername() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateScreen_TernameATTR::clear_enabletername() {
  enabletername_ = false;
  clear_has_enabletername();
}
inline bool ReqMPCreateScreen_TernameATTR::enabletername() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TernameATTR.enableTername)
  return enabletername_;
}
inline void ReqMPCreateScreen_TernameATTR::set_enabletername(bool value) {
  set_has_enabletername();
  enabletername_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.TernameATTR.enableTername)
}

// optional .SRMsgs.ReqMPCreateScreen.TextATTR ternametextattr = 2;
inline bool ReqMPCreateScreen_TernameATTR::has_ternametextattr() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateScreen_TernameATTR::set_has_ternametextattr() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateScreen_TernameATTR::clear_has_ternametextattr() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateScreen_TernameATTR::clear_ternametextattr() {
  if (ternametextattr_ != NULL) ternametextattr_->::SRMsgs::ReqMPCreateScreen_TextATTR::Clear();
  clear_has_ternametextattr();
}
inline const ::SRMsgs::ReqMPCreateScreen_TextATTR& ReqMPCreateScreen_TernameATTR::ternametextattr() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.TernameATTR.ternametextattr)
  return ternametextattr_ != NULL ? *ternametextattr_ : *default_instance_->ternametextattr_;
}
inline ::SRMsgs::ReqMPCreateScreen_TextATTR* ReqMPCreateScreen_TernameATTR::mutable_ternametextattr() {
  set_has_ternametextattr();
  if (ternametextattr_ == NULL) ternametextattr_ = new ::SRMsgs::ReqMPCreateScreen_TextATTR;
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateScreen.TernameATTR.ternametextattr)
  return ternametextattr_;
}
inline ::SRMsgs::ReqMPCreateScreen_TextATTR* ReqMPCreateScreen_TernameATTR::release_ternametextattr() {
  clear_has_ternametextattr();
  ::SRMsgs::ReqMPCreateScreen_TextATTR* temp = ternametextattr_;
  ternametextattr_ = NULL;
  return temp;
}
inline void ReqMPCreateScreen_TernameATTR::set_allocated_ternametextattr(::SRMsgs::ReqMPCreateScreen_TextATTR* ternametextattr) {
  delete ternametextattr_;
  ternametextattr_ = ternametextattr;
  if (ternametextattr) {
    set_has_ternametextattr();
  } else {
    clear_has_ternametextattr();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateScreen.TernameATTR.ternametextattr)
}

// -------------------------------------------------------------------

// ReqMPCreateScreen

// optional uint64 confid = 1;
inline bool ReqMPCreateScreen::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqMPCreateScreen::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqMPCreateScreen::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqMPCreateScreen::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 ReqMPCreateScreen::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.confid)
  return confid_;
}
inline void ReqMPCreateScreen::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.confid)
}

// optional uint32 mcid = 2;
inline bool ReqMPCreateScreen::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqMPCreateScreen::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqMPCreateScreen::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqMPCreateScreen::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.mcid)
  return mcid_;
}
inline void ReqMPCreateScreen::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.mcid)
}

// optional uint32 mpid = 3;
inline bool ReqMPCreateScreen::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqMPCreateScreen::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqMPCreateScreen::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqMPCreateScreen::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.mpid)
  return mpid_;
}
inline void ReqMPCreateScreen::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.mpid)
}

// optional uint32 channelid = 4;
inline bool ReqMPCreateScreen::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqMPCreateScreen::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqMPCreateScreen::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqMPCreateScreen::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.channelid)
  return channelid_;
}
inline void ReqMPCreateScreen::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.channelid)
}

// optional uint32 screentype = 5;
inline bool ReqMPCreateScreen::has_screentype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqMPCreateScreen::set_has_screentype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqMPCreateScreen::clear_has_screentype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqMPCreateScreen::clear_screentype() {
  screentype_ = 0u;
  clear_has_screentype();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::screentype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.screentype)
  return screentype_;
}
inline void ReqMPCreateScreen::set_screentype(::google::protobuf::uint32 value) {
  set_has_screentype();
  screentype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.screentype)
}

// optional uint32 relatednetmpid = 6;
inline bool ReqMPCreateScreen::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void ReqMPCreateScreen::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void ReqMPCreateScreen::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void ReqMPCreateScreen::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.relatednetmpid)
  return relatednetmpid_;
}
inline void ReqMPCreateScreen::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.relatednetmpid)
}

// optional bool voiceActiveInd = 7;
inline bool ReqMPCreateScreen::has_voiceactiveind() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void ReqMPCreateScreen::set_has_voiceactiveind() {
  _has_bits_[0] |= 0x00000040u;
}
inline void ReqMPCreateScreen::clear_has_voiceactiveind() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void ReqMPCreateScreen::clear_voiceactiveind() {
  voiceactiveind_ = false;
  clear_has_voiceactiveind();
}
inline bool ReqMPCreateScreen::voiceactiveind() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.voiceActiveInd)
  return voiceactiveind_;
}
inline void ReqMPCreateScreen::set_voiceactiveind(bool value) {
  set_has_voiceactiveind();
  voiceactiveind_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.voiceActiveInd)
}

// optional string voiceActiveColor = 8;
inline bool ReqMPCreateScreen::has_voiceactivecolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void ReqMPCreateScreen::set_has_voiceactivecolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void ReqMPCreateScreen::clear_has_voiceactivecolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void ReqMPCreateScreen::clear_voiceactivecolor() {
  if (voiceactivecolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voiceactivecolor_->clear();
  }
  clear_has_voiceactivecolor();
}
inline const ::std::string& ReqMPCreateScreen::voiceactivecolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.voiceActiveColor)
  return *voiceactivecolor_;
}
inline void ReqMPCreateScreen::set_voiceactivecolor(const ::std::string& value) {
  set_has_voiceactivecolor();
  if (voiceactivecolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voiceactivecolor_ = new ::std::string;
  }
  voiceactivecolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.voiceActiveColor)
}
inline void ReqMPCreateScreen::set_voiceactivecolor(const char* value) {
  set_has_voiceactivecolor();
  if (voiceactivecolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voiceactivecolor_ = new ::std::string;
  }
  voiceactivecolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.ReqMPCreateScreen.voiceActiveColor)
}
inline void ReqMPCreateScreen::set_voiceactivecolor(const char* value, size_t size) {
  set_has_voiceactivecolor();
  if (voiceactivecolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voiceactivecolor_ = new ::std::string;
  }
  voiceactivecolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.ReqMPCreateScreen.voiceActiveColor)
}
inline ::std::string* ReqMPCreateScreen::mutable_voiceactivecolor() {
  set_has_voiceactivecolor();
  if (voiceactivecolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    voiceactivecolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateScreen.voiceActiveColor)
  return voiceactivecolor_;
}
inline ::std::string* ReqMPCreateScreen::release_voiceactivecolor() {
  clear_has_voiceactivecolor();
  if (voiceactivecolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = voiceactivecolor_;
    voiceactivecolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqMPCreateScreen::set_allocated_voiceactivecolor(::std::string* voiceactivecolor) {
  if (voiceactivecolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete voiceactivecolor_;
  }
  if (voiceactivecolor) {
    set_has_voiceactivecolor();
    voiceactivecolor_ = voiceactivecolor;
  } else {
    clear_has_voiceactivecolor();
    voiceactivecolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateScreen.voiceActiveColor)
}

// optional string chairFeccColor = 9;
inline bool ReqMPCreateScreen::has_chairfecccolor() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void ReqMPCreateScreen::set_has_chairfecccolor() {
  _has_bits_[0] |= 0x00000100u;
}
inline void ReqMPCreateScreen::clear_has_chairfecccolor() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void ReqMPCreateScreen::clear_chairfecccolor() {
  if (chairfecccolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairfecccolor_->clear();
  }
  clear_has_chairfecccolor();
}
inline const ::std::string& ReqMPCreateScreen::chairfecccolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.chairFeccColor)
  return *chairfecccolor_;
}
inline void ReqMPCreateScreen::set_chairfecccolor(const ::std::string& value) {
  set_has_chairfecccolor();
  if (chairfecccolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairfecccolor_ = new ::std::string;
  }
  chairfecccolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.chairFeccColor)
}
inline void ReqMPCreateScreen::set_chairfecccolor(const char* value) {
  set_has_chairfecccolor();
  if (chairfecccolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairfecccolor_ = new ::std::string;
  }
  chairfecccolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.ReqMPCreateScreen.chairFeccColor)
}
inline void ReqMPCreateScreen::set_chairfecccolor(const char* value, size_t size) {
  set_has_chairfecccolor();
  if (chairfecccolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairfecccolor_ = new ::std::string;
  }
  chairfecccolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.ReqMPCreateScreen.chairFeccColor)
}
inline ::std::string* ReqMPCreateScreen::mutable_chairfecccolor() {
  set_has_chairfecccolor();
  if (chairfecccolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    chairfecccolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateScreen.chairFeccColor)
  return chairfecccolor_;
}
inline ::std::string* ReqMPCreateScreen::release_chairfecccolor() {
  clear_has_chairfecccolor();
  if (chairfecccolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = chairfecccolor_;
    chairfecccolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void ReqMPCreateScreen::set_allocated_chairfecccolor(::std::string* chairfecccolor) {
  if (chairfecccolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete chairfecccolor_;
  }
  if (chairfecccolor) {
    set_has_chairfecccolor();
    chairfecccolor_ = chairfecccolor;
  } else {
    clear_has_chairfecccolor();
    chairfecccolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateScreen.chairFeccColor)
}

// optional .SRMsgs.ReqMPCreateScreen.TernameATTR ternameattr = 10;
inline bool ReqMPCreateScreen::has_ternameattr() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void ReqMPCreateScreen::set_has_ternameattr() {
  _has_bits_[0] |= 0x00000200u;
}
inline void ReqMPCreateScreen::clear_has_ternameattr() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void ReqMPCreateScreen::clear_ternameattr() {
  if (ternameattr_ != NULL) ternameattr_->::SRMsgs::ReqMPCreateScreen_TernameATTR::Clear();
  clear_has_ternameattr();
}
inline const ::SRMsgs::ReqMPCreateScreen_TernameATTR& ReqMPCreateScreen::ternameattr() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.ternameattr)
  return ternameattr_ != NULL ? *ternameattr_ : *default_instance_->ternameattr_;
}
inline ::SRMsgs::ReqMPCreateScreen_TernameATTR* ReqMPCreateScreen::mutable_ternameattr() {
  set_has_ternameattr();
  if (ternameattr_ == NULL) ternameattr_ = new ::SRMsgs::ReqMPCreateScreen_TernameATTR;
  // @@protoc_insertion_point(field_mutable:SRMsgs.ReqMPCreateScreen.ternameattr)
  return ternameattr_;
}
inline ::SRMsgs::ReqMPCreateScreen_TernameATTR* ReqMPCreateScreen::release_ternameattr() {
  clear_has_ternameattr();
  ::SRMsgs::ReqMPCreateScreen_TernameATTR* temp = ternameattr_;
  ternameattr_ = NULL;
  return temp;
}
inline void ReqMPCreateScreen::set_allocated_ternameattr(::SRMsgs::ReqMPCreateScreen_TernameATTR* ternameattr) {
  delete ternameattr_;
  ternameattr_ = ternameattr;
  if (ternameattr) {
    set_has_ternameattr();
  } else {
    clear_has_ternameattr();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.ReqMPCreateScreen.ternameattr)
}

// optional uint32 seqnum = 11;
inline bool ReqMPCreateScreen::has_seqnum() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void ReqMPCreateScreen::set_has_seqnum() {
  _has_bits_[0] |= 0x00000400u;
}
inline void ReqMPCreateScreen::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void ReqMPCreateScreen::clear_seqnum() {
  seqnum_ = 0u;
  clear_has_seqnum();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::seqnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.seqnum)
  return seqnum_;
}
inline void ReqMPCreateScreen::set_seqnum(::google::protobuf::uint32 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.seqnum)
}

// optional uint32 screenid = 12;
inline bool ReqMPCreateScreen::has_screenid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void ReqMPCreateScreen::set_has_screenid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void ReqMPCreateScreen::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void ReqMPCreateScreen::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.screenid)
  return screenid_;
}
inline void ReqMPCreateScreen::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.screenid)
}

// optional uint32 videosize = 13;
inline bool ReqMPCreateScreen::has_videosize() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void ReqMPCreateScreen::set_has_videosize() {
  _has_bits_[0] |= 0x00001000u;
}
inline void ReqMPCreateScreen::clear_has_videosize() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void ReqMPCreateScreen::clear_videosize() {
  videosize_ = 0u;
  clear_has_videosize();
}
inline ::google::protobuf::uint32 ReqMPCreateScreen::videosize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqMPCreateScreen.videosize)
  return videosize_;
}
inline void ReqMPCreateScreen::set_videosize(::google::protobuf::uint32 value) {
  set_has_videosize();
  videosize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqMPCreateScreen.videosize)
}

// -------------------------------------------------------------------

// CmdMPSetScreenLayout_AutoPollInfo

// optional uint64 apid = 1;
inline bool CmdMPSetScreenLayout_AutoPollInfo::has_apid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSetScreenLayout_AutoPollInfo::set_has_apid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSetScreenLayout_AutoPollInfo::clear_has_apid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSetScreenLayout_AutoPollInfo::clear_apid() {
  apid_ = GOOGLE_ULONGLONG(0);
  clear_has_apid();
}
inline ::google::protobuf::uint64 CmdMPSetScreenLayout_AutoPollInfo::apid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.AutoPollInfo.apid)
  return apid_;
}
inline void CmdMPSetScreenLayout_AutoPollInfo::set_apid(::google::protobuf::uint64 value) {
  set_has_apid();
  apid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.AutoPollInfo.apid)
}

// -------------------------------------------------------------------

// CmdMPSetScreenLayout_ConfPollInfo

// optional uint32 terid = 1;
inline bool CmdMPSetScreenLayout_ConfPollInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSetScreenLayout_ConfPollInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSetScreenLayout_ConfPollInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSetScreenLayout_ConfPollInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ConfPollInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ConfPollInfo.terid)
  return terid_;
}
inline void CmdMPSetScreenLayout_ConfPollInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ConfPollInfo.terid)
}

// -------------------------------------------------------------------

// CmdMPSetScreenLayout_ScreenPaneInfo

// optional uint32 paneindex = 1;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_paneindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_paneindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_paneindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_paneindex() {
  paneindex_ = 0u;
  clear_has_paneindex();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ScreenPaneInfo::paneindex() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.paneindex)
  return paneindex_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_paneindex(::google::protobuf::uint32 value) {
  set_has_paneindex();
  paneindex_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.paneindex)
}

// optional uint32 contenttype = 2;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_contenttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_contenttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_contenttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_contenttype() {
  contenttype_ = 0u;
  clear_has_contenttype();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ScreenPaneInfo::contenttype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.contenttype)
  return contenttype_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_contenttype(::google::protobuf::uint32 value) {
  set_has_contenttype();
  contenttype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.contenttype)
}

// optional uint32 optype = 3;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_optype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_optype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_optype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ScreenPaneInfo::optype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.optype)
  return optype_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.optype)
}

// optional uint32 polltime = 4;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_polltime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_polltime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_polltime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_polltime() {
  polltime_ = 0u;
  clear_has_polltime();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ScreenPaneInfo::polltime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.polltime)
  return polltime_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_polltime(::google::protobuf::uint32 value) {
  set_has_polltime();
  polltime_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.polltime)
}

// optional uint32 terid = 5;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ScreenPaneInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.terid)
  return terid_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.terid)
}

// optional uint32 channelid = 6;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_channelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_channelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout_ScreenPaneInfo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.channelid)
  return channelid_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.channelid)
}

// optional string tername = 7;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_tername() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_tername() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_tername() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_tername() {
  if (tername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_->clear();
  }
  clear_has_tername();
}
inline const ::std::string& CmdMPSetScreenLayout_ScreenPaneInfo::tername() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.tername)
  return *tername_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_tername(const ::std::string& value) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.tername)
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_tername(const char* value) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.tername)
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_tername(const char* value, size_t size) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.tername)
}
inline ::std::string* CmdMPSetScreenLayout_ScreenPaneInfo::mutable_tername() {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.tername)
  return tername_;
}
inline ::std::string* CmdMPSetScreenLayout_ScreenPaneInfo::release_tername() {
  clear_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tername_;
    tername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_allocated_tername(::std::string* tername) {
  if (tername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tername_;
  }
  if (tername) {
    set_has_tername();
    tername_ = tername;
  } else {
    clear_has_tername();
    tername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.tername)
}

// optional sint32 vsrcid = 8;
inline bool CmdMPSetScreenLayout_ScreenPaneInfo::has_vsrcid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_has_vsrcid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_has_vsrcid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_vsrcid() {
  vsrcid_ = 0;
  clear_has_vsrcid();
}
inline ::google::protobuf::int32 CmdMPSetScreenLayout_ScreenPaneInfo::vsrcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.vsrcid)
  return vsrcid_;
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::set_vsrcid(::google::protobuf::int32 value) {
  set_has_vsrcid();
  vsrcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.vsrcid)
}

// repeated .SRMsgs.CmdMPSetScreenLayout.AutoPollInfo autopolllist = 9;
inline int CmdMPSetScreenLayout_ScreenPaneInfo::autopolllist_size() const {
  return autopolllist_.size();
}
inline void CmdMPSetScreenLayout_ScreenPaneInfo::clear_autopolllist() {
  autopolllist_.Clear();
}
inline const ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo& CmdMPSetScreenLayout_ScreenPaneInfo::autopolllist(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.autopolllist)
  return autopolllist_.Get(index);
}
inline ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo* CmdMPSetScreenLayout_ScreenPaneInfo::mutable_autopolllist(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.autopolllist)
  return autopolllist_.Mutable(index);
}
inline ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo* CmdMPSetScreenLayout_ScreenPaneInfo::add_autopolllist() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.autopolllist)
  return autopolllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo >&
CmdMPSetScreenLayout_ScreenPaneInfo::autopolllist() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.autopolllist)
  return autopolllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_AutoPollInfo >*
CmdMPSetScreenLayout_ScreenPaneInfo::mutable_autopolllist() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo.autopolllist)
  return &autopolllist_;
}

// -------------------------------------------------------------------

// CmdMPSetScreenLayout

// optional uint64 confid = 1;
inline bool CmdMPSetScreenLayout::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSetScreenLayout::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSetScreenLayout::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPSetScreenLayout::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.confid)
  return confid_;
}
inline void CmdMPSetScreenLayout::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPSetScreenLayout::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPSetScreenLayout::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPSetScreenLayout::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.mcid)
  return mcid_;
}
inline void CmdMPSetScreenLayout::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPSetScreenLayout::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPSetScreenLayout::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPSetScreenLayout::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.mpid)
  return mpid_;
}
inline void CmdMPSetScreenLayout::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.mpid)
}

// optional uint32 channelid = 4;
inline bool CmdMPSetScreenLayout::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPSetScreenLayout::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPSetScreenLayout::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.channelid)
  return channelid_;
}
inline void CmdMPSetScreenLayout::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.channelid)
}

// optional uint32 screenid = 5;
inline bool CmdMPSetScreenLayout::has_screenid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_screenid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPSetScreenLayout::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPSetScreenLayout::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.screenid)
  return screenid_;
}
inline void CmdMPSetScreenLayout::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.screenid)
}

// optional uint32 screentype = 6;
inline bool CmdMPSetScreenLayout::has_screentype() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_screentype() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdMPSetScreenLayout::clear_has_screentype() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdMPSetScreenLayout::clear_screentype() {
  screentype_ = 0u;
  clear_has_screentype();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::screentype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.screentype)
  return screentype_;
}
inline void CmdMPSetScreenLayout::set_screentype(::google::protobuf::uint32 value) {
  set_has_screentype();
  screentype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.screentype)
}

// optional uint32 layoutmode = 7;
inline bool CmdMPSetScreenLayout::has_layoutmode() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_layoutmode() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdMPSetScreenLayout::clear_has_layoutmode() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdMPSetScreenLayout::clear_layoutmode() {
  layoutmode_ = 0u;
  clear_has_layoutmode();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::layoutmode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.layoutmode)
  return layoutmode_;
}
inline void CmdMPSetScreenLayout::set_layoutmode(::google::protobuf::uint32 value) {
  set_has_layoutmode();
  layoutmode_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.layoutmode)
}

// repeated .SRMsgs.CmdMPSetScreenLayout.ScreenPaneInfo screenpanelist = 8;
inline int CmdMPSetScreenLayout::screenpanelist_size() const {
  return screenpanelist_.size();
}
inline void CmdMPSetScreenLayout::clear_screenpanelist() {
  screenpanelist_.Clear();
}
inline const ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo& CmdMPSetScreenLayout::screenpanelist(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.screenpanelist)
  return screenpanelist_.Get(index);
}
inline ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo* CmdMPSetScreenLayout::mutable_screenpanelist(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPSetScreenLayout.screenpanelist)
  return screenpanelist_.Mutable(index);
}
inline ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo* CmdMPSetScreenLayout::add_screenpanelist() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdMPSetScreenLayout.screenpanelist)
  return screenpanelist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo >&
CmdMPSetScreenLayout::screenpanelist() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdMPSetScreenLayout.screenpanelist)
  return screenpanelist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ScreenPaneInfo >*
CmdMPSetScreenLayout::mutable_screenpanelist() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdMPSetScreenLayout.screenpanelist)
  return &screenpanelist_;
}

// repeated .SRMsgs.CmdMPSetScreenLayout.ConfPollInfo confpolllist = 9;
inline int CmdMPSetScreenLayout::confpolllist_size() const {
  return confpolllist_.size();
}
inline void CmdMPSetScreenLayout::clear_confpolllist() {
  confpolllist_.Clear();
}
inline const ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo& CmdMPSetScreenLayout::confpolllist(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.confpolllist)
  return confpolllist_.Get(index);
}
inline ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo* CmdMPSetScreenLayout::mutable_confpolllist(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPSetScreenLayout.confpolllist)
  return confpolllist_.Mutable(index);
}
inline ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo* CmdMPSetScreenLayout::add_confpolllist() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdMPSetScreenLayout.confpolllist)
  return confpolllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo >&
CmdMPSetScreenLayout::confpolllist() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdMPSetScreenLayout.confpolllist)
  return confpolllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSetScreenLayout_ConfPollInfo >*
CmdMPSetScreenLayout::mutable_confpolllist() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdMPSetScreenLayout.confpolllist)
  return &confpolllist_;
}

// optional uint32 chairfollow = 10;
inline bool CmdMPSetScreenLayout::has_chairfollow() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CmdMPSetScreenLayout::set_has_chairfollow() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CmdMPSetScreenLayout::clear_has_chairfollow() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CmdMPSetScreenLayout::clear_chairfollow() {
  chairfollow_ = 0u;
  clear_has_chairfollow();
}
inline ::google::protobuf::uint32 CmdMPSetScreenLayout::chairfollow() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSetScreenLayout.chairfollow)
  return chairfollow_;
}
inline void CmdMPSetScreenLayout::set_chairfollow(::google::protobuf::uint32 value) {
  set_has_chairfollow();
  chairfollow_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSetScreenLayout.chairfollow)
}

// -------------------------------------------------------------------

// CmdMPDestoryScreen

// optional uint64 confid = 1;
inline bool CmdMPDestoryScreen::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPDestoryScreen::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPDestoryScreen::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPDestoryScreen::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPDestoryScreen::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryScreen.confid)
  return confid_;
}
inline void CmdMPDestoryScreen::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryScreen.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPDestoryScreen::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPDestoryScreen::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPDestoryScreen::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPDestoryScreen::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPDestoryScreen::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryScreen.mcid)
  return mcid_;
}
inline void CmdMPDestoryScreen::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryScreen.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPDestoryScreen::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPDestoryScreen::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPDestoryScreen::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPDestoryScreen::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPDestoryScreen::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryScreen.mpid)
  return mpid_;
}
inline void CmdMPDestoryScreen::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryScreen.mpid)
}

// optional uint32 channelid = 4;
inline bool CmdMPDestoryScreen::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPDestoryScreen::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPDestoryScreen::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPDestoryScreen::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPDestoryScreen::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryScreen.channelid)
  return channelid_;
}
inline void CmdMPDestoryScreen::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryScreen.channelid)
}

// optional uint32 screenid = 5;
inline bool CmdMPDestoryScreen::has_screenid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPDestoryScreen::set_has_screenid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPDestoryScreen::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPDestoryScreen::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 CmdMPDestoryScreen::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDestoryScreen.screenid)
  return screenid_;
}
inline void CmdMPDestoryScreen::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDestoryScreen.screenid)
}

// -------------------------------------------------------------------

// CmdMPAddSubtitle

// optional uint64 confid = 1;
inline bool CmdMPAddSubtitle::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPAddSubtitle::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPAddSubtitle::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPAddSubtitle::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPAddSubtitle::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.confid)
  return confid_;
}
inline void CmdMPAddSubtitle::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPAddSubtitle::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPAddSubtitle::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPAddSubtitle::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPAddSubtitle::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPAddSubtitle::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.mcid)
  return mcid_;
}
inline void CmdMPAddSubtitle::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPAddSubtitle::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPAddSubtitle::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPAddSubtitle::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPAddSubtitle::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPAddSubtitle::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.mpid)
  return mpid_;
}
inline void CmdMPAddSubtitle::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.mpid)
}

// optional string message = 4;
inline bool CmdMPAddSubtitle::has_message() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPAddSubtitle::set_has_message() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPAddSubtitle::clear_has_message() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPAddSubtitle::clear_message() {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_->clear();
  }
  clear_has_message();
}
inline const ::std::string& CmdMPAddSubtitle::message() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.message)
  return *message_;
}
inline void CmdMPAddSubtitle::set_message(const ::std::string& value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.message)
}
inline void CmdMPAddSubtitle::set_message(const char* value) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPAddSubtitle.message)
}
inline void CmdMPAddSubtitle::set_message(const char* value, size_t size) {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  message_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPAddSubtitle.message)
}
inline ::std::string* CmdMPAddSubtitle::mutable_message() {
  set_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    message_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPAddSubtitle.message)
  return message_;
}
inline ::std::string* CmdMPAddSubtitle::release_message() {
  clear_has_message();
  if (message_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = message_;
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPAddSubtitle::set_allocated_message(::std::string* message) {
  if (message_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete message_;
  }
  if (message) {
    set_has_message();
    message_ = message;
  } else {
    clear_has_message();
    message_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPAddSubtitle.message)
}

// optional uint32 msgpos = 5;
inline bool CmdMPAddSubtitle::has_msgpos() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPAddSubtitle::set_has_msgpos() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPAddSubtitle::clear_has_msgpos() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPAddSubtitle::clear_msgpos() {
  msgpos_ = 0u;
  clear_has_msgpos();
}
inline ::google::protobuf::uint32 CmdMPAddSubtitle::msgpos() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.msgpos)
  return msgpos_;
}
inline void CmdMPAddSubtitle::set_msgpos(::google::protobuf::uint32 value) {
  set_has_msgpos();
  msgpos_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.msgpos)
}

// optional string msgcolor = 6;
inline bool CmdMPAddSubtitle::has_msgcolor() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdMPAddSubtitle::set_has_msgcolor() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdMPAddSubtitle::clear_has_msgcolor() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdMPAddSubtitle::clear_msgcolor() {
  if (msgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_->clear();
  }
  clear_has_msgcolor();
}
inline const ::std::string& CmdMPAddSubtitle::msgcolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.msgcolor)
  return *msgcolor_;
}
inline void CmdMPAddSubtitle::set_msgcolor(const ::std::string& value) {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  msgcolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.msgcolor)
}
inline void CmdMPAddSubtitle::set_msgcolor(const char* value) {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  msgcolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPAddSubtitle.msgcolor)
}
inline void CmdMPAddSubtitle::set_msgcolor(const char* value, size_t size) {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  msgcolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPAddSubtitle.msgcolor)
}
inline ::std::string* CmdMPAddSubtitle::mutable_msgcolor() {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPAddSubtitle.msgcolor)
  return msgcolor_;
}
inline ::std::string* CmdMPAddSubtitle::release_msgcolor() {
  clear_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgcolor_;
    msgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPAddSubtitle::set_allocated_msgcolor(::std::string* msgcolor) {
  if (msgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgcolor_;
  }
  if (msgcolor) {
    set_has_msgcolor();
    msgcolor_ = msgcolor;
  } else {
    clear_has_msgcolor();
    msgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPAddSubtitle.msgcolor)
}

// optional uint32 fontsize = 7;
inline bool CmdMPAddSubtitle::has_fontsize() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdMPAddSubtitle::set_has_fontsize() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdMPAddSubtitle::clear_has_fontsize() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdMPAddSubtitle::clear_fontsize() {
  fontsize_ = 0u;
  clear_has_fontsize();
}
inline ::google::protobuf::uint32 CmdMPAddSubtitle::fontsize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.fontsize)
  return fontsize_;
}
inline void CmdMPAddSubtitle::set_fontsize(::google::protobuf::uint32 value) {
  set_has_fontsize();
  fontsize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.fontsize)
}

// optional bool enablemsgbg = 8;
inline bool CmdMPAddSubtitle::has_enablemsgbg() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdMPAddSubtitle::set_has_enablemsgbg() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdMPAddSubtitle::clear_has_enablemsgbg() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdMPAddSubtitle::clear_enablemsgbg() {
  enablemsgbg_ = false;
  clear_has_enablemsgbg();
}
inline bool CmdMPAddSubtitle::enablemsgbg() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.enablemsgbg)
  return enablemsgbg_;
}
inline void CmdMPAddSubtitle::set_enablemsgbg(bool value) {
  set_has_enablemsgbg();
  enablemsgbg_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.enablemsgbg)
}

// optional string msgbgcolor = 9;
inline bool CmdMPAddSubtitle::has_msgbgcolor() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CmdMPAddSubtitle::set_has_msgbgcolor() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CmdMPAddSubtitle::clear_has_msgbgcolor() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CmdMPAddSubtitle::clear_msgbgcolor() {
  if (msgbgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_->clear();
  }
  clear_has_msgbgcolor();
}
inline const ::std::string& CmdMPAddSubtitle::msgbgcolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.msgbgcolor)
  return *msgbgcolor_;
}
inline void CmdMPAddSubtitle::set_msgbgcolor(const ::std::string& value) {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  msgbgcolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.msgbgcolor)
}
inline void CmdMPAddSubtitle::set_msgbgcolor(const char* value) {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  msgbgcolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPAddSubtitle.msgbgcolor)
}
inline void CmdMPAddSubtitle::set_msgbgcolor(const char* value, size_t size) {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  msgbgcolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPAddSubtitle.msgbgcolor)
}
inline ::std::string* CmdMPAddSubtitle::mutable_msgbgcolor() {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPAddSubtitle.msgbgcolor)
  return msgbgcolor_;
}
inline ::std::string* CmdMPAddSubtitle::release_msgbgcolor() {
  clear_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgbgcolor_;
    msgbgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPAddSubtitle::set_allocated_msgbgcolor(::std::string* msgbgcolor) {
  if (msgbgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgbgcolor_;
  }
  if (msgbgcolor) {
    set_has_msgbgcolor();
    msgbgcolor_ = msgbgcolor;
  } else {
    clear_has_msgbgcolor();
    msgbgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPAddSubtitle.msgbgcolor)
}

// optional uint32 displaytime = 10;
inline bool CmdMPAddSubtitle::has_displaytime() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CmdMPAddSubtitle::set_has_displaytime() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CmdMPAddSubtitle::clear_has_displaytime() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CmdMPAddSubtitle::clear_displaytime() {
  displaytime_ = 0u;
  clear_has_displaytime();
}
inline ::google::protobuf::uint32 CmdMPAddSubtitle::displaytime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.displaytime)
  return displaytime_;
}
inline void CmdMPAddSubtitle::set_displaytime(::google::protobuf::uint32 value) {
  set_has_displaytime();
  displaytime_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.displaytime)
}

// optional bool enablemsgroll = 11;
inline bool CmdMPAddSubtitle::has_enablemsgroll() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CmdMPAddSubtitle::set_has_enablemsgroll() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CmdMPAddSubtitle::clear_has_enablemsgroll() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CmdMPAddSubtitle::clear_enablemsgroll() {
  enablemsgroll_ = false;
  clear_has_enablemsgroll();
}
inline bool CmdMPAddSubtitle::enablemsgroll() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.enablemsgroll)
  return enablemsgroll_;
}
inline void CmdMPAddSubtitle::set_enablemsgroll(bool value) {
  set_has_enablemsgroll();
  enablemsgroll_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.enablemsgroll)
}

// optional uint32 rollspeed = 12;
inline bool CmdMPAddSubtitle::has_rollspeed() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CmdMPAddSubtitle::set_has_rollspeed() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CmdMPAddSubtitle::clear_has_rollspeed() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CmdMPAddSubtitle::clear_rollspeed() {
  rollspeed_ = 0u;
  clear_has_rollspeed();
}
inline ::google::protobuf::uint32 CmdMPAddSubtitle::rollspeed() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPAddSubtitle.rollspeed)
  return rollspeed_;
}
inline void CmdMPAddSubtitle::set_rollspeed(::google::protobuf::uint32 value) {
  set_has_rollspeed();
  rollspeed_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPAddSubtitle.rollspeed)
}

// -------------------------------------------------------------------

// CmdMPStopSubtitle

// optional uint64 confid = 1;
inline bool CmdMPStopSubtitle::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPStopSubtitle::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPStopSubtitle::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPStopSubtitle::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPStopSubtitle::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStopSubtitle.confid)
  return confid_;
}
inline void CmdMPStopSubtitle::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStopSubtitle.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPStopSubtitle::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPStopSubtitle::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPStopSubtitle::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPStopSubtitle::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPStopSubtitle::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStopSubtitle.mcid)
  return mcid_;
}
inline void CmdMPStopSubtitle::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStopSubtitle.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPStopSubtitle::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPStopSubtitle::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPStopSubtitle::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPStopSubtitle::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPStopSubtitle::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStopSubtitle.mpid)
  return mpid_;
}
inline void CmdMPStopSubtitle::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStopSubtitle.mpid)
}

// -------------------------------------------------------------------

// CmdMPDisplayTername

// optional uint64 confid = 1;
inline bool CmdMPDisplayTername::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPDisplayTername::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPDisplayTername::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPDisplayTername::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPDisplayTername::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.confid)
  return confid_;
}
inline void CmdMPDisplayTername::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPDisplayTername::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPDisplayTername::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPDisplayTername::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPDisplayTername::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPDisplayTername::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.mcid)
  return mcid_;
}
inline void CmdMPDisplayTername::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPDisplayTername::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPDisplayTername::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPDisplayTername::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPDisplayTername::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPDisplayTername::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.mpid)
  return mpid_;
}
inline void CmdMPDisplayTername::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.mpid)
}

// optional uint32 msgpos = 4;
inline bool CmdMPDisplayTername::has_msgpos() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPDisplayTername::set_has_msgpos() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPDisplayTername::clear_has_msgpos() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPDisplayTername::clear_msgpos() {
  msgpos_ = 0u;
  clear_has_msgpos();
}
inline ::google::protobuf::uint32 CmdMPDisplayTername::msgpos() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.msgpos)
  return msgpos_;
}
inline void CmdMPDisplayTername::set_msgpos(::google::protobuf::uint32 value) {
  set_has_msgpos();
  msgpos_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.msgpos)
}

// optional string msgcolor = 5;
inline bool CmdMPDisplayTername::has_msgcolor() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPDisplayTername::set_has_msgcolor() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPDisplayTername::clear_has_msgcolor() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPDisplayTername::clear_msgcolor() {
  if (msgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_->clear();
  }
  clear_has_msgcolor();
}
inline const ::std::string& CmdMPDisplayTername::msgcolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.msgcolor)
  return *msgcolor_;
}
inline void CmdMPDisplayTername::set_msgcolor(const ::std::string& value) {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  msgcolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.msgcolor)
}
inline void CmdMPDisplayTername::set_msgcolor(const char* value) {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  msgcolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPDisplayTername.msgcolor)
}
inline void CmdMPDisplayTername::set_msgcolor(const char* value, size_t size) {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  msgcolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPDisplayTername.msgcolor)
}
inline ::std::string* CmdMPDisplayTername::mutable_msgcolor() {
  set_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgcolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPDisplayTername.msgcolor)
  return msgcolor_;
}
inline ::std::string* CmdMPDisplayTername::release_msgcolor() {
  clear_has_msgcolor();
  if (msgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgcolor_;
    msgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPDisplayTername::set_allocated_msgcolor(::std::string* msgcolor) {
  if (msgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgcolor_;
  }
  if (msgcolor) {
    set_has_msgcolor();
    msgcolor_ = msgcolor;
  } else {
    clear_has_msgcolor();
    msgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPDisplayTername.msgcolor)
}

// optional uint32 fontsize = 6;
inline bool CmdMPDisplayTername::has_fontsize() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdMPDisplayTername::set_has_fontsize() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdMPDisplayTername::clear_has_fontsize() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdMPDisplayTername::clear_fontsize() {
  fontsize_ = 0u;
  clear_has_fontsize();
}
inline ::google::protobuf::uint32 CmdMPDisplayTername::fontsize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.fontsize)
  return fontsize_;
}
inline void CmdMPDisplayTername::set_fontsize(::google::protobuf::uint32 value) {
  set_has_fontsize();
  fontsize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.fontsize)
}

// optional bool enableMsgBg = 7;
inline bool CmdMPDisplayTername::has_enablemsgbg() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdMPDisplayTername::set_has_enablemsgbg() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdMPDisplayTername::clear_has_enablemsgbg() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdMPDisplayTername::clear_enablemsgbg() {
  enablemsgbg_ = false;
  clear_has_enablemsgbg();
}
inline bool CmdMPDisplayTername::enablemsgbg() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.enableMsgBg)
  return enablemsgbg_;
}
inline void CmdMPDisplayTername::set_enablemsgbg(bool value) {
  set_has_enablemsgbg();
  enablemsgbg_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.enableMsgBg)
}

// optional string msgbgcolor = 8;
inline bool CmdMPDisplayTername::has_msgbgcolor() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdMPDisplayTername::set_has_msgbgcolor() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdMPDisplayTername::clear_has_msgbgcolor() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdMPDisplayTername::clear_msgbgcolor() {
  if (msgbgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_->clear();
  }
  clear_has_msgbgcolor();
}
inline const ::std::string& CmdMPDisplayTername::msgbgcolor() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPDisplayTername.msgbgcolor)
  return *msgbgcolor_;
}
inline void CmdMPDisplayTername::set_msgbgcolor(const ::std::string& value) {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  msgbgcolor_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPDisplayTername.msgbgcolor)
}
inline void CmdMPDisplayTername::set_msgbgcolor(const char* value) {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  msgbgcolor_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPDisplayTername.msgbgcolor)
}
inline void CmdMPDisplayTername::set_msgbgcolor(const char* value, size_t size) {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  msgbgcolor_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPDisplayTername.msgbgcolor)
}
inline ::std::string* CmdMPDisplayTername::mutable_msgbgcolor() {
  set_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msgbgcolor_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPDisplayTername.msgbgcolor)
  return msgbgcolor_;
}
inline ::std::string* CmdMPDisplayTername::release_msgbgcolor() {
  clear_has_msgbgcolor();
  if (msgbgcolor_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msgbgcolor_;
    msgbgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPDisplayTername::set_allocated_msgbgcolor(::std::string* msgbgcolor) {
  if (msgbgcolor_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msgbgcolor_;
  }
  if (msgbgcolor) {
    set_has_msgbgcolor();
    msgbgcolor_ = msgbgcolor;
  } else {
    clear_has_msgbgcolor();
    msgbgcolor_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPDisplayTername.msgbgcolor)
}

// -------------------------------------------------------------------

// CmdMPHideTername

// optional uint64 confid = 1;
inline bool CmdMPHideTername::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPHideTername::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPHideTername::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPHideTername::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPHideTername::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPHideTername.confid)
  return confid_;
}
inline void CmdMPHideTername::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPHideTername.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPHideTername::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPHideTername::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPHideTername::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPHideTername::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPHideTername::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPHideTername.mcid)
  return mcid_;
}
inline void CmdMPHideTername::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPHideTername.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPHideTername::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPHideTername::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPHideTername::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPHideTername::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPHideTername::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPHideTername.mpid)
  return mpid_;
}
inline void CmdMPHideTername::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPHideTername.mpid)
}

// -------------------------------------------------------------------

// CmdMPStartSendVideo_VideoSize

// optional uint32 level = 1;
inline bool CmdMPStartSendVideo_VideoSize::has_level() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPStartSendVideo_VideoSize::set_has_level() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPStartSendVideo_VideoSize::clear_has_level() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPStartSendVideo_VideoSize::clear_level() {
  level_ = 0u;
  clear_has_level();
}
inline ::google::protobuf::uint32 CmdMPStartSendVideo_VideoSize::level() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStartSendVideo.VideoSize.level)
  return level_;
}
inline void CmdMPStartSendVideo_VideoSize::set_level(::google::protobuf::uint32 value) {
  set_has_level();
  level_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStartSendVideo.VideoSize.level)
}

// optional uint32 count = 2;
inline bool CmdMPStartSendVideo_VideoSize::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPStartSendVideo_VideoSize::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPStartSendVideo_VideoSize::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPStartSendVideo_VideoSize::clear_count() {
  count_ = 0u;
  clear_has_count();
}
inline ::google::protobuf::uint32 CmdMPStartSendVideo_VideoSize::count() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStartSendVideo.VideoSize.count)
  return count_;
}
inline void CmdMPStartSendVideo_VideoSize::set_count(::google::protobuf::uint32 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStartSendVideo.VideoSize.count)
}

// -------------------------------------------------------------------

// CmdMPStartSendVideo

// optional uint64 confid = 1;
inline bool CmdMPStartSendVideo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPStartSendVideo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPStartSendVideo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPStartSendVideo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPStartSendVideo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStartSendVideo.confid)
  return confid_;
}
inline void CmdMPStartSendVideo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStartSendVideo.confid)
}

// optional uint32 channelid = 2;
inline bool CmdMPStartSendVideo::has_channelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPStartSendVideo::set_has_channelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPStartSendVideo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPStartSendVideo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPStartSendVideo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStartSendVideo.channelid)
  return channelid_;
}
inline void CmdMPStartSendVideo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStartSendVideo.channelid)
}

// optional uint32 screenid = 3;
inline bool CmdMPStartSendVideo::has_screenid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPStartSendVideo::set_has_screenid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPStartSendVideo::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPStartSendVideo::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 CmdMPStartSendVideo::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStartSendVideo.screenid)
  return screenid_;
}
inline void CmdMPStartSendVideo::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPStartSendVideo.screenid)
}

// repeated .SRMsgs.CmdMPStartSendVideo.VideoSize sendvideosize = 4;
inline int CmdMPStartSendVideo::sendvideosize_size() const {
  return sendvideosize_.size();
}
inline void CmdMPStartSendVideo::clear_sendvideosize() {
  sendvideosize_.Clear();
}
inline const ::SRMsgs::CmdMPStartSendVideo_VideoSize& CmdMPStartSendVideo::sendvideosize(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPStartSendVideo.sendvideosize)
  return sendvideosize_.Get(index);
}
inline ::SRMsgs::CmdMPStartSendVideo_VideoSize* CmdMPStartSendVideo::mutable_sendvideosize(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPStartSendVideo.sendvideosize)
  return sendvideosize_.Mutable(index);
}
inline ::SRMsgs::CmdMPStartSendVideo_VideoSize* CmdMPStartSendVideo::add_sendvideosize() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdMPStartSendVideo.sendvideosize)
  return sendvideosize_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPStartSendVideo_VideoSize >&
CmdMPStartSendVideo::sendvideosize() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdMPStartSendVideo.sendvideosize)
  return sendvideosize_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPStartSendVideo_VideoSize >*
CmdMPStartSendVideo::mutable_sendvideosize() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdMPStartSendVideo.sendvideosize)
  return &sendvideosize_;
}

// -------------------------------------------------------------------

// CmdMPReOpenNetMPMediaPort

// optional string netmpip = 1;
inline bool CmdMPReOpenNetMPMediaPort::has_netmpip() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_netmpip() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_netmpip() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_netmpip() {
  if (netmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_->clear();
  }
  clear_has_netmpip();
}
inline const ::std::string& CmdMPReOpenNetMPMediaPort::netmpip() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.netmpip)
  return *netmpip_;
}
inline void CmdMPReOpenNetMPMediaPort::set_netmpip(const ::std::string& value) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.netmpip)
}
inline void CmdMPReOpenNetMPMediaPort::set_netmpip(const char* value) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdMPReOpenNetMPMediaPort.netmpip)
}
inline void CmdMPReOpenNetMPMediaPort::set_netmpip(const char* value, size_t size) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdMPReOpenNetMPMediaPort.netmpip)
}
inline ::std::string* CmdMPReOpenNetMPMediaPort::mutable_netmpip() {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPReOpenNetMPMediaPort.netmpip)
  return netmpip_;
}
inline ::std::string* CmdMPReOpenNetMPMediaPort::release_netmpip() {
  clear_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = netmpip_;
    netmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdMPReOpenNetMPMediaPort::set_allocated_netmpip(::std::string* netmpip) {
  if (netmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete netmpip_;
  }
  if (netmpip) {
    set_has_netmpip();
    netmpip_ = netmpip;
  } else {
    clear_has_netmpip();
    netmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdMPReOpenNetMPMediaPort.netmpip)
}

// optional uint32 audiodatarecvport = 2;
inline bool CmdMPReOpenNetMPMediaPort::has_audiodatarecvport() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_audiodatarecvport() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_audiodatarecvport() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_audiodatarecvport() {
  audiodatarecvport_ = 0u;
  clear_has_audiodatarecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::audiodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.audiodatarecvport)
  return audiodatarecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_audiodatarecvport(::google::protobuf::uint32 value) {
  set_has_audiodatarecvport();
  audiodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.audiodatarecvport)
}

// optional uint32 audioctrlrecvport = 3;
inline bool CmdMPReOpenNetMPMediaPort::has_audioctrlrecvport() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_audioctrlrecvport() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_audioctrlrecvport() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_audioctrlrecvport() {
  audioctrlrecvport_ = 0u;
  clear_has_audioctrlrecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::audioctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.audioctrlrecvport)
  return audioctrlrecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_audioctrlrecvport(::google::protobuf::uint32 value) {
  set_has_audioctrlrecvport();
  audioctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.audioctrlrecvport)
}

// optional uint32 videodatarecvport = 4;
inline bool CmdMPReOpenNetMPMediaPort::has_videodatarecvport() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_videodatarecvport() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_videodatarecvport() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_videodatarecvport() {
  videodatarecvport_ = 0u;
  clear_has_videodatarecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::videodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.videodatarecvport)
  return videodatarecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_videodatarecvport(::google::protobuf::uint32 value) {
  set_has_videodatarecvport();
  videodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.videodatarecvport)
}

// optional uint32 videoctrlrecvport = 5;
inline bool CmdMPReOpenNetMPMediaPort::has_videoctrlrecvport() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_videoctrlrecvport() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_videoctrlrecvport() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_videoctrlrecvport() {
  videoctrlrecvport_ = 0u;
  clear_has_videoctrlrecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::videoctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.videoctrlrecvport)
  return videoctrlrecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_videoctrlrecvport(::google::protobuf::uint32 value) {
  set_has_videoctrlrecvport();
  videoctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.videoctrlrecvport)
}

// optional uint32 video2datarecvport = 6;
inline bool CmdMPReOpenNetMPMediaPort::has_video2datarecvport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_video2datarecvport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_video2datarecvport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_video2datarecvport() {
  video2datarecvport_ = 0u;
  clear_has_video2datarecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::video2datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.video2datarecvport)
  return video2datarecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_video2datarecvport(::google::protobuf::uint32 value) {
  set_has_video2datarecvport();
  video2datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.video2datarecvport)
}

// optional uint32 video2ctrlrecvport = 7;
inline bool CmdMPReOpenNetMPMediaPort::has_video2ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_video2ctrlrecvport() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_video2ctrlrecvport() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_video2ctrlrecvport() {
  video2ctrlrecvport_ = 0u;
  clear_has_video2ctrlrecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::video2ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.video2ctrlrecvport)
  return video2ctrlrecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_video2ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video2ctrlrecvport();
  video2ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.video2ctrlrecvport)
}

// optional uint32 video3datarecvport = 8;
inline bool CmdMPReOpenNetMPMediaPort::has_video3datarecvport() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_video3datarecvport() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_video3datarecvport() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_video3datarecvport() {
  video3datarecvport_ = 0u;
  clear_has_video3datarecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::video3datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.video3datarecvport)
  return video3datarecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_video3datarecvport(::google::protobuf::uint32 value) {
  set_has_video3datarecvport();
  video3datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.video3datarecvport)
}

// optional uint32 video3ctrlrecvport = 9;
inline bool CmdMPReOpenNetMPMediaPort::has_video3ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_video3ctrlrecvport() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_video3ctrlrecvport() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_video3ctrlrecvport() {
  video3ctrlrecvport_ = 0u;
  clear_has_video3ctrlrecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::video3ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.video3ctrlrecvport)
  return video3ctrlrecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_video3ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video3ctrlrecvport();
  video3ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.video3ctrlrecvport)
}

// optional uint32 desktopdatarecvport = 10;
inline bool CmdMPReOpenNetMPMediaPort::has_desktopdatarecvport() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_desktopdatarecvport() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_desktopdatarecvport() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_desktopdatarecvport() {
  desktopdatarecvport_ = 0u;
  clear_has_desktopdatarecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::desktopdatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.desktopdatarecvport)
  return desktopdatarecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_desktopdatarecvport(::google::protobuf::uint32 value) {
  set_has_desktopdatarecvport();
  desktopdatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.desktopdatarecvport)
}

// optional uint32 desktopctrlrecvport = 11;
inline bool CmdMPReOpenNetMPMediaPort::has_desktopctrlrecvport() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_desktopctrlrecvport() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_desktopctrlrecvport() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_desktopctrlrecvport() {
  desktopctrlrecvport_ = 0u;
  clear_has_desktopctrlrecvport();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::desktopctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.desktopctrlrecvport)
  return desktopctrlrecvport_;
}
inline void CmdMPReOpenNetMPMediaPort::set_desktopctrlrecvport(::google::protobuf::uint32 value) {
  set_has_desktopctrlrecvport();
  desktopctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.desktopctrlrecvport)
}

// optional uint64 confid = 12;
inline bool CmdMPReOpenNetMPMediaPort::has_confid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_confid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_confid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPReOpenNetMPMediaPort::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.confid)
  return confid_;
}
inline void CmdMPReOpenNetMPMediaPort::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.confid)
}

// optional uint32 mcid = 13;
inline bool CmdMPReOpenNetMPMediaPort::has_mcid() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_mcid() {
  _has_bits_[0] |= 0x00001000u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_mcid() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.mcid)
  return mcid_;
}
inline void CmdMPReOpenNetMPMediaPort::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.mcid)
}

// optional uint32 mpid = 14;
inline bool CmdMPReOpenNetMPMediaPort::has_mpid() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_mpid() {
  _has_bits_[0] |= 0x00002000u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_mpid() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.mpid)
  return mpid_;
}
inline void CmdMPReOpenNetMPMediaPort::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.mpid)
}

// optional uint32 channelid = 15;
inline bool CmdMPReOpenNetMPMediaPort::has_channelid() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void CmdMPReOpenNetMPMediaPort::set_has_channelid() {
  _has_bits_[0] |= 0x00004000u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_has_channelid() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void CmdMPReOpenNetMPMediaPort::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPReOpenNetMPMediaPort::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPReOpenNetMPMediaPort.channelid)
  return channelid_;
}
inline void CmdMPReOpenNetMPMediaPort::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPReOpenNetMPMediaPort.channelid)
}

// -------------------------------------------------------------------

// IndMPChairTransfer

// optional uint64 confid = 1;
inline bool IndMPChairTransfer::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChairTransfer::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChairTransfer::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChairTransfer::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPChairTransfer::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairTransfer.confid)
  return confid_;
}
inline void IndMPChairTransfer::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairTransfer.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPChairTransfer::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChairTransfer::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChairTransfer::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChairTransfer::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPChairTransfer::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairTransfer.mcid)
  return mcid_;
}
inline void IndMPChairTransfer::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairTransfer.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPChairTransfer::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChairTransfer::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChairTransfer::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChairTransfer::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPChairTransfer::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairTransfer.mpid)
  return mpid_;
}
inline void IndMPChairTransfer::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairTransfer.mpid)
}

// optional uint32 nchterid = 4;
inline bool IndMPChairTransfer::has_nchterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChairTransfer::set_has_nchterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChairTransfer::clear_has_nchterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChairTransfer::clear_nchterid() {
  nchterid_ = 0u;
  clear_has_nchterid();
}
inline ::google::protobuf::uint32 IndMPChairTransfer::nchterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairTransfer.nchterid)
  return nchterid_;
}
inline void IndMPChairTransfer::set_nchterid(::google::protobuf::uint32 value) {
  set_has_nchterid();
  nchterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairTransfer.nchterid)
}

// optional uint32 nchchannelid = 5;
inline bool IndMPChairTransfer::has_nchchannelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPChairTransfer::set_has_nchchannelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPChairTransfer::clear_has_nchchannelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPChairTransfer::clear_nchchannelid() {
  nchchannelid_ = 0u;
  clear_has_nchchannelid();
}
inline ::google::protobuf::uint32 IndMPChairTransfer::nchchannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairTransfer.nchchannelid)
  return nchchannelid_;
}
inline void IndMPChairTransfer::set_nchchannelid(::google::protobuf::uint32 value) {
  set_has_nchchannelid();
  nchchannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairTransfer.nchchannelid)
}

// -------------------------------------------------------------------

// IndtMPTerMuteEnable

// optional uint64 confid = 1;
inline bool IndtMPTerMuteEnable::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndtMPTerMuteEnable::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndtMPTerMuteEnable::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndtMPTerMuteEnable::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndtMPTerMuteEnable::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndtMPTerMuteEnable.confid)
  return confid_;
}
inline void IndtMPTerMuteEnable::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndtMPTerMuteEnable.confid)
}

// optional uint32 mcid = 2;
inline bool IndtMPTerMuteEnable::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndtMPTerMuteEnable::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndtMPTerMuteEnable::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndtMPTerMuteEnable::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndtMPTerMuteEnable::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndtMPTerMuteEnable.mcid)
  return mcid_;
}
inline void IndtMPTerMuteEnable::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndtMPTerMuteEnable.mcid)
}

// optional uint32 mpid = 3;
inline bool IndtMPTerMuteEnable::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndtMPTerMuteEnable::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndtMPTerMuteEnable::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndtMPTerMuteEnable::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndtMPTerMuteEnable::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndtMPTerMuteEnable.mpid)
  return mpid_;
}
inline void IndtMPTerMuteEnable::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndtMPTerMuteEnable.mpid)
}

// optional uint32 terid = 4;
inline bool IndtMPTerMuteEnable::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndtMPTerMuteEnable::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndtMPTerMuteEnable::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndtMPTerMuteEnable::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndtMPTerMuteEnable::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndtMPTerMuteEnable.terid)
  return terid_;
}
inline void IndtMPTerMuteEnable::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndtMPTerMuteEnable.terid)
}

// optional uint32 channelid = 5;
inline bool IndtMPTerMuteEnable::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndtMPTerMuteEnable::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndtMPTerMuteEnable::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndtMPTerMuteEnable::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndtMPTerMuteEnable::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndtMPTerMuteEnable.channelid)
  return channelid_;
}
inline void IndtMPTerMuteEnable::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndtMPTerMuteEnable.channelid)
}

// optional bool mute_enable = 6;
inline bool IndtMPTerMuteEnable::has_mute_enable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndtMPTerMuteEnable::set_has_mute_enable() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndtMPTerMuteEnable::clear_has_mute_enable() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndtMPTerMuteEnable::clear_mute_enable() {
  mute_enable_ = false;
  clear_has_mute_enable();
}
inline bool IndtMPTerMuteEnable::mute_enable() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndtMPTerMuteEnable.mute_enable)
  return mute_enable_;
}
inline void IndtMPTerMuteEnable::set_mute_enable(bool value) {
  set_has_mute_enable();
  mute_enable_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndtMPTerMuteEnable.mute_enable)
}

// -------------------------------------------------------------------

// IndMPTerMuteAllEnable

// optional uint64 confid = 1;
inline bool IndMPTerMuteAllEnable::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerMuteAllEnable::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerMuteAllEnable::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerMuteAllEnable::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerMuteAllEnable::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMuteAllEnable.confid)
  return confid_;
}
inline void IndMPTerMuteAllEnable::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMuteAllEnable.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerMuteAllEnable::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerMuteAllEnable::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerMuteAllEnable::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerMuteAllEnable::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerMuteAllEnable::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMuteAllEnable.mcid)
  return mcid_;
}
inline void IndMPTerMuteAllEnable::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMuteAllEnable.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerMuteAllEnable::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerMuteAllEnable::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerMuteAllEnable::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerMuteAllEnable::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerMuteAllEnable::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMuteAllEnable.mpid)
  return mpid_;
}
inline void IndMPTerMuteAllEnable::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMuteAllEnable.mpid)
}

// optional bool mute_all_enable = 4;
inline bool IndMPTerMuteAllEnable::has_mute_all_enable() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerMuteAllEnable::set_has_mute_all_enable() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerMuteAllEnable::clear_has_mute_all_enable() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerMuteAllEnable::clear_mute_all_enable() {
  mute_all_enable_ = false;
  clear_has_mute_all_enable();
}
inline bool IndMPTerMuteAllEnable::mute_all_enable() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerMuteAllEnable.mute_all_enable)
  return mute_all_enable_;
}
inline void IndMPTerMuteAllEnable::set_mute_all_enable(bool value) {
  set_has_mute_all_enable();
  mute_all_enable_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerMuteAllEnable.mute_all_enable)
}

// -------------------------------------------------------------------

// IndMPTerCameraEnable_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPTerCameraEnable_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerCameraEnable_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerCameraEnable_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerCameraEnable_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPTerCameraEnable_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPTerCameraEnable_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPTerCameraEnable_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerCameraEnable_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerCameraEnable_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerCameraEnable_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPTerCameraEnable_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.SourceInfo.name)
  return *name_;
}
inline void IndMPTerCameraEnable_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.SourceInfo.name)
}
inline void IndMPTerCameraEnable_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPTerCameraEnable.SourceInfo.name)
}
inline void IndMPTerCameraEnable_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPTerCameraEnable.SourceInfo.name)
}
inline ::std::string* IndMPTerCameraEnable_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerCameraEnable.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPTerCameraEnable_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPTerCameraEnable_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPTerCameraEnable.SourceInfo.name)
}

// -------------------------------------------------------------------

// IndMPTerCameraEnable

// optional uint64 confid = 1;
inline bool IndMPTerCameraEnable::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPTerCameraEnable::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPTerCameraEnable::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPTerCameraEnable::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPTerCameraEnable::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.confid)
  return confid_;
}
inline void IndMPTerCameraEnable::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPTerCameraEnable::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPTerCameraEnable::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPTerCameraEnable::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPTerCameraEnable::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPTerCameraEnable::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.mcid)
  return mcid_;
}
inline void IndMPTerCameraEnable::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPTerCameraEnable::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPTerCameraEnable::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPTerCameraEnable::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPTerCameraEnable::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPTerCameraEnable::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.mpid)
  return mpid_;
}
inline void IndMPTerCameraEnable::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPTerCameraEnable::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPTerCameraEnable::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPTerCameraEnable::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPTerCameraEnable::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPTerCameraEnable::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.terid)
  return terid_;
}
inline void IndMPTerCameraEnable::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPTerCameraEnable::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPTerCameraEnable::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPTerCameraEnable::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPTerCameraEnable::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPTerCameraEnable::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.channelid)
  return channelid_;
}
inline void IndMPTerCameraEnable::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.channelid)
}

// optional bool camera_enable = 6;
inline bool IndMPTerCameraEnable::has_camera_enable() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPTerCameraEnable::set_has_camera_enable() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPTerCameraEnable::clear_has_camera_enable() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPTerCameraEnable::clear_camera_enable() {
  camera_enable_ = false;
  clear_has_camera_enable();
}
inline bool IndMPTerCameraEnable::camera_enable() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.camera_enable)
  return camera_enable_;
}
inline void IndMPTerCameraEnable::set_camera_enable(bool value) {
  set_has_camera_enable();
  camera_enable_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPTerCameraEnable.camera_enable)
}

// repeated .SRMsgs.IndMPTerCameraEnable.SourceInfo srcinfos = 7;
inline int IndMPTerCameraEnable::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPTerCameraEnable::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPTerCameraEnable_SourceInfo& IndMPTerCameraEnable::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPTerCameraEnable.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPTerCameraEnable_SourceInfo* IndMPTerCameraEnable::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPTerCameraEnable.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPTerCameraEnable_SourceInfo* IndMPTerCameraEnable::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPTerCameraEnable.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerCameraEnable_SourceInfo >&
IndMPTerCameraEnable::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPTerCameraEnable.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPTerCameraEnable_SourceInfo >*
IndMPTerCameraEnable::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPTerCameraEnable.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// IndMCHeartBeatToMP

// optional uint32 mcid = 1;
inline bool IndMCHeartBeatToMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMCHeartBeatToMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMCHeartBeatToMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMCHeartBeatToMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMCHeartBeatToMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMCHeartBeatToMP.mcid)
  return mcid_;
}
inline void IndMCHeartBeatToMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMCHeartBeatToMP.mcid)
}

// optional uint32 mpid = 2;
inline bool IndMCHeartBeatToMP::has_mpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMCHeartBeatToMP::set_has_mpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMCHeartBeatToMP::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMCHeartBeatToMP::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMCHeartBeatToMP::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMCHeartBeatToMP.mpid)
  return mpid_;
}
inline void IndMCHeartBeatToMP::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMCHeartBeatToMP.mpid)
}

// -------------------------------------------------------------------

// IndMPAssistVideoOn

// optional uint64 confid = 1;
inline bool IndMPAssistVideoOn::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAssistVideoOn::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAssistVideoOn::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAssistVideoOn::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPAssistVideoOn::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOn.confid)
  return confid_;
}
inline void IndMPAssistVideoOn::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOn.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPAssistVideoOn::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPAssistVideoOn::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPAssistVideoOn::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPAssistVideoOn::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOn::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOn.mcid)
  return mcid_;
}
inline void IndMPAssistVideoOn::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOn.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPAssistVideoOn::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPAssistVideoOn::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPAssistVideoOn::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPAssistVideoOn::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOn::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOn.mpid)
  return mpid_;
}
inline void IndMPAssistVideoOn::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOn.mpid)
}

// optional uint32 avterid = 4;
inline bool IndMPAssistVideoOn::has_avterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPAssistVideoOn::set_has_avterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPAssistVideoOn::clear_has_avterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPAssistVideoOn::clear_avterid() {
  avterid_ = 0u;
  clear_has_avterid();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOn::avterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOn.avterid)
  return avterid_;
}
inline void IndMPAssistVideoOn::set_avterid(::google::protobuf::uint32 value) {
  set_has_avterid();
  avterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOn.avterid)
}

// optional uint32 avtype = 5;
inline bool IndMPAssistVideoOn::has_avtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPAssistVideoOn::set_has_avtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPAssistVideoOn::clear_has_avtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPAssistVideoOn::clear_avtype() {
  avtype_ = 0u;
  clear_has_avtype();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOn::avtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOn.avtype)
  return avtype_;
}
inline void IndMPAssistVideoOn::set_avtype(::google::protobuf::uint32 value) {
  set_has_avtype();
  avtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOn.avtype)
}

// optional uint32 sharedaudio = 6;
inline bool IndMPAssistVideoOn::has_sharedaudio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPAssistVideoOn::set_has_sharedaudio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPAssistVideoOn::clear_has_sharedaudio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPAssistVideoOn::clear_sharedaudio() {
  sharedaudio_ = 0u;
  clear_has_sharedaudio();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOn::sharedaudio() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOn.sharedaudio)
  return sharedaudio_;
}
inline void IndMPAssistVideoOn::set_sharedaudio(::google::protobuf::uint32 value) {
  set_has_sharedaudio();
  sharedaudio_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOn.sharedaudio)
}

// -------------------------------------------------------------------

// IndMPAssistVideoOff

// optional uint64 confid = 1;
inline bool IndMPAssistVideoOff::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAssistVideoOff::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAssistVideoOff::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAssistVideoOff::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPAssistVideoOff::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOff.confid)
  return confid_;
}
inline void IndMPAssistVideoOff::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOff.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPAssistVideoOff::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPAssistVideoOff::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPAssistVideoOff::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPAssistVideoOff::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOff::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOff.mcid)
  return mcid_;
}
inline void IndMPAssistVideoOff::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOff.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPAssistVideoOff::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPAssistVideoOff::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPAssistVideoOff::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPAssistVideoOff::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOff::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOff.mpid)
  return mpid_;
}
inline void IndMPAssistVideoOff::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOff.mpid)
}

// optional uint32 avterid = 4;
inline bool IndMPAssistVideoOff::has_avterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPAssistVideoOff::set_has_avterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPAssistVideoOff::clear_has_avterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPAssistVideoOff::clear_avterid() {
  avterid_ = 0u;
  clear_has_avterid();
}
inline ::google::protobuf::uint32 IndMPAssistVideoOff::avterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAssistVideoOff.avterid)
  return avterid_;
}
inline void IndMPAssistVideoOff::set_avterid(::google::protobuf::uint32 value) {
  set_has_avterid();
  avterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAssistVideoOff.avterid)
}

// -------------------------------------------------------------------

// IndMPSpecialtypeTransfer

// optional uint64 confid = 1;
inline bool IndMPSpecialtypeTransfer::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPSpecialtypeTransfer::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPSpecialtypeTransfer::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPSpecialtypeTransfer::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPSpecialtypeTransfer::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPSpecialtypeTransfer.confid)
  return confid_;
}
inline void IndMPSpecialtypeTransfer::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPSpecialtypeTransfer.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPSpecialtypeTransfer::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPSpecialtypeTransfer::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPSpecialtypeTransfer::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPSpecialtypeTransfer::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPSpecialtypeTransfer::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPSpecialtypeTransfer.mcid)
  return mcid_;
}
inline void IndMPSpecialtypeTransfer::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPSpecialtypeTransfer.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPSpecialtypeTransfer::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPSpecialtypeTransfer::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPSpecialtypeTransfer::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPSpecialtypeTransfer::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPSpecialtypeTransfer::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPSpecialtypeTransfer.mpid)
  return mpid_;
}
inline void IndMPSpecialtypeTransfer::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPSpecialtypeTransfer.mpid)
}

// optional uint32 nspclterid = 4;
inline bool IndMPSpecialtypeTransfer::has_nspclterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPSpecialtypeTransfer::set_has_nspclterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPSpecialtypeTransfer::clear_has_nspclterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPSpecialtypeTransfer::clear_nspclterid() {
  nspclterid_ = 0u;
  clear_has_nspclterid();
}
inline ::google::protobuf::uint32 IndMPSpecialtypeTransfer::nspclterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPSpecialtypeTransfer.nspclterid)
  return nspclterid_;
}
inline void IndMPSpecialtypeTransfer::set_nspclterid(::google::protobuf::uint32 value) {
  set_has_nspclterid();
  nspclterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPSpecialtypeTransfer.nspclterid)
}

// optional uint32 nspcltype = 5;
inline bool IndMPSpecialtypeTransfer::has_nspcltype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPSpecialtypeTransfer::set_has_nspcltype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPSpecialtypeTransfer::clear_has_nspcltype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPSpecialtypeTransfer::clear_nspcltype() {
  nspcltype_ = 0u;
  clear_has_nspcltype();
}
inline ::google::protobuf::uint32 IndMPSpecialtypeTransfer::nspcltype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPSpecialtypeTransfer.nspcltype)
  return nspcltype_;
}
inline void IndMPSpecialtypeTransfer::set_nspcltype(::google::protobuf::uint32 value) {
  set_has_nspcltype();
  nspcltype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPSpecialtypeTransfer.nspcltype)
}

// -------------------------------------------------------------------

// IndMPChangeVideoSourceName_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPChangeVideoSourceName_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeVideoSourceName_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeVideoSourceName_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourceName_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPChangeVideoSourceName_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChangeVideoSourceName_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChangeVideoSourceName_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPChangeVideoSourceName_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.name)
  return *name_;
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.name)
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.name)
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.name)
}
inline ::std::string* IndMPChangeVideoSourceName_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPChangeVideoSourceName_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPChangeVideoSourceName_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPChangeVideoSourceName.SourceInfo.name)
}

// -------------------------------------------------------------------

// IndMPChangeVideoSourceName

// optional uint64 confid = 1;
inline bool IndMPChangeVideoSourceName::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeVideoSourceName::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeVideoSourceName::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeVideoSourceName::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPChangeVideoSourceName::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.confid)
  return confid_;
}
inline void IndMPChangeVideoSourceName::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPChangeVideoSourceName::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChangeVideoSourceName::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChangeVideoSourceName::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChangeVideoSourceName::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourceName::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.mcid)
  return mcid_;
}
inline void IndMPChangeVideoSourceName::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPChangeVideoSourceName::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChangeVideoSourceName::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChangeVideoSourceName::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChangeVideoSourceName::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourceName::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.mpid)
  return mpid_;
}
inline void IndMPChangeVideoSourceName::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPChangeVideoSourceName::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChangeVideoSourceName::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChangeVideoSourceName::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChangeVideoSourceName::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourceName::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.terid)
  return terid_;
}
inline void IndMPChangeVideoSourceName::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPChangeVideoSourceName::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPChangeVideoSourceName::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPChangeVideoSourceName::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPChangeVideoSourceName::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourceName::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.channelid)
  return channelid_;
}
inline void IndMPChangeVideoSourceName::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourceName.channelid)
}

// repeated .SRMsgs.IndMPChangeVideoSourceName.SourceInfo srcinfos = 6;
inline int IndMPChangeVideoSourceName::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPChangeVideoSourceName::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo& IndMPChangeVideoSourceName::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourceName.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo* IndMPChangeVideoSourceName::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeVideoSourceName.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo* IndMPChangeVideoSourceName::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChangeVideoSourceName.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo >&
IndMPChangeVideoSourceName::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChangeVideoSourceName.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourceName_SourceInfo >*
IndMPChangeVideoSourceName::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChangeVideoSourceName.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// IndMPChangeVideoSourcePriority_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPChangeVideoSourcePriority_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourcePriority_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo.srcid)
}

// optional uint32 priority = 2;
inline bool IndMPChangeVideoSourcePriority_SourceInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourcePriority_SourceInfo::priority() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo.priority)
  return priority_;
}
inline void IndMPChangeVideoSourcePriority_SourceInfo::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo.priority)
}

// -------------------------------------------------------------------

// IndMPChangeVideoSourcePriority

// optional uint64 confid = 1;
inline bool IndMPChangeVideoSourcePriority::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeVideoSourcePriority::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeVideoSourcePriority::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeVideoSourcePriority::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPChangeVideoSourcePriority::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.confid)
  return confid_;
}
inline void IndMPChangeVideoSourcePriority::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPChangeVideoSourcePriority::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChangeVideoSourcePriority::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChangeVideoSourcePriority::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChangeVideoSourcePriority::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourcePriority::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.mcid)
  return mcid_;
}
inline void IndMPChangeVideoSourcePriority::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPChangeVideoSourcePriority::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChangeVideoSourcePriority::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChangeVideoSourcePriority::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChangeVideoSourcePriority::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourcePriority::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.mpid)
  return mpid_;
}
inline void IndMPChangeVideoSourcePriority::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPChangeVideoSourcePriority::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChangeVideoSourcePriority::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChangeVideoSourcePriority::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChangeVideoSourcePriority::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourcePriority::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.terid)
  return terid_;
}
inline void IndMPChangeVideoSourcePriority::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPChangeVideoSourcePriority::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPChangeVideoSourcePriority::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPChangeVideoSourcePriority::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPChangeVideoSourcePriority::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPChangeVideoSourcePriority::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.channelid)
  return channelid_;
}
inline void IndMPChangeVideoSourcePriority::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeVideoSourcePriority.channelid)
}

// repeated .SRMsgs.IndMPChangeVideoSourcePriority.SourceInfo allsrcinfos = 6;
inline int IndMPChangeVideoSourcePriority::allsrcinfos_size() const {
  return allsrcinfos_.size();
}
inline void IndMPChangeVideoSourcePriority::clear_allsrcinfos() {
  allsrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo& IndMPChangeVideoSourcePriority::allsrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeVideoSourcePriority.allsrcinfos)
  return allsrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo* IndMPChangeVideoSourcePriority::mutable_allsrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeVideoSourcePriority.allsrcinfos)
  return allsrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo* IndMPChangeVideoSourcePriority::add_allsrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChangeVideoSourcePriority.allsrcinfos)
  return allsrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo >&
IndMPChangeVideoSourcePriority::allsrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChangeVideoSourcePriority.allsrcinfos)
  return allsrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeVideoSourcePriority_SourceInfo >*
IndMPChangeVideoSourcePriority::mutable_allsrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChangeVideoSourcePriority.allsrcinfos)
  return &allsrcinfos_;
}

// -------------------------------------------------------------------

// IndMPNewAudioSourceJoined_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPNewAudioSourceJoined_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPNewAudioSourceJoined_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPNewAudioSourceJoined_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPNewAudioSourceJoined_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.name)
  return *name_;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.name)
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.name)
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.name)
}
inline ::std::string* IndMPNewAudioSourceJoined_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPNewAudioSourceJoined_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.name)
}

// optional bool isOn = 3;
inline bool IndMPNewAudioSourceJoined_SourceInfo::has_ison() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_has_ison() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_has_ison() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_ison() {
  ison_ = false;
  clear_has_ison();
}
inline bool IndMPNewAudioSourceJoined_SourceInfo::ison() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.isOn)
  return ison_;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_ison(bool value) {
  set_has_ison();
  ison_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.isOn)
}

// optional uint32 priority = 4;
inline bool IndMPNewAudioSourceJoined_SourceInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 IndMPNewAudioSourceJoined_SourceInfo::priority() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.priority)
  return priority_;
}
inline void IndMPNewAudioSourceJoined_SourceInfo::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.SourceInfo.priority)
}

// -------------------------------------------------------------------

// IndMPNewAudioSourceJoined

// optional uint64 confid = 1;
inline bool IndMPNewAudioSourceJoined::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPNewAudioSourceJoined::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPNewAudioSourceJoined::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPNewAudioSourceJoined::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPNewAudioSourceJoined::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.confid)
  return confid_;
}
inline void IndMPNewAudioSourceJoined::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPNewAudioSourceJoined::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPNewAudioSourceJoined::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPNewAudioSourceJoined::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPNewAudioSourceJoined::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPNewAudioSourceJoined::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.mcid)
  return mcid_;
}
inline void IndMPNewAudioSourceJoined::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPNewAudioSourceJoined::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPNewAudioSourceJoined::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPNewAudioSourceJoined::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPNewAudioSourceJoined::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPNewAudioSourceJoined::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.mpid)
  return mpid_;
}
inline void IndMPNewAudioSourceJoined::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPNewAudioSourceJoined::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPNewAudioSourceJoined::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPNewAudioSourceJoined::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPNewAudioSourceJoined::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPNewAudioSourceJoined::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.terid)
  return terid_;
}
inline void IndMPNewAudioSourceJoined::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPNewAudioSourceJoined::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPNewAudioSourceJoined::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPNewAudioSourceJoined::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPNewAudioSourceJoined::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPNewAudioSourceJoined::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.channelid)
  return channelid_;
}
inline void IndMPNewAudioSourceJoined::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewAudioSourceJoined.channelid)
}

// repeated .SRMsgs.IndMPNewAudioSourceJoined.SourceInfo srcinfos = 6;
inline int IndMPNewAudioSourceJoined::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPNewAudioSourceJoined::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo& IndMPNewAudioSourceJoined::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewAudioSourceJoined.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo* IndMPNewAudioSourceJoined::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPNewAudioSourceJoined.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo* IndMPNewAudioSourceJoined::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPNewAudioSourceJoined.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo >&
IndMPNewAudioSourceJoined::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPNewAudioSourceJoined.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewAudioSourceJoined_SourceInfo >*
IndMPNewAudioSourceJoined::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPNewAudioSourceJoined.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// IndMPAudioSourceLeave_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPAudioSourceLeave_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAudioSourceLeave_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAudioSourceLeave_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAudioSourceLeave_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPAudioSourceLeave_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPAudioSourceLeave_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPAudioSourceLeave_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPAudioSourceLeave_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPAudioSourceLeave_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPAudioSourceLeave_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPAudioSourceLeave_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.SourceInfo.name)
  return *name_;
}
inline void IndMPAudioSourceLeave_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.SourceInfo.name)
}
inline void IndMPAudioSourceLeave_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPAudioSourceLeave.SourceInfo.name)
}
inline void IndMPAudioSourceLeave_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPAudioSourceLeave.SourceInfo.name)
}
inline ::std::string* IndMPAudioSourceLeave_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPAudioSourceLeave.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPAudioSourceLeave_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPAudioSourceLeave_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPAudioSourceLeave.SourceInfo.name)
}

// -------------------------------------------------------------------

// IndMPAudioSourceLeave

// optional uint64 confid = 1;
inline bool IndMPAudioSourceLeave::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAudioSourceLeave::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAudioSourceLeave::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAudioSourceLeave::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPAudioSourceLeave::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.confid)
  return confid_;
}
inline void IndMPAudioSourceLeave::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPAudioSourceLeave::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPAudioSourceLeave::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPAudioSourceLeave::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPAudioSourceLeave::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPAudioSourceLeave::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.mcid)
  return mcid_;
}
inline void IndMPAudioSourceLeave::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPAudioSourceLeave::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPAudioSourceLeave::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPAudioSourceLeave::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPAudioSourceLeave::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPAudioSourceLeave::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.mpid)
  return mpid_;
}
inline void IndMPAudioSourceLeave::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPAudioSourceLeave::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPAudioSourceLeave::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPAudioSourceLeave::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPAudioSourceLeave::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPAudioSourceLeave::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.terid)
  return terid_;
}
inline void IndMPAudioSourceLeave::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPAudioSourceLeave::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPAudioSourceLeave::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPAudioSourceLeave::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPAudioSourceLeave::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPAudioSourceLeave::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.channelid)
  return channelid_;
}
inline void IndMPAudioSourceLeave::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAudioSourceLeave.channelid)
}

// repeated .SRMsgs.IndMPAudioSourceLeave.SourceInfo srcinfos = 6;
inline int IndMPAudioSourceLeave::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPAudioSourceLeave::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPAudioSourceLeave_SourceInfo& IndMPAudioSourceLeave::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAudioSourceLeave.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPAudioSourceLeave_SourceInfo* IndMPAudioSourceLeave::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPAudioSourceLeave.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPAudioSourceLeave_SourceInfo* IndMPAudioSourceLeave::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPAudioSourceLeave.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAudioSourceLeave_SourceInfo >&
IndMPAudioSourceLeave::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPAudioSourceLeave.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAudioSourceLeave_SourceInfo >*
IndMPAudioSourceLeave::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPAudioSourceLeave.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// IndMPNewVideoSourceJoined_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPNewVideoSourceJoined_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPNewVideoSourceJoined_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPNewVideoSourceJoined_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPNewVideoSourceJoined_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.name)
  return *name_;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.name)
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.name)
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.name)
}
inline ::std::string* IndMPNewVideoSourceJoined_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPNewVideoSourceJoined_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.name)
}

// optional bool isOn = 3;
inline bool IndMPNewVideoSourceJoined_SourceInfo::has_ison() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_has_ison() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_has_ison() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_ison() {
  ison_ = false;
  clear_has_ison();
}
inline bool IndMPNewVideoSourceJoined_SourceInfo::ison() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.isOn)
  return ison_;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_ison(bool value) {
  set_has_ison();
  ison_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.isOn)
}

// optional uint32 priority = 4;
inline bool IndMPNewVideoSourceJoined_SourceInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 IndMPNewVideoSourceJoined_SourceInfo::priority() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.priority)
  return priority_;
}
inline void IndMPNewVideoSourceJoined_SourceInfo::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.SourceInfo.priority)
}

// -------------------------------------------------------------------

// IndMPNewVideoSourceJoined

// optional uint64 confid = 1;
inline bool IndMPNewVideoSourceJoined::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPNewVideoSourceJoined::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPNewVideoSourceJoined::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPNewVideoSourceJoined::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPNewVideoSourceJoined::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.confid)
  return confid_;
}
inline void IndMPNewVideoSourceJoined::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPNewVideoSourceJoined::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPNewVideoSourceJoined::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPNewVideoSourceJoined::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPNewVideoSourceJoined::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPNewVideoSourceJoined::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.mcid)
  return mcid_;
}
inline void IndMPNewVideoSourceJoined::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPNewVideoSourceJoined::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPNewVideoSourceJoined::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPNewVideoSourceJoined::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPNewVideoSourceJoined::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPNewVideoSourceJoined::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.mpid)
  return mpid_;
}
inline void IndMPNewVideoSourceJoined::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPNewVideoSourceJoined::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPNewVideoSourceJoined::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPNewVideoSourceJoined::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPNewVideoSourceJoined::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPNewVideoSourceJoined::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.terid)
  return terid_;
}
inline void IndMPNewVideoSourceJoined::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPNewVideoSourceJoined::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPNewVideoSourceJoined::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPNewVideoSourceJoined::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPNewVideoSourceJoined::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPNewVideoSourceJoined::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.channelid)
  return channelid_;
}
inline void IndMPNewVideoSourceJoined::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPNewVideoSourceJoined.channelid)
}

// repeated .SRMsgs.IndMPNewVideoSourceJoined.SourceInfo newsrcinfos = 6;
inline int IndMPNewVideoSourceJoined::newsrcinfos_size() const {
  return newsrcinfos_.size();
}
inline void IndMPNewVideoSourceJoined::clear_newsrcinfos() {
  newsrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo& IndMPNewVideoSourceJoined::newsrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.newsrcinfos)
  return newsrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* IndMPNewVideoSourceJoined::mutable_newsrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPNewVideoSourceJoined.newsrcinfos)
  return newsrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* IndMPNewVideoSourceJoined::add_newsrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPNewVideoSourceJoined.newsrcinfos)
  return newsrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >&
IndMPNewVideoSourceJoined::newsrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPNewVideoSourceJoined.newsrcinfos)
  return newsrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >*
IndMPNewVideoSourceJoined::mutable_newsrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPNewVideoSourceJoined.newsrcinfos)
  return &newsrcinfos_;
}

// repeated .SRMsgs.IndMPNewVideoSourceJoined.SourceInfo allsrcinfos = 7;
inline int IndMPNewVideoSourceJoined::allsrcinfos_size() const {
  return allsrcinfos_.size();
}
inline void IndMPNewVideoSourceJoined::clear_allsrcinfos() {
  allsrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo& IndMPNewVideoSourceJoined::allsrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPNewVideoSourceJoined.allsrcinfos)
  return allsrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* IndMPNewVideoSourceJoined::mutable_allsrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPNewVideoSourceJoined.allsrcinfos)
  return allsrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo* IndMPNewVideoSourceJoined::add_allsrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPNewVideoSourceJoined.allsrcinfos)
  return allsrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >&
IndMPNewVideoSourceJoined::allsrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPNewVideoSourceJoined.allsrcinfos)
  return allsrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPNewVideoSourceJoined_SourceInfo >*
IndMPNewVideoSourceJoined::mutable_allsrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPNewVideoSourceJoined.allsrcinfos)
  return &allsrcinfos_;
}

// -------------------------------------------------------------------

// IndMPVideoSourceLeave_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPVideoSourceLeave_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPVideoSourceLeave_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPVideoSourceLeave_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPVideoSourceLeave_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.SourceInfo.name)
  return *name_;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.SourceInfo.name)
}
inline void IndMPVideoSourceLeave_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPVideoSourceLeave.SourceInfo.name)
}
inline void IndMPVideoSourceLeave_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPVideoSourceLeave.SourceInfo.name)
}
inline ::std::string* IndMPVideoSourceLeave_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPVideoSourceLeave.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPVideoSourceLeave_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPVideoSourceLeave_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPVideoSourceLeave.SourceInfo.name)
}

// optional bool isOn = 3;
inline bool IndMPVideoSourceLeave_SourceInfo::has_ison() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_has_ison() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_has_ison() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_ison() {
  ison_ = false;
  clear_has_ison();
}
inline bool IndMPVideoSourceLeave_SourceInfo::ison() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.SourceInfo.isOn)
  return ison_;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_ison(bool value) {
  set_has_ison();
  ison_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.SourceInfo.isOn)
}

// optional uint32 priority = 4;
inline bool IndMPVideoSourceLeave_SourceInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPVideoSourceLeave_SourceInfo::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 IndMPVideoSourceLeave_SourceInfo::priority() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.SourceInfo.priority)
  return priority_;
}
inline void IndMPVideoSourceLeave_SourceInfo::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.SourceInfo.priority)
}

// -------------------------------------------------------------------

// IndMPVideoSourceLeave

// optional uint64 confid = 1;
inline bool IndMPVideoSourceLeave::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPVideoSourceLeave::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPVideoSourceLeave::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPVideoSourceLeave::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPVideoSourceLeave::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.confid)
  return confid_;
}
inline void IndMPVideoSourceLeave::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPVideoSourceLeave::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPVideoSourceLeave::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPVideoSourceLeave::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPVideoSourceLeave::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPVideoSourceLeave::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.mcid)
  return mcid_;
}
inline void IndMPVideoSourceLeave::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPVideoSourceLeave::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPVideoSourceLeave::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPVideoSourceLeave::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPVideoSourceLeave::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPVideoSourceLeave::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.mpid)
  return mpid_;
}
inline void IndMPVideoSourceLeave::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPVideoSourceLeave::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPVideoSourceLeave::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPVideoSourceLeave::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPVideoSourceLeave::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPVideoSourceLeave::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.terid)
  return terid_;
}
inline void IndMPVideoSourceLeave::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPVideoSourceLeave::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPVideoSourceLeave::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPVideoSourceLeave::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPVideoSourceLeave::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPVideoSourceLeave::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.channelid)
  return channelid_;
}
inline void IndMPVideoSourceLeave::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPVideoSourceLeave.channelid)
}

// repeated .SRMsgs.IndMPVideoSourceLeave.SourceInfo delsrcinfos = 6;
inline int IndMPVideoSourceLeave::delsrcinfos_size() const {
  return delsrcinfos_.size();
}
inline void IndMPVideoSourceLeave::clear_delsrcinfos() {
  delsrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPVideoSourceLeave_SourceInfo& IndMPVideoSourceLeave::delsrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.delsrcinfos)
  return delsrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* IndMPVideoSourceLeave::mutable_delsrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPVideoSourceLeave.delsrcinfos)
  return delsrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* IndMPVideoSourceLeave::add_delsrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPVideoSourceLeave.delsrcinfos)
  return delsrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >&
IndMPVideoSourceLeave::delsrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPVideoSourceLeave.delsrcinfos)
  return delsrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >*
IndMPVideoSourceLeave::mutable_delsrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPVideoSourceLeave.delsrcinfos)
  return &delsrcinfos_;
}

// repeated .SRMsgs.IndMPVideoSourceLeave.SourceInfo cursrcinfos = 7;
inline int IndMPVideoSourceLeave::cursrcinfos_size() const {
  return cursrcinfos_.size();
}
inline void IndMPVideoSourceLeave::clear_cursrcinfos() {
  cursrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPVideoSourceLeave_SourceInfo& IndMPVideoSourceLeave::cursrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPVideoSourceLeave.cursrcinfos)
  return cursrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* IndMPVideoSourceLeave::mutable_cursrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPVideoSourceLeave.cursrcinfos)
  return cursrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPVideoSourceLeave_SourceInfo* IndMPVideoSourceLeave::add_cursrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPVideoSourceLeave.cursrcinfos)
  return cursrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >&
IndMPVideoSourceLeave::cursrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPVideoSourceLeave.cursrcinfos)
  return cursrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPVideoSourceLeave_SourceInfo >*
IndMPVideoSourceLeave::mutable_cursrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPVideoSourceLeave.cursrcinfos)
  return &cursrcinfos_;
}

// -------------------------------------------------------------------

// IndMPChangeDeviceInfos_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPChangeDeviceInfos_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.srcid)
}

// optional string name = 2;
inline bool IndMPChangeDeviceInfos_SourceInfo::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_name() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& IndMPChangeDeviceInfos_SourceInfo::name() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.name)
  return *name_;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.name)
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.name)
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.name)
}
inline ::std::string* IndMPChangeDeviceInfos_SourceInfo::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.name)
  return name_;
}
inline ::std::string* IndMPChangeDeviceInfos_SourceInfo::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.name)
}

// optional bool isOn = 3;
inline bool IndMPChangeDeviceInfos_SourceInfo::has_ison() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_has_ison() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_has_ison() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_ison() {
  ison_ = false;
  clear_has_ison();
}
inline bool IndMPChangeDeviceInfos_SourceInfo::ison() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.isOn)
  return ison_;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_ison(bool value) {
  set_has_ison();
  ison_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.isOn)
}

// optional uint32 priority = 4;
inline bool IndMPChangeDeviceInfos_SourceInfo::has_priority() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_has_priority() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_has_priority() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChangeDeviceInfos_SourceInfo::clear_priority() {
  priority_ = 0u;
  clear_has_priority();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos_SourceInfo::priority() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.priority)
  return priority_;
}
inline void IndMPChangeDeviceInfos_SourceInfo::set_priority(::google::protobuf::uint32 value) {
  set_has_priority();
  priority_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.SourceInfo.priority)
}

// -------------------------------------------------------------------

// IndMPChangeDeviceInfos_DeviceInfo

// optional uint32 type = 1;
inline bool IndMPChangeDeviceInfos_DeviceInfo::has_type() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeDeviceInfos_DeviceInfo::set_has_type() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeDeviceInfos_DeviceInfo::clear_has_type() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeDeviceInfos_DeviceInfo::clear_type() {
  type_ = 0u;
  clear_has_type();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos_DeviceInfo::type() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.type)
  return type_;
}
inline void IndMPChangeDeviceInfos_DeviceInfo::set_type(::google::protobuf::uint32 value) {
  set_has_type();
  type_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.type)
}

// repeated .SRMsgs.IndMPChangeDeviceInfos.SourceInfo oldsrcinfos = 2;
inline int IndMPChangeDeviceInfos_DeviceInfo::oldsrcinfos_size() const {
  return oldsrcinfos_.size();
}
inline void IndMPChangeDeviceInfos_DeviceInfo::clear_oldsrcinfos() {
  oldsrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo& IndMPChangeDeviceInfos_DeviceInfo::oldsrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.oldsrcinfos)
  return oldsrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* IndMPChangeDeviceInfos_DeviceInfo::mutable_oldsrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.oldsrcinfos)
  return oldsrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* IndMPChangeDeviceInfos_DeviceInfo::add_oldsrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.oldsrcinfos)
  return oldsrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >&
IndMPChangeDeviceInfos_DeviceInfo::oldsrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.oldsrcinfos)
  return oldsrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >*
IndMPChangeDeviceInfos_DeviceInfo::mutable_oldsrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.oldsrcinfos)
  return &oldsrcinfos_;
}

// repeated .SRMsgs.IndMPChangeDeviceInfos.SourceInfo newsrcinfos = 3;
inline int IndMPChangeDeviceInfos_DeviceInfo::newsrcinfos_size() const {
  return newsrcinfos_.size();
}
inline void IndMPChangeDeviceInfos_DeviceInfo::clear_newsrcinfos() {
  newsrcinfos_.Clear();
}
inline const ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo& IndMPChangeDeviceInfos_DeviceInfo::newsrcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.newsrcinfos)
  return newsrcinfos_.Get(index);
}
inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* IndMPChangeDeviceInfos_DeviceInfo::mutable_newsrcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.newsrcinfos)
  return newsrcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo* IndMPChangeDeviceInfos_DeviceInfo::add_newsrcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.newsrcinfos)
  return newsrcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >&
IndMPChangeDeviceInfos_DeviceInfo::newsrcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.newsrcinfos)
  return newsrcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_SourceInfo >*
IndMPChangeDeviceInfos_DeviceInfo::mutable_newsrcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChangeDeviceInfos.DeviceInfo.newsrcinfos)
  return &newsrcinfos_;
}

// -------------------------------------------------------------------

// IndMPChangeDeviceInfos

// optional uint64 confid = 1;
inline bool IndMPChangeDeviceInfos::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChangeDeviceInfos::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChangeDeviceInfos::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChangeDeviceInfos::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPChangeDeviceInfos::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.confid)
  return confid_;
}
inline void IndMPChangeDeviceInfos::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPChangeDeviceInfos::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChangeDeviceInfos::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChangeDeviceInfos::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChangeDeviceInfos::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.mcid)
  return mcid_;
}
inline void IndMPChangeDeviceInfos::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPChangeDeviceInfos::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChangeDeviceInfos::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChangeDeviceInfos::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChangeDeviceInfos::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.mpid)
  return mpid_;
}
inline void IndMPChangeDeviceInfos::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.mpid)
}

// optional uint32 terid = 4;
inline bool IndMPChangeDeviceInfos::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChangeDeviceInfos::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChangeDeviceInfos::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChangeDeviceInfos::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.terid)
  return terid_;
}
inline void IndMPChangeDeviceInfos::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.terid)
}

// optional uint32 channelid = 5;
inline bool IndMPChangeDeviceInfos::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPChangeDeviceInfos::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPChangeDeviceInfos::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPChangeDeviceInfos::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPChangeDeviceInfos::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.channelid)
  return channelid_;
}
inline void IndMPChangeDeviceInfos::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChangeDeviceInfos.channelid)
}

// repeated .SRMsgs.IndMPChangeDeviceInfos.DeviceInfo deviceinfos = 6;
inline int IndMPChangeDeviceInfos::deviceinfos_size() const {
  return deviceinfos_.size();
}
inline void IndMPChangeDeviceInfos::clear_deviceinfos() {
  deviceinfos_.Clear();
}
inline const ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo& IndMPChangeDeviceInfos::deviceinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChangeDeviceInfos.deviceinfos)
  return deviceinfos_.Get(index);
}
inline ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo* IndMPChangeDeviceInfos::mutable_deviceinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChangeDeviceInfos.deviceinfos)
  return deviceinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo* IndMPChangeDeviceInfos::add_deviceinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChangeDeviceInfos.deviceinfos)
  return deviceinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo >&
IndMPChangeDeviceInfos::deviceinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChangeDeviceInfos.deviceinfos)
  return deviceinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChangeDeviceInfos_DeviceInfo >*
IndMPChangeDeviceInfos::mutable_deviceinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChangeDeviceInfos.deviceinfos)
  return &deviceinfos_;
}

// -------------------------------------------------------------------

// IndMPAutoPollInfo_ParticipantInfo

// optional uint32 psuid = 1;
inline bool IndMPAutoPollInfo_ParticipantInfo::has_psuid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAutoPollInfo_ParticipantInfo::set_has_psuid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAutoPollInfo_ParticipantInfo::clear_has_psuid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAutoPollInfo_ParticipantInfo::clear_psuid() {
  psuid_ = 0u;
  clear_has_psuid();
}
inline ::google::protobuf::uint32 IndMPAutoPollInfo_ParticipantInfo::psuid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.ParticipantInfo.psuid)
  return psuid_;
}
inline void IndMPAutoPollInfo_ParticipantInfo::set_psuid(::google::protobuf::uint32 value) {
  set_has_psuid();
  psuid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.ParticipantInfo.psuid)
}

// -------------------------------------------------------------------

// IndMPAutoPollInfo_AutoPollInfo

// optional uint64 apid = 1;
inline bool IndMPAutoPollInfo_AutoPollInfo::has_apid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_has_apid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_has_apid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_apid() {
  apid_ = GOOGLE_ULONGLONG(0);
  clear_has_apid();
}
inline ::google::protobuf::uint64 IndMPAutoPollInfo_AutoPollInfo::apid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apid)
  return apid_;
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_apid(::google::protobuf::uint64 value) {
  set_has_apid();
  apid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apid)
}

// optional string apname = 2;
inline bool IndMPAutoPollInfo_AutoPollInfo::has_apname() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_has_apname() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_has_apname() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_apname() {
  if (apname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apname_->clear();
  }
  clear_has_apname();
}
inline const ::std::string& IndMPAutoPollInfo_AutoPollInfo::apname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apname)
  return *apname_;
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_apname(const ::std::string& value) {
  set_has_apname();
  if (apname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apname_ = new ::std::string;
  }
  apname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apname)
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_apname(const char* value) {
  set_has_apname();
  if (apname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apname_ = new ::std::string;
  }
  apname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apname)
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_apname(const char* value, size_t size) {
  set_has_apname();
  if (apname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apname_ = new ::std::string;
  }
  apname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apname)
}
inline ::std::string* IndMPAutoPollInfo_AutoPollInfo::mutable_apname() {
  set_has_apname();
  if (apname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    apname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apname)
  return apname_;
}
inline ::std::string* IndMPAutoPollInfo_AutoPollInfo::release_apname() {
  clear_has_apname();
  if (apname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = apname_;
    apname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_allocated_apname(::std::string* apname) {
  if (apname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete apname_;
  }
  if (apname) {
    set_has_apname();
    apname_ = apname;
  } else {
    clear_has_apname();
    apname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.apname)
}

// optional uint32 addordel = 3;
inline bool IndMPAutoPollInfo_AutoPollInfo::has_addordel() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_has_addordel() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_has_addordel() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_addordel() {
  addordel_ = 0u;
  clear_has_addordel();
}
inline ::google::protobuf::uint32 IndMPAutoPollInfo_AutoPollInfo::addordel() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.addordel)
  return addordel_;
}
inline void IndMPAutoPollInfo_AutoPollInfo::set_addordel(::google::protobuf::uint32 value) {
  set_has_addordel();
  addordel_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.addordel)
}

// repeated .SRMsgs.IndMPAutoPollInfo.ParticipantInfo parts = 4;
inline int IndMPAutoPollInfo_AutoPollInfo::parts_size() const {
  return parts_.size();
}
inline void IndMPAutoPollInfo_AutoPollInfo::clear_parts() {
  parts_.Clear();
}
inline const ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo& IndMPAutoPollInfo_AutoPollInfo::parts(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.parts)
  return parts_.Get(index);
}
inline ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo* IndMPAutoPollInfo_AutoPollInfo::mutable_parts(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.parts)
  return parts_.Mutable(index);
}
inline ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo* IndMPAutoPollInfo_AutoPollInfo::add_parts() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.parts)
  return parts_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo >&
IndMPAutoPollInfo_AutoPollInfo::parts() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.parts)
  return parts_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_ParticipantInfo >*
IndMPAutoPollInfo_AutoPollInfo::mutable_parts() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPAutoPollInfo.AutoPollInfo.parts)
  return &parts_;
}

// -------------------------------------------------------------------

// IndMPAutoPollInfo

// optional uint64 confid = 1;
inline bool IndMPAutoPollInfo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPAutoPollInfo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPAutoPollInfo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPAutoPollInfo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPAutoPollInfo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.confid)
  return confid_;
}
inline void IndMPAutoPollInfo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPAutoPollInfo::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPAutoPollInfo::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPAutoPollInfo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPAutoPollInfo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPAutoPollInfo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.mcid)
  return mcid_;
}
inline void IndMPAutoPollInfo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPAutoPollInfo::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPAutoPollInfo::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPAutoPollInfo::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPAutoPollInfo::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPAutoPollInfo::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.mpid)
  return mpid_;
}
inline void IndMPAutoPollInfo::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPAutoPollInfo.mpid)
}

// repeated .SRMsgs.IndMPAutoPollInfo.AutoPollInfo autopolllist = 4;
inline int IndMPAutoPollInfo::autopolllist_size() const {
  return autopolllist_.size();
}
inline void IndMPAutoPollInfo::clear_autopolllist() {
  autopolllist_.Clear();
}
inline const ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo& IndMPAutoPollInfo::autopolllist(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPAutoPollInfo.autopolllist)
  return autopolllist_.Get(index);
}
inline ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo* IndMPAutoPollInfo::mutable_autopolllist(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPAutoPollInfo.autopolllist)
  return autopolllist_.Mutable(index);
}
inline ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo* IndMPAutoPollInfo::add_autopolllist() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPAutoPollInfo.autopolllist)
  return autopolllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo >&
IndMPAutoPollInfo::autopolllist() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPAutoPollInfo.autopolllist)
  return autopolllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPAutoPollInfo_AutoPollInfo >*
IndMPAutoPollInfo::mutable_autopolllist() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPAutoPollInfo.autopolllist)
  return &autopolllist_;
}

// -------------------------------------------------------------------

// IndMPChairLock_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPChairLock_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChairLock_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChairLock_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChairLock_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPChairLock_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairLock.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPChairLock_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairLock.SourceInfo.srcid)
}

// -------------------------------------------------------------------

// IndMPChairLock

// optional uint64 confid = 1;
inline bool IndMPChairLock::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChairLock::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChairLock::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChairLock::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPChairLock::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairLock.confid)
  return confid_;
}
inline void IndMPChairLock::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairLock.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPChairLock::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChairLock::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChairLock::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChairLock::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPChairLock::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairLock.mcid)
  return mcid_;
}
inline void IndMPChairLock::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairLock.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPChairLock::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChairLock::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChairLock::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChairLock::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPChairLock::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairLock.mpid)
  return mpid_;
}
inline void IndMPChairLock::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairLock.mpid)
}

// optional uint32 lockedterid = 4;
inline bool IndMPChairLock::has_lockedterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChairLock::set_has_lockedterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChairLock::clear_has_lockedterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChairLock::clear_lockedterid() {
  lockedterid_ = 0u;
  clear_has_lockedterid();
}
inline ::google::protobuf::uint32 IndMPChairLock::lockedterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairLock.lockedterid)
  return lockedterid_;
}
inline void IndMPChairLock::set_lockedterid(::google::protobuf::uint32 value) {
  set_has_lockedterid();
  lockedterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairLock.lockedterid)
}

// repeated .SRMsgs.IndMPChairLock.SourceInfo srcinfos = 5;
inline int IndMPChairLock::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPChairLock::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPChairLock_SourceInfo& IndMPChairLock::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairLock.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPChairLock_SourceInfo* IndMPChairLock::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChairLock.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChairLock_SourceInfo* IndMPChairLock::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChairLock.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairLock_SourceInfo >&
IndMPChairLock::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChairLock.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairLock_SourceInfo >*
IndMPChairLock::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChairLock.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// IndMPChairUnLock_SourceInfo

// optional uint32 srcid = 1;
inline bool IndMPChairUnLock_SourceInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChairUnLock_SourceInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChairUnLock_SourceInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChairUnLock_SourceInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 IndMPChairUnLock_SourceInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairUnLock.SourceInfo.srcid)
  return srcid_;
}
inline void IndMPChairUnLock_SourceInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairUnLock.SourceInfo.srcid)
}

// -------------------------------------------------------------------

// IndMPChairUnLock

// optional uint64 confid = 1;
inline bool IndMPChairUnLock::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPChairUnLock::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPChairUnLock::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPChairUnLock::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPChairUnLock::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairUnLock.confid)
  return confid_;
}
inline void IndMPChairUnLock::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairUnLock.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPChairUnLock::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPChairUnLock::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPChairUnLock::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPChairUnLock::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPChairUnLock::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairUnLock.mcid)
  return mcid_;
}
inline void IndMPChairUnLock::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairUnLock.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPChairUnLock::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPChairUnLock::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPChairUnLock::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPChairUnLock::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPChairUnLock::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairUnLock.mpid)
  return mpid_;
}
inline void IndMPChairUnLock::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairUnLock.mpid)
}

// optional uint32 unlockedterid = 4;
inline bool IndMPChairUnLock::has_unlockedterid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPChairUnLock::set_has_unlockedterid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPChairUnLock::clear_has_unlockedterid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPChairUnLock::clear_unlockedterid() {
  unlockedterid_ = 0u;
  clear_has_unlockedterid();
}
inline ::google::protobuf::uint32 IndMPChairUnLock::unlockedterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairUnLock.unlockedterid)
  return unlockedterid_;
}
inline void IndMPChairUnLock::set_unlockedterid(::google::protobuf::uint32 value) {
  set_has_unlockedterid();
  unlockedterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPChairUnLock.unlockedterid)
}

// repeated .SRMsgs.IndMPChairUnLock.SourceInfo srcinfos = 5;
inline int IndMPChairUnLock::srcinfos_size() const {
  return srcinfos_.size();
}
inline void IndMPChairUnLock::clear_srcinfos() {
  srcinfos_.Clear();
}
inline const ::SRMsgs::IndMPChairUnLock_SourceInfo& IndMPChairUnLock::srcinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPChairUnLock.srcinfos)
  return srcinfos_.Get(index);
}
inline ::SRMsgs::IndMPChairUnLock_SourceInfo* IndMPChairUnLock::mutable_srcinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPChairUnLock.srcinfos)
  return srcinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPChairUnLock_SourceInfo* IndMPChairUnLock::add_srcinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPChairUnLock.srcinfos)
  return srcinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairUnLock_SourceInfo >&
IndMPChairUnLock::srcinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPChairUnLock.srcinfos)
  return srcinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPChairUnLock_SourceInfo >*
IndMPChairUnLock::mutable_srcinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPChairUnLock.srcinfos)
  return &srcinfos_;
}

// -------------------------------------------------------------------

// RspMCCreateMPI

// optional bool isok = 1;
inline bool RspMCCreateMPI::has_isok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspMCCreateMPI::set_has_isok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspMCCreateMPI::clear_has_isok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspMCCreateMPI::clear_isok() {
  isok_ = false;
  clear_has_isok();
}
inline bool RspMCCreateMPI::isok() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.isok)
  return isok_;
}
inline void RspMCCreateMPI::set_isok(bool value) {
  set_has_isok();
  isok_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.isok)
}

// optional uint64 confid = 2;
inline bool RspMCCreateMPI::has_confid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspMCCreateMPI::set_has_confid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspMCCreateMPI::clear_has_confid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspMCCreateMPI::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 RspMCCreateMPI::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.confid)
  return confid_;
}
inline void RspMCCreateMPI::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.confid)
}

// optional uint32 mcid = 3;
inline bool RspMCCreateMPI::has_mcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspMCCreateMPI::set_has_mcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspMCCreateMPI::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspMCCreateMPI::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 RspMCCreateMPI::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.mcid)
  return mcid_;
}
inline void RspMCCreateMPI::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.mcid)
}

// optional uint32 mpid = 4;
inline bool RspMCCreateMPI::has_mpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RspMCCreateMPI::set_has_mpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RspMCCreateMPI::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RspMCCreateMPI::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 RspMCCreateMPI::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.mpid)
  return mpid_;
}
inline void RspMCCreateMPI::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.mpid)
}

// optional uint32 channelid = 5;
inline bool RspMCCreateMPI::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RspMCCreateMPI::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RspMCCreateMPI::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RspMCCreateMPI::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 RspMCCreateMPI::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.channelid)
  return channelid_;
}
inline void RspMCCreateMPI::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.channelid)
}

// optional uint32 relatednetmpid = 6;
inline bool RspMCCreateMPI::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RspMCCreateMPI::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RspMCCreateMPI::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RspMCCreateMPI::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 RspMCCreateMPI::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.relatednetmpid)
  return relatednetmpid_;
}
inline void RspMCCreateMPI::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.relatednetmpid)
}

// optional string failreason = 7;
inline bool RspMCCreateMPI::has_failreason() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RspMCCreateMPI::set_has_failreason() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RspMCCreateMPI::clear_has_failreason() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RspMCCreateMPI::clear_failreason() {
  if (failreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_->clear();
  }
  clear_has_failreason();
}
inline const ::std::string& RspMCCreateMPI::failreason() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.failreason)
  return *failreason_;
}
inline void RspMCCreateMPI::set_failreason(const ::std::string& value) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.failreason)
}
inline void RspMCCreateMPI::set_failreason(const char* value) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.RspMCCreateMPI.failreason)
}
inline void RspMCCreateMPI::set_failreason(const char* value, size_t size) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.RspMCCreateMPI.failreason)
}
inline ::std::string* RspMCCreateMPI::mutable_failreason() {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.RspMCCreateMPI.failreason)
  return failreason_;
}
inline ::std::string* RspMCCreateMPI::release_failreason() {
  clear_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = failreason_;
    failreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RspMCCreateMPI::set_allocated_failreason(::std::string* failreason) {
  if (failreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete failreason_;
  }
  if (failreason) {
    set_has_failreason();
    failreason_ = failreason;
  } else {
    clear_has_failreason();
    failreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.RspMCCreateMPI.failreason)
}

// optional uint32 errorcode = 8;
inline bool RspMCCreateMPI::has_errorcode() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RspMCCreateMPI::set_has_errorcode() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RspMCCreateMPI::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RspMCCreateMPI::clear_errorcode() {
  errorcode_ = 0u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 RspMCCreateMPI::errorcode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateMPI.errorcode)
  return errorcode_;
}
inline void RspMCCreateMPI::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateMPI.errorcode)
}

// -------------------------------------------------------------------

// RspMCCreateScreen

// optional bool isok = 1;
inline bool RspMCCreateScreen::has_isok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspMCCreateScreen::set_has_isok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspMCCreateScreen::clear_has_isok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspMCCreateScreen::clear_isok() {
  isok_ = false;
  clear_has_isok();
}
inline bool RspMCCreateScreen::isok() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.isok)
  return isok_;
}
inline void RspMCCreateScreen::set_isok(bool value) {
  set_has_isok();
  isok_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.isok)
}

// optional uint64 confid = 2;
inline bool RspMCCreateScreen::has_confid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspMCCreateScreen::set_has_confid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspMCCreateScreen::clear_has_confid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspMCCreateScreen::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 RspMCCreateScreen::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.confid)
  return confid_;
}
inline void RspMCCreateScreen::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.confid)
}

// optional uint32 mcid = 3;
inline bool RspMCCreateScreen::has_mcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspMCCreateScreen::set_has_mcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspMCCreateScreen::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspMCCreateScreen::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.mcid)
  return mcid_;
}
inline void RspMCCreateScreen::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.mcid)
}

// optional uint32 mpid = 4;
inline bool RspMCCreateScreen::has_mpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RspMCCreateScreen::set_has_mpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RspMCCreateScreen::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RspMCCreateScreen::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.mpid)
  return mpid_;
}
inline void RspMCCreateScreen::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.mpid)
}

// optional uint32 relatednetmpid = 5;
inline bool RspMCCreateScreen::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RspMCCreateScreen::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RspMCCreateScreen::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RspMCCreateScreen::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.relatednetmpid)
  return relatednetmpid_;
}
inline void RspMCCreateScreen::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.relatednetmpid)
}

// optional uint32 channelid = 6;
inline bool RspMCCreateScreen::has_channelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RspMCCreateScreen::set_has_channelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RspMCCreateScreen::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RspMCCreateScreen::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.channelid)
  return channelid_;
}
inline void RspMCCreateScreen::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.channelid)
}

// optional uint32 screenid = 7;
inline bool RspMCCreateScreen::has_screenid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RspMCCreateScreen::set_has_screenid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RspMCCreateScreen::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RspMCCreateScreen::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.screenid)
  return screenid_;
}
inline void RspMCCreateScreen::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.screenid)
}

// optional uint32 screentype = 8;
inline bool RspMCCreateScreen::has_screentype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RspMCCreateScreen::set_has_screentype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RspMCCreateScreen::clear_has_screentype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RspMCCreateScreen::clear_screentype() {
  screentype_ = 0u;
  clear_has_screentype();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::screentype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.screentype)
  return screentype_;
}
inline void RspMCCreateScreen::set_screentype(::google::protobuf::uint32 value) {
  set_has_screentype();
  screentype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.screentype)
}

// optional string failreason = 9;
inline bool RspMCCreateScreen::has_failreason() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RspMCCreateScreen::set_has_failreason() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RspMCCreateScreen::clear_has_failreason() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RspMCCreateScreen::clear_failreason() {
  if (failreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_->clear();
  }
  clear_has_failreason();
}
inline const ::std::string& RspMCCreateScreen::failreason() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.failreason)
  return *failreason_;
}
inline void RspMCCreateScreen::set_failreason(const ::std::string& value) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.failreason)
}
inline void RspMCCreateScreen::set_failreason(const char* value) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.RspMCCreateScreen.failreason)
}
inline void RspMCCreateScreen::set_failreason(const char* value, size_t size) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.RspMCCreateScreen.failreason)
}
inline ::std::string* RspMCCreateScreen::mutable_failreason() {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.RspMCCreateScreen.failreason)
  return failreason_;
}
inline ::std::string* RspMCCreateScreen::release_failreason() {
  clear_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = failreason_;
    failreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RspMCCreateScreen::set_allocated_failreason(::std::string* failreason) {
  if (failreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete failreason_;
  }
  if (failreason) {
    set_has_failreason();
    failreason_ = failreason;
  } else {
    clear_has_failreason();
    failreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.RspMCCreateScreen.failreason)
}

// optional uint32 seqnum = 10;
inline bool RspMCCreateScreen::has_seqnum() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RspMCCreateScreen::set_has_seqnum() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RspMCCreateScreen::clear_has_seqnum() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RspMCCreateScreen::clear_seqnum() {
  seqnum_ = 0u;
  clear_has_seqnum();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::seqnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.seqnum)
  return seqnum_;
}
inline void RspMCCreateScreen::set_seqnum(::google::protobuf::uint32 value) {
  set_has_seqnum();
  seqnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.seqnum)
}

// optional uint32 errorcode = 11;
inline bool RspMCCreateScreen::has_errorcode() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RspMCCreateScreen::set_has_errorcode() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RspMCCreateScreen::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RspMCCreateScreen::clear_errorcode() {
  errorcode_ = 0u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 RspMCCreateScreen::errorcode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCCreateScreen.errorcode)
  return errorcode_;
}
inline void RspMCCreateScreen::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCCreateScreen.errorcode)
}

// -------------------------------------------------------------------

// CmdMPSeleteVideo_TermInfo

// optional uint32 terid = 1;
inline bool CmdMPSeleteVideo_TermInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSeleteVideo_TermInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo_TermInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.TermInfo.terid)
  return terid_;
}
inline void CmdMPSeleteVideo_TermInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.TermInfo.terid)
}

// optional uint32 channelid = 2;
inline bool CmdMPSeleteVideo_TermInfo::has_channelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPSeleteVideo_TermInfo::set_has_channelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo_TermInfo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.TermInfo.channelid)
  return channelid_;
}
inline void CmdMPSeleteVideo_TermInfo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.TermInfo.channelid)
}

// optional uint32 videosize = 3;
inline bool CmdMPSeleteVideo_TermInfo::has_videosize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPSeleteVideo_TermInfo::set_has_videosize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_has_videosize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_videosize() {
  videosize_ = 0u;
  clear_has_videosize();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo_TermInfo::videosize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.TermInfo.videosize)
  return videosize_;
}
inline void CmdMPSeleteVideo_TermInfo::set_videosize(::google::protobuf::uint32 value) {
  set_has_videosize();
  videosize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.TermInfo.videosize)
}

// optional uint32 srcid = 4;
inline bool CmdMPSeleteVideo_TermInfo::has_srcid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPSeleteVideo_TermInfo::set_has_srcid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_has_srcid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPSeleteVideo_TermInfo::clear_srcid() {
  srcid_ = 0u;
  clear_has_srcid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo_TermInfo::srcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.TermInfo.srcid)
  return srcid_;
}
inline void CmdMPSeleteVideo_TermInfo::set_srcid(::google::protobuf::uint32 value) {
  set_has_srcid();
  srcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.TermInfo.srcid)
}

// -------------------------------------------------------------------

// CmdMPSeleteVideo

// optional uint64 confid = 1;
inline bool CmdMPSeleteVideo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSeleteVideo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSeleteVideo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSeleteVideo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPSeleteVideo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.confid)
  return confid_;
}
inline void CmdMPSeleteVideo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPSeleteVideo::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPSeleteVideo::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPSeleteVideo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPSeleteVideo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.mcid)
  return mcid_;
}
inline void CmdMPSeleteVideo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPSeleteVideo::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPSeleteVideo::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPSeleteVideo::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPSeleteVideo::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.mpid)
  return mpid_;
}
inline void CmdMPSeleteVideo::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.mpid)
}

// optional uint32 channelid = 4;
inline bool CmdMPSeleteVideo::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPSeleteVideo::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPSeleteVideo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPSeleteVideo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.channelid)
  return channelid_;
}
inline void CmdMPSeleteVideo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.channelid)
}

// optional uint32 screenid = 5;
inline bool CmdMPSeleteVideo::has_screenid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPSeleteVideo::set_has_screenid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPSeleteVideo::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPSeleteVideo::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 CmdMPSeleteVideo::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.screenid)
  return screenid_;
}
inline void CmdMPSeleteVideo::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSeleteVideo.screenid)
}

// repeated .SRMsgs.CmdMPSeleteVideo.TermInfo seleteterinfo = 6;
inline int CmdMPSeleteVideo::seleteterinfo_size() const {
  return seleteterinfo_.size();
}
inline void CmdMPSeleteVideo::clear_seleteterinfo() {
  seleteterinfo_.Clear();
}
inline const ::SRMsgs::CmdMPSeleteVideo_TermInfo& CmdMPSeleteVideo::seleteterinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSeleteVideo.seleteterinfo)
  return seleteterinfo_.Get(index);
}
inline ::SRMsgs::CmdMPSeleteVideo_TermInfo* CmdMPSeleteVideo::mutable_seleteterinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPSeleteVideo.seleteterinfo)
  return seleteterinfo_.Mutable(index);
}
inline ::SRMsgs::CmdMPSeleteVideo_TermInfo* CmdMPSeleteVideo::add_seleteterinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdMPSeleteVideo.seleteterinfo)
  return seleteterinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSeleteVideo_TermInfo >&
CmdMPSeleteVideo::seleteterinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdMPSeleteVideo.seleteterinfo)
  return seleteterinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSeleteVideo_TermInfo >*
CmdMPSeleteVideo::mutable_seleteterinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdMPSeleteVideo.seleteterinfo)
  return &seleteterinfo_;
}

// -------------------------------------------------------------------

// CmdMPSelectAssistVideo_TermInfo

// optional uint32 terid = 1;
inline bool CmdMPSelectAssistVideo_TermInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo_TermInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.TermInfo.terid)
  return terid_;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.TermInfo.terid)
}

// optional uint32 channelid = 2;
inline bool CmdMPSelectAssistVideo_TermInfo::has_channelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_has_channelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo_TermInfo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.TermInfo.channelid)
  return channelid_;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.TermInfo.channelid)
}

// optional uint32 recvfmt = 3;
inline bool CmdMPSelectAssistVideo_TermInfo::has_recvfmt() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_has_recvfmt() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_has_recvfmt() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_recvfmt() {
  recvfmt_ = 0u;
  clear_has_recvfmt();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo_TermInfo::recvfmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.TermInfo.recvfmt)
  return recvfmt_;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_recvfmt(::google::protobuf::uint32 value) {
  set_has_recvfmt();
  recvfmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.TermInfo.recvfmt)
}

// optional uint32 recvsize = 4;
inline bool CmdMPSelectAssistVideo_TermInfo::has_recvsize() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_has_recvsize() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_has_recvsize() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_recvsize() {
  recvsize_ = 0u;
  clear_has_recvsize();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo_TermInfo::recvsize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.TermInfo.recvsize)
  return recvsize_;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_recvsize(::google::protobuf::uint32 value) {
  set_has_recvsize();
  recvsize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.TermInfo.recvsize)
}

// optional uint32 recvavtype = 5;
inline bool CmdMPSelectAssistVideo_TermInfo::has_recvavtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_has_recvavtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_has_recvavtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPSelectAssistVideo_TermInfo::clear_recvavtype() {
  recvavtype_ = 0u;
  clear_has_recvavtype();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo_TermInfo::recvavtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.TermInfo.recvavtype)
  return recvavtype_;
}
inline void CmdMPSelectAssistVideo_TermInfo::set_recvavtype(::google::protobuf::uint32 value) {
  set_has_recvavtype();
  recvavtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.TermInfo.recvavtype)
}

// -------------------------------------------------------------------

// CmdMPSelectAssistVideo

// optional uint64 confid = 1;
inline bool CmdMPSelectAssistVideo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdMPSelectAssistVideo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdMPSelectAssistVideo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdMPSelectAssistVideo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdMPSelectAssistVideo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.confid)
  return confid_;
}
inline void CmdMPSelectAssistVideo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.confid)
}

// optional uint32 mcid = 2;
inline bool CmdMPSelectAssistVideo::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdMPSelectAssistVideo::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdMPSelectAssistVideo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdMPSelectAssistVideo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.mcid)
  return mcid_;
}
inline void CmdMPSelectAssistVideo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.mcid)
}

// optional uint32 mpid = 3;
inline bool CmdMPSelectAssistVideo::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdMPSelectAssistVideo::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdMPSelectAssistVideo::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdMPSelectAssistVideo::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.mpid)
  return mpid_;
}
inline void CmdMPSelectAssistVideo::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.mpid)
}

// optional uint32 channelid = 4;
inline bool CmdMPSelectAssistVideo::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdMPSelectAssistVideo::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdMPSelectAssistVideo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdMPSelectAssistVideo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.channelid)
  return channelid_;
}
inline void CmdMPSelectAssistVideo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.channelid)
}

// optional uint32 screenid = 5;
inline bool CmdMPSelectAssistVideo::has_screenid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdMPSelectAssistVideo::set_has_screenid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdMPSelectAssistVideo::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdMPSelectAssistVideo::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 CmdMPSelectAssistVideo::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.screenid)
  return screenid_;
}
inline void CmdMPSelectAssistVideo::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdMPSelectAssistVideo.screenid)
}

// repeated .SRMsgs.CmdMPSelectAssistVideo.TermInfo selectavinfo = 6;
inline int CmdMPSelectAssistVideo::selectavinfo_size() const {
  return selectavinfo_.size();
}
inline void CmdMPSelectAssistVideo::clear_selectavinfo() {
  selectavinfo_.Clear();
}
inline const ::SRMsgs::CmdMPSelectAssistVideo_TermInfo& CmdMPSelectAssistVideo::selectavinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdMPSelectAssistVideo.selectavinfo)
  return selectavinfo_.Get(index);
}
inline ::SRMsgs::CmdMPSelectAssistVideo_TermInfo* CmdMPSelectAssistVideo::mutable_selectavinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdMPSelectAssistVideo.selectavinfo)
  return selectavinfo_.Mutable(index);
}
inline ::SRMsgs::CmdMPSelectAssistVideo_TermInfo* CmdMPSelectAssistVideo::add_selectavinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdMPSelectAssistVideo.selectavinfo)
  return selectavinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSelectAssistVideo_TermInfo >&
CmdMPSelectAssistVideo::selectavinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdMPSelectAssistVideo.selectavinfo)
  return selectavinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdMPSelectAssistVideo_TermInfo >*
CmdMPSelectAssistVideo::mutable_selectavinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdMPSelectAssistVideo.selectavinfo)
  return &selectavinfo_;
}

// -------------------------------------------------------------------

// IndMPHeartBeatToMC

// optional uint32 mcid = 1;
inline bool IndMPHeartBeatToMC::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPHeartBeatToMC::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPHeartBeatToMC::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPHeartBeatToMC::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPHeartBeatToMC::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPHeartBeatToMC.mcid)
  return mcid_;
}
inline void IndMPHeartBeatToMC::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPHeartBeatToMC.mcid)
}

// optional uint32 mpid = 2;
inline bool IndMPHeartBeatToMC::has_mpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPHeartBeatToMC::set_has_mpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPHeartBeatToMC::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPHeartBeatToMC::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPHeartBeatToMC::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPHeartBeatToMC.mpid)
  return mpid_;
}
inline void IndMPHeartBeatToMC::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPHeartBeatToMC.mpid)
}

// -------------------------------------------------------------------

// IndMPLayoutInfo_AutoPollInfo

// optional uint64 apid = 1;
inline bool IndMPLayoutInfo_AutoPollInfo::has_apid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPLayoutInfo_AutoPollInfo::set_has_apid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPLayoutInfo_AutoPollInfo::clear_has_apid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPLayoutInfo_AutoPollInfo::clear_apid() {
  apid_ = GOOGLE_ULONGLONG(0);
  clear_has_apid();
}
inline ::google::protobuf::uint64 IndMPLayoutInfo_AutoPollInfo::apid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.AutoPollInfo.apid)
  return apid_;
}
inline void IndMPLayoutInfo_AutoPollInfo::set_apid(::google::protobuf::uint64 value) {
  set_has_apid();
  apid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.AutoPollInfo.apid)
}

// -------------------------------------------------------------------

// IndMPLayoutInfo_PaneInfo

// optional uint32 paneindex = 1;
inline bool IndMPLayoutInfo_PaneInfo::has_paneindex() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_paneindex() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_paneindex() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_paneindex() {
  paneindex_ = 0u;
  clear_has_paneindex();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_PaneInfo::paneindex() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.paneindex)
  return paneindex_;
}
inline void IndMPLayoutInfo_PaneInfo::set_paneindex(::google::protobuf::uint32 value) {
  set_has_paneindex();
  paneindex_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.paneindex)
}

// optional uint32 contenttype = 2;
inline bool IndMPLayoutInfo_PaneInfo::has_contenttype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_contenttype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_contenttype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_contenttype() {
  contenttype_ = 0u;
  clear_has_contenttype();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_PaneInfo::contenttype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.contenttype)
  return contenttype_;
}
inline void IndMPLayoutInfo_PaneInfo::set_contenttype(::google::protobuf::uint32 value) {
  set_has_contenttype();
  contenttype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.contenttype)
}

// optional uint32 optype = 3;
inline bool IndMPLayoutInfo_PaneInfo::has_optype() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_optype() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_optype() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_optype() {
  optype_ = 0u;
  clear_has_optype();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_PaneInfo::optype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.optype)
  return optype_;
}
inline void IndMPLayoutInfo_PaneInfo::set_optype(::google::protobuf::uint32 value) {
  set_has_optype();
  optype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.optype)
}

// optional uint32 polltime = 4;
inline bool IndMPLayoutInfo_PaneInfo::has_polltime() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_polltime() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_polltime() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_polltime() {
  polltime_ = 0u;
  clear_has_polltime();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_PaneInfo::polltime() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.polltime)
  return polltime_;
}
inline void IndMPLayoutInfo_PaneInfo::set_polltime(::google::protobuf::uint32 value) {
  set_has_polltime();
  polltime_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.polltime)
}

// optional uint32 terid = 5;
inline bool IndMPLayoutInfo_PaneInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_PaneInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.terid)
  return terid_;
}
inline void IndMPLayoutInfo_PaneInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.terid)
}

// optional uint32 channelid = 6;
inline bool IndMPLayoutInfo_PaneInfo::has_channelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_channelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_PaneInfo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.channelid)
  return channelid_;
}
inline void IndMPLayoutInfo_PaneInfo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.channelid)
}

// optional string tername = 7;
inline bool IndMPLayoutInfo_PaneInfo::has_tername() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_tername() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_tername() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_tername() {
  if (tername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_->clear();
  }
  clear_has_tername();
}
inline const ::std::string& IndMPLayoutInfo_PaneInfo::tername() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.tername)
  return *tername_;
}
inline void IndMPLayoutInfo_PaneInfo::set_tername(const ::std::string& value) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.tername)
}
inline void IndMPLayoutInfo_PaneInfo::set_tername(const char* value) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndMPLayoutInfo.PaneInfo.tername)
}
inline void IndMPLayoutInfo_PaneInfo::set_tername(const char* value, size_t size) {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  tername_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndMPLayoutInfo.PaneInfo.tername)
}
inline ::std::string* IndMPLayoutInfo_PaneInfo::mutable_tername() {
  set_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    tername_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPLayoutInfo.PaneInfo.tername)
  return tername_;
}
inline ::std::string* IndMPLayoutInfo_PaneInfo::release_tername() {
  clear_has_tername();
  if (tername_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = tername_;
    tername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndMPLayoutInfo_PaneInfo::set_allocated_tername(::std::string* tername) {
  if (tername_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete tername_;
  }
  if (tername) {
    set_has_tername();
    tername_ = tername;
  } else {
    clear_has_tername();
    tername_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndMPLayoutInfo.PaneInfo.tername)
}

// optional sint32 vsrcid = 8;
inline bool IndMPLayoutInfo_PaneInfo::has_vsrcid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndMPLayoutInfo_PaneInfo::set_has_vsrcid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_has_vsrcid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndMPLayoutInfo_PaneInfo::clear_vsrcid() {
  vsrcid_ = 0;
  clear_has_vsrcid();
}
inline ::google::protobuf::int32 IndMPLayoutInfo_PaneInfo::vsrcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.vsrcid)
  return vsrcid_;
}
inline void IndMPLayoutInfo_PaneInfo::set_vsrcid(::google::protobuf::int32 value) {
  set_has_vsrcid();
  vsrcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.PaneInfo.vsrcid)
}

// repeated .SRMsgs.IndMPLayoutInfo.AutoPollInfo autopolllist = 9;
inline int IndMPLayoutInfo_PaneInfo::autopolllist_size() const {
  return autopolllist_.size();
}
inline void IndMPLayoutInfo_PaneInfo::clear_autopolllist() {
  autopolllist_.Clear();
}
inline const ::SRMsgs::IndMPLayoutInfo_AutoPollInfo& IndMPLayoutInfo_PaneInfo::autopolllist(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.PaneInfo.autopolllist)
  return autopolllist_.Get(index);
}
inline ::SRMsgs::IndMPLayoutInfo_AutoPollInfo* IndMPLayoutInfo_PaneInfo::mutable_autopolllist(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPLayoutInfo.PaneInfo.autopolllist)
  return autopolllist_.Mutable(index);
}
inline ::SRMsgs::IndMPLayoutInfo_AutoPollInfo* IndMPLayoutInfo_PaneInfo::add_autopolllist() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPLayoutInfo.PaneInfo.autopolllist)
  return autopolllist_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_AutoPollInfo >&
IndMPLayoutInfo_PaneInfo::autopolllist() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPLayoutInfo.PaneInfo.autopolllist)
  return autopolllist_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_AutoPollInfo >*
IndMPLayoutInfo_PaneInfo::mutable_autopolllist() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPLayoutInfo.PaneInfo.autopolllist)
  return &autopolllist_;
}

// -------------------------------------------------------------------

// IndMPLayoutInfo_LayoutInfo

// optional uint32 screenid = 1;
inline bool IndMPLayoutInfo_LayoutInfo::has_screenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPLayoutInfo_LayoutInfo::set_has_screenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_LayoutInfo::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.LayoutInfo.screenid)
  return screenid_;
}
inline void IndMPLayoutInfo_LayoutInfo::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.LayoutInfo.screenid)
}

// optional uint32 screentype = 2;
inline bool IndMPLayoutInfo_LayoutInfo::has_screentype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPLayoutInfo_LayoutInfo::set_has_screentype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_has_screentype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_screentype() {
  screentype_ = 0u;
  clear_has_screentype();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_LayoutInfo::screentype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.LayoutInfo.screentype)
  return screentype_;
}
inline void IndMPLayoutInfo_LayoutInfo::set_screentype(::google::protobuf::uint32 value) {
  set_has_screentype();
  screentype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.LayoutInfo.screentype)
}

// optional uint32 layoutmode = 3;
inline bool IndMPLayoutInfo_LayoutInfo::has_layoutmode() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPLayoutInfo_LayoutInfo::set_has_layoutmode() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_has_layoutmode() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_layoutmode() {
  layoutmode_ = 0u;
  clear_has_layoutmode();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_LayoutInfo::layoutmode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.LayoutInfo.layoutmode)
  return layoutmode_;
}
inline void IndMPLayoutInfo_LayoutInfo::set_layoutmode(::google::protobuf::uint32 value) {
  set_has_layoutmode();
  layoutmode_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.LayoutInfo.layoutmode)
}

// repeated .SRMsgs.IndMPLayoutInfo.PaneInfo panes = 4;
inline int IndMPLayoutInfo_LayoutInfo::panes_size() const {
  return panes_.size();
}
inline void IndMPLayoutInfo_LayoutInfo::clear_panes() {
  panes_.Clear();
}
inline const ::SRMsgs::IndMPLayoutInfo_PaneInfo& IndMPLayoutInfo_LayoutInfo::panes(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.LayoutInfo.panes)
  return panes_.Get(index);
}
inline ::SRMsgs::IndMPLayoutInfo_PaneInfo* IndMPLayoutInfo_LayoutInfo::mutable_panes(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPLayoutInfo.LayoutInfo.panes)
  return panes_.Mutable(index);
}
inline ::SRMsgs::IndMPLayoutInfo_PaneInfo* IndMPLayoutInfo_LayoutInfo::add_panes() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPLayoutInfo.LayoutInfo.panes)
  return panes_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_PaneInfo >&
IndMPLayoutInfo_LayoutInfo::panes() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPLayoutInfo.LayoutInfo.panes)
  return panes_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_PaneInfo >*
IndMPLayoutInfo_LayoutInfo::mutable_panes() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPLayoutInfo.LayoutInfo.panes)
  return &panes_;
}

// optional uint32 chairfollow = 5;
inline bool IndMPLayoutInfo_LayoutInfo::has_chairfollow() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPLayoutInfo_LayoutInfo::set_has_chairfollow() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_has_chairfollow() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPLayoutInfo_LayoutInfo::clear_chairfollow() {
  chairfollow_ = 0u;
  clear_has_chairfollow();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo_LayoutInfo::chairfollow() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.LayoutInfo.chairfollow)
  return chairfollow_;
}
inline void IndMPLayoutInfo_LayoutInfo::set_chairfollow(::google::protobuf::uint32 value) {
  set_has_chairfollow();
  chairfollow_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.LayoutInfo.chairfollow)
}

// -------------------------------------------------------------------

// IndMPLayoutInfo

// optional uint64 confid = 1;
inline bool IndMPLayoutInfo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPLayoutInfo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPLayoutInfo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPLayoutInfo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPLayoutInfo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.confid)
  return confid_;
}
inline void IndMPLayoutInfo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPLayoutInfo::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPLayoutInfo::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPLayoutInfo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPLayoutInfo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.mcid)
  return mcid_;
}
inline void IndMPLayoutInfo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.mcid)
}

// optional uint32 mpid = 3;
inline bool IndMPLayoutInfo::has_mpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPLayoutInfo::set_has_mpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPLayoutInfo::clear_has_mpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPLayoutInfo::clear_mpid() {
  mpid_ = 0u;
  clear_has_mpid();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo::mpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.mpid)
  return mpid_;
}
inline void IndMPLayoutInfo::set_mpid(::google::protobuf::uint32 value) {
  set_has_mpid();
  mpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.mpid)
}

// optional uint32 channelid = 4;
inline bool IndMPLayoutInfo::has_channelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPLayoutInfo::set_has_channelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPLayoutInfo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPLayoutInfo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndMPLayoutInfo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.channelid)
  return channelid_;
}
inline void IndMPLayoutInfo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPLayoutInfo.channelid)
}

// repeated .SRMsgs.IndMPLayoutInfo.LayoutInfo layoutinfos = 5;
inline int IndMPLayoutInfo::layoutinfos_size() const {
  return layoutinfos_.size();
}
inline void IndMPLayoutInfo::clear_layoutinfos() {
  layoutinfos_.Clear();
}
inline const ::SRMsgs::IndMPLayoutInfo_LayoutInfo& IndMPLayoutInfo::layoutinfos(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPLayoutInfo.layoutinfos)
  return layoutinfos_.Get(index);
}
inline ::SRMsgs::IndMPLayoutInfo_LayoutInfo* IndMPLayoutInfo::mutable_layoutinfos(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndMPLayoutInfo.layoutinfos)
  return layoutinfos_.Mutable(index);
}
inline ::SRMsgs::IndMPLayoutInfo_LayoutInfo* IndMPLayoutInfo::add_layoutinfos() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndMPLayoutInfo.layoutinfos)
  return layoutinfos_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_LayoutInfo >&
IndMPLayoutInfo::layoutinfos() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndMPLayoutInfo.layoutinfos)
  return layoutinfos_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndMPLayoutInfo_LayoutInfo >*
IndMPLayoutInfo::mutable_layoutinfos() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndMPLayoutInfo.layoutinfos)
  return &layoutinfos_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SRMsgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mc_5fmp_2eproto__INCLUDED
