// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mc_netmp.proto

#ifndef PROTOBUF_mc_5fnetmp_2eproto__INCLUDED
#define PROTOBUF_mc_5fnetmp_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace SRMsgs {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_mc_5fnetmp_2eproto();
void protobuf_AssignDesc_mc_5fnetmp_2eproto();
void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

class ReqNetMPCreateConf;
class IndDeleteOtherNetMP;
class IndNetMPTerJoined;
class IndNetMPTerLeft;
class IndNetMPChangeTerInfo;
class IndConfAllTerMediaFormatToNetMP;
class IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat;
class IndConfAllTerMediaFormatToNetMP_TermsMediaFmt;
class IndNetMPTerMediaFormat;
class IndNetMPTerMediaFormat_MediaTypeAndFormat;
class IndNetMPTerSendMediaFormat;
class IndNetMPTerSendMediaFormat_MediaTypeAndFormat;
class IndNetMPTerRecvMediaFormat;
class IndNetMPTerRecvMediaFormat_MediaTypeAndFormat;
class IndNetMPTerAssistVideoOn;
class IndNetMPTerAssistVideoOff;
class CmdNetMPTerVideoSelect;
class CmdNetMPTerVideoSelect_TerVideoSend;
class CmdNetMPTerSelectAssistVideo;
class CmdNetMPConfDestroy;
class IndNetMPHeartBeatOfMC;
class IndConfAllNetMPs;
class IndConfAllNetMPs_TersInNetMP;
class IndConfAllNetMPs_NetMPsInConf;
class IndConfAddNewNetMP;
class IndConfAllMPIInfoToNetMp;
class IndConfAllMPIInfoToNetMp_ScreensInMPI;
class IndConfAllMPIInfoToNetMp_MPIsInConf;
class IndMPIChannelidToNetMp;
class IndConfScreenInfoInMP;
class IndUpdateMPIChannelInfoToNetMp;
class IndCRSChannelidToNetMp;
class IndVASChannelidToNetMp;
class RspMCConfCreate;
class IndMCHeartBeatOfNetMP;
class IndTerStatisticsInfoFromNetmp;
class IndTerStatisticsInfoFromNetmp_FrameInfo;
class IndTerStatisticsInfoFromNetmp_AdvanceInfo;
class IndTerStatisticsInfoFromNetmp_BaseInfo;
class IndTerStatisticsInfoFromNetmp_AudioInfo;
class IndTerStatisticsInfoFromNetmp_VideoInfo;
class IndTerStatisticsInfoFromNetmp_XfeInfo;
class IndTerStatisticsInfoFromNetmp_TerStatisticsInfo;

// ===================================================================

class ReqNetMPCreateConf : public ::google::protobuf::Message {
 public:
  ReqNetMPCreateConf();
  virtual ~ReqNetMPCreateConf();

  ReqNetMPCreateConf(const ReqNetMPCreateConf& from);

  inline ReqNetMPCreateConf& operator=(const ReqNetMPCreateConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqNetMPCreateConf& default_instance();

  void Swap(ReqNetMPCreateConf* other);

  // implements Message ----------------------------------------------

  ReqNetMPCreateConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqNetMPCreateConf& from);
  void MergeFrom(const ReqNetMPCreateConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 maxterms = 4;
  inline bool has_maxterms() const;
  inline void clear_maxterms();
  static const int kMaxtermsFieldNumber = 4;
  inline ::google::protobuf::uint32 maxterms() const;
  inline void set_maxterms(::google::protobuf::uint32 value);

  // optional uint32 netmpno = 5;
  inline bool has_netmpno() const;
  inline void clear_netmpno();
  static const int kNetmpnoFieldNumber = 5;
  inline ::google::protobuf::uint32 netmpno() const;
  inline void set_netmpno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.ReqNetMPCreateConf)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_maxterms();
  inline void clear_has_maxterms();
  inline void set_has_netmpno();
  inline void clear_has_netmpno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 maxterms_;
  ::google::protobuf::uint32 netmpno_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static ReqNetMPCreateConf* default_instance_;
};
// -------------------------------------------------------------------

class IndDeleteOtherNetMP : public ::google::protobuf::Message {
 public:
  IndDeleteOtherNetMP();
  virtual ~IndDeleteOtherNetMP();

  IndDeleteOtherNetMP(const IndDeleteOtherNetMP& from);

  inline IndDeleteOtherNetMP& operator=(const IndDeleteOtherNetMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndDeleteOtherNetMP& default_instance();

  void Swap(IndDeleteOtherNetMP* other);

  // implements Message ----------------------------------------------

  IndDeleteOtherNetMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndDeleteOtherNetMP& from);
  void MergeFrom(const IndDeleteOtherNetMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 delnetmpid = 4;
  inline bool has_delnetmpid() const;
  inline void clear_delnetmpid();
  static const int kDelnetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 delnetmpid() const;
  inline void set_delnetmpid(::google::protobuf::uint32 value);

  // optional uint32 delnetmpno = 5;
  inline bool has_delnetmpno() const;
  inline void clear_delnetmpno();
  static const int kDelnetmpnoFieldNumber = 5;
  inline ::google::protobuf::uint32 delnetmpno() const;
  inline void set_delnetmpno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndDeleteOtherNetMP)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_delnetmpid();
  inline void clear_has_delnetmpid();
  inline void set_has_delnetmpno();
  inline void clear_has_delnetmpno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 delnetmpid_;
  ::google::protobuf::uint32 delnetmpno_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndDeleteOtherNetMP* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerJoined : public ::google::protobuf::Message {
 public:
  IndNetMPTerJoined();
  virtual ~IndNetMPTerJoined();

  IndNetMPTerJoined(const IndNetMPTerJoined& from);

  inline IndNetMPTerJoined& operator=(const IndNetMPTerJoined& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerJoined& default_instance();

  void Swap(IndNetMPTerJoined* other);

  // implements Message ----------------------------------------------

  IndNetMPTerJoined* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerJoined& from);
  void MergeFrom(const IndNetMPTerJoined& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 5;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 6;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 termtype = 7;
  inline bool has_termtype() const;
  inline void clear_termtype();
  static const int kTermtypeFieldNumber = 7;
  inline ::google::protobuf::uint32 termtype() const;
  inline void set_termtype(::google::protobuf::uint32 value);

  // optional uint32 fromtype = 8;
  inline bool has_fromtype() const;
  inline void clear_fromtype();
  static const int kFromtypeFieldNumber = 8;
  inline ::google::protobuf::uint32 fromtype() const;
  inline void set_fromtype(::google::protobuf::uint32 value);

  // optional uint32 gmrtype = 9;
  inline bool has_gmrtype() const;
  inline void clear_gmrtype();
  static const int kGmrtypeFieldNumber = 9;
  inline ::google::protobuf::uint32 gmrtype() const;
  inline void set_gmrtype(::google::protobuf::uint32 value);

  // optional uint32 gmrid = 10;
  inline bool has_gmrid() const;
  inline void clear_gmrid();
  static const int kGmridFieldNumber = 10;
  inline ::google::protobuf::uint32 gmrid() const;
  inline void set_gmrid(::google::protobuf::uint32 value);

  // optional string gmrname = 11;
  inline bool has_gmrname() const;
  inline void clear_gmrname();
  static const int kGmrnameFieldNumber = 11;
  inline const ::std::string& gmrname() const;
  inline void set_gmrname(const ::std::string& value);
  inline void set_gmrname(const char* value);
  inline void set_gmrname(const char* value, size_t size);
  inline ::std::string* mutable_gmrname();
  inline ::std::string* release_gmrname();
  inline void set_allocated_gmrname(::std::string* gmrname);

  // optional uint32 producttype = 12;
  inline bool has_producttype() const;
  inline void clear_producttype();
  static const int kProducttypeFieldNumber = 12;
  inline ::google::protobuf::uint32 producttype() const;
  inline void set_producttype(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerJoined)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_termtype();
  inline void clear_has_termtype();
  inline void set_has_fromtype();
  inline void clear_has_fromtype();
  inline void set_has_gmrtype();
  inline void clear_has_gmrtype();
  inline void set_has_gmrid();
  inline void clear_has_gmrid();
  inline void set_has_gmrname();
  inline void clear_has_gmrname();
  inline void set_has_producttype();
  inline void clear_has_producttype();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 termtype_;
  ::google::protobuf::uint32 fromtype_;
  ::google::protobuf::uint32 gmrtype_;
  ::std::string* gmrname_;
  ::google::protobuf::uint32 gmrid_;
  ::google::protobuf::uint32 producttype_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerJoined* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerLeft : public ::google::protobuf::Message {
 public:
  IndNetMPTerLeft();
  virtual ~IndNetMPTerLeft();

  IndNetMPTerLeft(const IndNetMPTerLeft& from);

  inline IndNetMPTerLeft& operator=(const IndNetMPTerLeft& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerLeft& default_instance();

  void Swap(IndNetMPTerLeft* other);

  // implements Message ----------------------------------------------

  IndNetMPTerLeft* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerLeft& from);
  void MergeFrom(const IndNetMPTerLeft& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 5;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 6;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 gmrtype = 7;
  inline bool has_gmrtype() const;
  inline void clear_gmrtype();
  static const int kGmrtypeFieldNumber = 7;
  inline ::google::protobuf::uint32 gmrtype() const;
  inline void set_gmrtype(::google::protobuf::uint32 value);

  // optional uint32 gmrid = 8;
  inline bool has_gmrid() const;
  inline void clear_gmrid();
  static const int kGmridFieldNumber = 8;
  inline ::google::protobuf::uint32 gmrid() const;
  inline void set_gmrid(::google::protobuf::uint32 value);

  // optional string gmrname = 9;
  inline bool has_gmrname() const;
  inline void clear_gmrname();
  static const int kGmrnameFieldNumber = 9;
  inline const ::std::string& gmrname() const;
  inline void set_gmrname(const ::std::string& value);
  inline void set_gmrname(const char* value);
  inline void set_gmrname(const char* value, size_t size);
  inline ::std::string* mutable_gmrname();
  inline ::std::string* release_gmrname();
  inline void set_allocated_gmrname(::std::string* gmrname);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerLeft)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_gmrtype();
  inline void clear_has_gmrtype();
  inline void set_has_gmrid();
  inline void clear_has_gmrid();
  inline void set_has_gmrname();
  inline void clear_has_gmrname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 gmrtype_;
  ::std::string* gmrname_;
  ::google::protobuf::uint32 gmrid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerLeft* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPChangeTerInfo : public ::google::protobuf::Message {
 public:
  IndNetMPChangeTerInfo();
  virtual ~IndNetMPChangeTerInfo();

  IndNetMPChangeTerInfo(const IndNetMPChangeTerInfo& from);

  inline IndNetMPChangeTerInfo& operator=(const IndNetMPChangeTerInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPChangeTerInfo& default_instance();

  void Swap(IndNetMPChangeTerInfo* other);

  // implements Message ----------------------------------------------

  IndNetMPChangeTerInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPChangeTerInfo& from);
  void MergeFrom(const IndNetMPChangeTerInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 6;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 6;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 termtype = 7;
  inline bool has_termtype() const;
  inline void clear_termtype();
  static const int kTermtypeFieldNumber = 7;
  inline ::google::protobuf::uint32 termtype() const;
  inline void set_termtype(::google::protobuf::uint32 value);

  // optional uint32 fromtype = 8;
  inline bool has_fromtype() const;
  inline void clear_fromtype();
  static const int kFromtypeFieldNumber = 8;
  inline ::google::protobuf::uint32 fromtype() const;
  inline void set_fromtype(::google::protobuf::uint32 value);

  // optional uint32 producttype = 9;
  inline bool has_producttype() const;
  inline void clear_producttype();
  static const int kProducttypeFieldNumber = 9;
  inline ::google::protobuf::uint32 producttype() const;
  inline void set_producttype(::google::protobuf::uint32 value);

  // optional uint32 gmrtype = 10;
  inline bool has_gmrtype() const;
  inline void clear_gmrtype();
  static const int kGmrtypeFieldNumber = 10;
  inline ::google::protobuf::uint32 gmrtype() const;
  inline void set_gmrtype(::google::protobuf::uint32 value);

  // optional uint32 gmrid = 11;
  inline bool has_gmrid() const;
  inline void clear_gmrid();
  static const int kGmridFieldNumber = 11;
  inline ::google::protobuf::uint32 gmrid() const;
  inline void set_gmrid(::google::protobuf::uint32 value);

  // optional string gmrname = 12;
  inline bool has_gmrname() const;
  inline void clear_gmrname();
  static const int kGmrnameFieldNumber = 12;
  inline const ::std::string& gmrname() const;
  inline void set_gmrname(const ::std::string& value);
  inline void set_gmrname(const char* value);
  inline void set_gmrname(const char* value, size_t size);
  inline ::std::string* mutable_gmrname();
  inline ::std::string* release_gmrname();
  inline void set_allocated_gmrname(::std::string* gmrname);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPChangeTerInfo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_termtype();
  inline void clear_has_termtype();
  inline void set_has_fromtype();
  inline void clear_has_fromtype();
  inline void set_has_producttype();
  inline void clear_has_producttype();
  inline void set_has_gmrtype();
  inline void clear_has_gmrtype();
  inline void set_has_gmrid();
  inline void clear_has_gmrid();
  inline void set_has_gmrname();
  inline void clear_has_gmrname();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 termtype_;
  ::google::protobuf::uint32 fromtype_;
  ::google::protobuf::uint32 producttype_;
  ::google::protobuf::uint32 gmrtype_;
  ::google::protobuf::uint32 gmrid_;
  ::std::string* gmrname_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPChangeTerInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat();
  virtual ~IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat();

  IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat(const IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& from);

  inline IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& operator=(const IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& default_instance();

  void Swap(IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& from);
  void MergeFrom(const IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllTerMediaFormatToNetMP_TermsMediaFmt : public ::google::protobuf::Message {
 public:
  IndConfAllTerMediaFormatToNetMP_TermsMediaFmt();
  virtual ~IndConfAllTerMediaFormatToNetMP_TermsMediaFmt();

  IndConfAllTerMediaFormatToNetMP_TermsMediaFmt(const IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& from);

  inline IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& operator=(const IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& default_instance();

  void Swap(IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* other);

  // implements Message ----------------------------------------------

  IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& from);
  void MergeFrom(const IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat sendmediaformat = 2;
  inline bool has_sendmediaformat() const;
  inline void clear_sendmediaformat();
  static const int kSendmediaformatFieldNumber = 2;
  inline const ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& sendmediaformat() const;
  inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* mutable_sendmediaformat();
  inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* release_sendmediaformat();
  inline void set_allocated_sendmediaformat(::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* sendmediaformat);

  // optional .SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat recvmediaformat = 3;
  inline bool has_recvmediaformat() const;
  inline void clear_recvmediaformat();
  static const int kRecvmediaformatFieldNumber = 3;
  inline const ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& recvmediaformat() const;
  inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* mutable_recvmediaformat();
  inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* release_recvmediaformat();
  inline void set_allocated_recvmediaformat(::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* recvmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_sendmediaformat();
  inline void clear_has_sendmediaformat();
  inline void set_has_recvmediaformat();
  inline void clear_has_recvmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* sendmediaformat_;
  ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* recvmediaformat_;
  ::google::protobuf::uint32 terid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllTerMediaFormatToNetMP : public ::google::protobuf::Message {
 public:
  IndConfAllTerMediaFormatToNetMP();
  virtual ~IndConfAllTerMediaFormatToNetMP();

  IndConfAllTerMediaFormatToNetMP(const IndConfAllTerMediaFormatToNetMP& from);

  inline IndConfAllTerMediaFormatToNetMP& operator=(const IndConfAllTerMediaFormatToNetMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllTerMediaFormatToNetMP& default_instance();

  void Swap(IndConfAllTerMediaFormatToNetMP* other);

  // implements Message ----------------------------------------------

  IndConfAllTerMediaFormatToNetMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllTerMediaFormatToNetMP& from);
  void MergeFrom(const IndConfAllTerMediaFormatToNetMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat MediaTypeAndFormat;
  typedef IndConfAllTerMediaFormatToNetMP_TermsMediaFmt TermsMediaFmt;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt tersmediainfo = 4;
  inline int tersmediainfo_size() const;
  inline void clear_tersmediainfo();
  static const int kTersmediainfoFieldNumber = 4;
  inline const ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& tersmediainfo(int index) const;
  inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* mutable_tersmediainfo(int index);
  inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* add_tersmediainfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt >&
      tersmediainfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt >*
      mutable_tersmediainfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllTerMediaFormatToNetMP)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt > tersmediainfo_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllTerMediaFormatToNetMP* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerMediaFormat_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndNetMPTerMediaFormat_MediaTypeAndFormat();
  virtual ~IndNetMPTerMediaFormat_MediaTypeAndFormat();

  IndNetMPTerMediaFormat_MediaTypeAndFormat(const IndNetMPTerMediaFormat_MediaTypeAndFormat& from);

  inline IndNetMPTerMediaFormat_MediaTypeAndFormat& operator=(const IndNetMPTerMediaFormat_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerMediaFormat_MediaTypeAndFormat& default_instance();

  void Swap(IndNetMPTerMediaFormat_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndNetMPTerMediaFormat_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerMediaFormat_MediaTypeAndFormat& from);
  void MergeFrom(const IndNetMPTerMediaFormat_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerMediaFormat_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerMediaFormat : public ::google::protobuf::Message {
 public:
  IndNetMPTerMediaFormat();
  virtual ~IndNetMPTerMediaFormat();

  IndNetMPTerMediaFormat(const IndNetMPTerMediaFormat& from);

  inline IndNetMPTerMediaFormat& operator=(const IndNetMPTerMediaFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerMediaFormat& default_instance();

  void Swap(IndNetMPTerMediaFormat* other);

  // implements Message ----------------------------------------------

  IndNetMPTerMediaFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerMediaFormat& from);
  void MergeFrom(const IndNetMPTerMediaFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndNetMPTerMediaFormat_MediaTypeAndFormat MediaTypeAndFormat;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
  inline bool has_sendmediaformat() const;
  inline void clear_sendmediaformat();
  static const int kSendmediaformatFieldNumber = 6;
  inline const ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat& sendmediaformat() const;
  inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* mutable_sendmediaformat();
  inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* release_sendmediaformat();
  inline void set_allocated_sendmediaformat(::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* sendmediaformat);

  // optional .SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat recvmediaformat = 7;
  inline bool has_recvmediaformat() const;
  inline void clear_recvmediaformat();
  static const int kRecvmediaformatFieldNumber = 7;
  inline const ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat& recvmediaformat() const;
  inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* mutable_recvmediaformat();
  inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* release_recvmediaformat();
  inline void set_allocated_recvmediaformat(::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* recvmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerMediaFormat)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_sendmediaformat();
  inline void clear_has_sendmediaformat();
  inline void set_has_recvmediaformat();
  inline void clear_has_recvmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* sendmediaformat_;
  ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* recvmediaformat_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerMediaFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerSendMediaFormat_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndNetMPTerSendMediaFormat_MediaTypeAndFormat();
  virtual ~IndNetMPTerSendMediaFormat_MediaTypeAndFormat();

  IndNetMPTerSendMediaFormat_MediaTypeAndFormat(const IndNetMPTerSendMediaFormat_MediaTypeAndFormat& from);

  inline IndNetMPTerSendMediaFormat_MediaTypeAndFormat& operator=(const IndNetMPTerSendMediaFormat_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerSendMediaFormat_MediaTypeAndFormat& default_instance();

  void Swap(IndNetMPTerSendMediaFormat_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndNetMPTerSendMediaFormat_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerSendMediaFormat_MediaTypeAndFormat& from);
  void MergeFrom(const IndNetMPTerSendMediaFormat_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerSendMediaFormat_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerSendMediaFormat : public ::google::protobuf::Message {
 public:
  IndNetMPTerSendMediaFormat();
  virtual ~IndNetMPTerSendMediaFormat();

  IndNetMPTerSendMediaFormat(const IndNetMPTerSendMediaFormat& from);

  inline IndNetMPTerSendMediaFormat& operator=(const IndNetMPTerSendMediaFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerSendMediaFormat& default_instance();

  void Swap(IndNetMPTerSendMediaFormat* other);

  // implements Message ----------------------------------------------

  IndNetMPTerSendMediaFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerSendMediaFormat& from);
  void MergeFrom(const IndNetMPTerSendMediaFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndNetMPTerSendMediaFormat_MediaTypeAndFormat MediaTypeAndFormat;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
  inline bool has_sendmediaformat() const;
  inline void clear_sendmediaformat();
  static const int kSendmediaformatFieldNumber = 6;
  inline const ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat& sendmediaformat() const;
  inline ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* mutable_sendmediaformat();
  inline ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* release_sendmediaformat();
  inline void set_allocated_sendmediaformat(::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* sendmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerSendMediaFormat)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_sendmediaformat();
  inline void clear_has_sendmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* sendmediaformat_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerSendMediaFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerRecvMediaFormat_MediaTypeAndFormat : public ::google::protobuf::Message {
 public:
  IndNetMPTerRecvMediaFormat_MediaTypeAndFormat();
  virtual ~IndNetMPTerRecvMediaFormat_MediaTypeAndFormat();

  IndNetMPTerRecvMediaFormat_MediaTypeAndFormat(const IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& from);

  inline IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& operator=(const IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& default_instance();

  void Swap(IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* other);

  // implements Message ----------------------------------------------

  IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& from);
  void MergeFrom(const IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 audiofmt = 1;
  inline bool has_audiofmt() const;
  inline void clear_audiofmt();
  static const int kAudiofmtFieldNumber = 1;
  inline ::google::protobuf::uint32 audiofmt() const;
  inline void set_audiofmt(::google::protobuf::uint32 value);

  // optional uint32 audiofrequency = 2;
  inline bool has_audiofrequency() const;
  inline void clear_audiofrequency();
  static const int kAudiofrequencyFieldNumber = 2;
  inline ::google::protobuf::uint32 audiofrequency() const;
  inline void set_audiofrequency(::google::protobuf::uint32 value);

  // optional uint32 audiochannelnum = 3;
  inline bool has_audiochannelnum() const;
  inline void clear_audiochannelnum();
  static const int kAudiochannelnumFieldNumber = 3;
  inline ::google::protobuf::uint32 audiochannelnum() const;
  inline void set_audiochannelnum(::google::protobuf::uint32 value);

  // optional uint32 audioframelen = 4;
  inline bool has_audioframelen() const;
  inline void clear_audioframelen();
  static const int kAudioframelenFieldNumber = 4;
  inline ::google::protobuf::uint32 audioframelen() const;
  inline void set_audioframelen(::google::protobuf::uint32 value);

  // optional uint32 audiopt = 5;
  inline bool has_audiopt() const;
  inline void clear_audiopt();
  static const int kAudioptFieldNumber = 5;
  inline ::google::protobuf::uint32 audiopt() const;
  inline void set_audiopt(::google::protobuf::uint32 value);

  // optional uint32 videofmt = 6;
  inline bool has_videofmt() const;
  inline void clear_videofmt();
  static const int kVideofmtFieldNumber = 6;
  inline ::google::protobuf::uint32 videofmt() const;
  inline void set_videofmt(::google::protobuf::uint32 value);

  // optional uint32 videopt = 7;
  inline bool has_videopt() const;
  inline void clear_videopt();
  static const int kVideoptFieldNumber = 7;
  inline ::google::protobuf::uint32 videopt() const;
  inline void set_videopt(::google::protobuf::uint32 value);

  // optional uint32 duovideofmt = 8;
  inline bool has_duovideofmt() const;
  inline void clear_duovideofmt();
  static const int kDuovideofmtFieldNumber = 8;
  inline ::google::protobuf::uint32 duovideofmt() const;
  inline void set_duovideofmt(::google::protobuf::uint32 value);

  // optional uint32 duovideopt = 9;
  inline bool has_duovideopt() const;
  inline void clear_duovideopt();
  static const int kDuovideoptFieldNumber = 9;
  inline ::google::protobuf::uint32 duovideopt() const;
  inline void set_duovideopt(::google::protobuf::uint32 value);

  // optional uint32 videobandwidth = 10;
  inline bool has_videobandwidth() const;
  inline void clear_videobandwidth();
  static const int kVideobandwidthFieldNumber = 10;
  inline ::google::protobuf::uint32 videobandwidth() const;
  inline void set_videobandwidth(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat)
 private:
  inline void set_has_audiofmt();
  inline void clear_has_audiofmt();
  inline void set_has_audiofrequency();
  inline void clear_has_audiofrequency();
  inline void set_has_audiochannelnum();
  inline void clear_has_audiochannelnum();
  inline void set_has_audioframelen();
  inline void clear_has_audioframelen();
  inline void set_has_audiopt();
  inline void clear_has_audiopt();
  inline void set_has_videofmt();
  inline void clear_has_videofmt();
  inline void set_has_videopt();
  inline void clear_has_videopt();
  inline void set_has_duovideofmt();
  inline void clear_has_duovideofmt();
  inline void set_has_duovideopt();
  inline void clear_has_duovideopt();
  inline void set_has_videobandwidth();
  inline void clear_has_videobandwidth();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 audiofmt_;
  ::google::protobuf::uint32 audiofrequency_;
  ::google::protobuf::uint32 audiochannelnum_;
  ::google::protobuf::uint32 audioframelen_;
  ::google::protobuf::uint32 audiopt_;
  ::google::protobuf::uint32 videofmt_;
  ::google::protobuf::uint32 videopt_;
  ::google::protobuf::uint32 duovideofmt_;
  ::google::protobuf::uint32 duovideopt_;
  ::google::protobuf::uint32 videobandwidth_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerRecvMediaFormat : public ::google::protobuf::Message {
 public:
  IndNetMPTerRecvMediaFormat();
  virtual ~IndNetMPTerRecvMediaFormat();

  IndNetMPTerRecvMediaFormat(const IndNetMPTerRecvMediaFormat& from);

  inline IndNetMPTerRecvMediaFormat& operator=(const IndNetMPTerRecvMediaFormat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerRecvMediaFormat& default_instance();

  void Swap(IndNetMPTerRecvMediaFormat* other);

  // implements Message ----------------------------------------------

  IndNetMPTerRecvMediaFormat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerRecvMediaFormat& from);
  void MergeFrom(const IndNetMPTerRecvMediaFormat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndNetMPTerRecvMediaFormat_MediaTypeAndFormat MediaTypeAndFormat;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat recvmediaformat = 6;
  inline bool has_recvmediaformat() const;
  inline void clear_recvmediaformat();
  static const int kRecvmediaformatFieldNumber = 6;
  inline const ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& recvmediaformat() const;
  inline ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* mutable_recvmediaformat();
  inline ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* release_recvmediaformat();
  inline void set_allocated_recvmediaformat(::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* recvmediaformat);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerRecvMediaFormat)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_recvmediaformat();
  inline void clear_has_recvmediaformat();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* recvmediaformat_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerRecvMediaFormat* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerAssistVideoOn : public ::google::protobuf::Message {
 public:
  IndNetMPTerAssistVideoOn();
  virtual ~IndNetMPTerAssistVideoOn();

  IndNetMPTerAssistVideoOn(const IndNetMPTerAssistVideoOn& from);

  inline IndNetMPTerAssistVideoOn& operator=(const IndNetMPTerAssistVideoOn& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerAssistVideoOn& default_instance();

  void Swap(IndNetMPTerAssistVideoOn* other);

  // implements Message ----------------------------------------------

  IndNetMPTerAssistVideoOn* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerAssistVideoOn& from);
  void MergeFrom(const IndNetMPTerAssistVideoOn& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 duoVideoid = 4;
  inline bool has_duovideoid() const;
  inline void clear_duovideoid();
  static const int kDuoVideoidFieldNumber = 4;
  inline ::google::protobuf::uint32 duovideoid() const;
  inline void set_duovideoid(::google::protobuf::uint32 value);

  // optional uint32 avtype = 5;
  inline bool has_avtype() const;
  inline void clear_avtype();
  static const int kAvtypeFieldNumber = 5;
  inline ::google::protobuf::uint32 avtype() const;
  inline void set_avtype(::google::protobuf::uint32 value);

  // optional uint32 sharedaudio = 6;
  inline bool has_sharedaudio() const;
  inline void clear_sharedaudio();
  static const int kSharedaudioFieldNumber = 6;
  inline ::google::protobuf::uint32 sharedaudio() const;
  inline void set_sharedaudio(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerAssistVideoOn)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_duovideoid();
  inline void clear_has_duovideoid();
  inline void set_has_avtype();
  inline void clear_has_avtype();
  inline void set_has_sharedaudio();
  inline void clear_has_sharedaudio();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 duovideoid_;
  ::google::protobuf::uint32 avtype_;
  ::google::protobuf::uint32 sharedaudio_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerAssistVideoOn* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPTerAssistVideoOff : public ::google::protobuf::Message {
 public:
  IndNetMPTerAssistVideoOff();
  virtual ~IndNetMPTerAssistVideoOff();

  IndNetMPTerAssistVideoOff(const IndNetMPTerAssistVideoOff& from);

  inline IndNetMPTerAssistVideoOff& operator=(const IndNetMPTerAssistVideoOff& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPTerAssistVideoOff& default_instance();

  void Swap(IndNetMPTerAssistVideoOff* other);

  // implements Message ----------------------------------------------

  IndNetMPTerAssistVideoOff* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPTerAssistVideoOff& from);
  void MergeFrom(const IndNetMPTerAssistVideoOff& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 duoVideoid = 4;
  inline bool has_duovideoid() const;
  inline void clear_duovideoid();
  static const int kDuoVideoidFieldNumber = 4;
  inline ::google::protobuf::uint32 duovideoid() const;
  inline void set_duovideoid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPTerAssistVideoOff)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_duovideoid();
  inline void clear_has_duovideoid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 duovideoid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPTerAssistVideoOff* default_instance_;
};
// -------------------------------------------------------------------

class CmdNetMPTerVideoSelect_TerVideoSend : public ::google::protobuf::Message {
 public:
  CmdNetMPTerVideoSelect_TerVideoSend();
  virtual ~CmdNetMPTerVideoSelect_TerVideoSend();

  CmdNetMPTerVideoSelect_TerVideoSend(const CmdNetMPTerVideoSelect_TerVideoSend& from);

  inline CmdNetMPTerVideoSelect_TerVideoSend& operator=(const CmdNetMPTerVideoSelect_TerVideoSend& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdNetMPTerVideoSelect_TerVideoSend& default_instance();

  void Swap(CmdNetMPTerVideoSelect_TerVideoSend* other);

  // implements Message ----------------------------------------------

  CmdNetMPTerVideoSelect_TerVideoSend* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdNetMPTerVideoSelect_TerVideoSend& from);
  void MergeFrom(const CmdNetMPTerVideoSelect_TerVideoSend& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 2;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 2;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 videosize = 3;
  inline bool has_videosize() const;
  inline void clear_videosize();
  static const int kVideosizeFieldNumber = 3;
  inline ::google::protobuf::uint32 videosize() const;
  inline void set_videosize(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 4;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 5;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 5;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 delayopt = 6;
  inline bool has_delayopt() const;
  inline void clear_delayopt();
  static const int kDelayoptFieldNumber = 6;
  inline ::google::protobuf::uint32 delayopt() const;
  inline void set_delayopt(::google::protobuf::uint32 value);

  // optional uint32 replaceterid = 7;
  inline bool has_replaceterid() const;
  inline void clear_replaceterid();
  static const int kReplaceteridFieldNumber = 7;
  inline ::google::protobuf::uint32 replaceterid() const;
  inline void set_replaceterid(::google::protobuf::uint32 value);

  // optional uint32 recvfps = 8;
  inline bool has_recvfps() const;
  inline void clear_recvfps();
  static const int kRecvfpsFieldNumber = 8;
  inline ::google::protobuf::uint32 recvfps() const;
  inline void set_recvfps(::google::protobuf::uint32 value);

  // optional uint32 replacescreenid = 9;
  inline bool has_replacescreenid() const;
  inline void clear_replacescreenid();
  static const int kReplacescreenidFieldNumber = 9;
  inline ::google::protobuf::uint32 replacescreenid() const;
  inline void set_replacescreenid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_videosize();
  inline void clear_has_videosize();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_delayopt();
  inline void clear_has_delayopt();
  inline void set_has_replaceterid();
  inline void clear_has_replaceterid();
  inline void set_has_recvfps();
  inline void clear_has_recvfps();
  inline void set_has_replacescreenid();
  inline void clear_has_replacescreenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 videosize_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::uint32 delayopt_;
  ::google::protobuf::uint32 replaceterid_;
  ::google::protobuf::uint32 recvfps_;
  ::google::protobuf::uint32 replacescreenid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static CmdNetMPTerVideoSelect_TerVideoSend* default_instance_;
};
// -------------------------------------------------------------------

class CmdNetMPTerVideoSelect : public ::google::protobuf::Message {
 public:
  CmdNetMPTerVideoSelect();
  virtual ~CmdNetMPTerVideoSelect();

  CmdNetMPTerVideoSelect(const CmdNetMPTerVideoSelect& from);

  inline CmdNetMPTerVideoSelect& operator=(const CmdNetMPTerVideoSelect& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdNetMPTerVideoSelect& default_instance();

  void Swap(CmdNetMPTerVideoSelect* other);

  // implements Message ----------------------------------------------

  CmdNetMPTerVideoSelect* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdNetMPTerVideoSelect& from);
  void MergeFrom(const CmdNetMPTerVideoSelect& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef CmdNetMPTerVideoSelect_TerVideoSend TerVideoSend;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 6;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 6;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend tervideoneed = 7;
  inline int tervideoneed_size() const;
  inline void clear_tervideoneed();
  static const int kTervideoneedFieldNumber = 7;
  inline const ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend& tervideoneed(int index) const;
  inline ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend* mutable_tervideoneed(int index);
  inline ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend* add_tervideoneed();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend >&
      tervideoneed() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend >*
      mutable_tervideoneed();

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdNetMPTerVideoSelect)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend > tervideoneed_;
  ::google::protobuf::uint32 relatednetmpid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static CmdNetMPTerVideoSelect* default_instance_;
};
// -------------------------------------------------------------------

class CmdNetMPTerSelectAssistVideo : public ::google::protobuf::Message {
 public:
  CmdNetMPTerSelectAssistVideo();
  virtual ~CmdNetMPTerSelectAssistVideo();

  CmdNetMPTerSelectAssistVideo(const CmdNetMPTerSelectAssistVideo& from);

  inline CmdNetMPTerSelectAssistVideo& operator=(const CmdNetMPTerSelectAssistVideo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdNetMPTerSelectAssistVideo& default_instance();

  void Swap(CmdNetMPTerSelectAssistVideo* other);

  // implements Message ----------------------------------------------

  CmdNetMPTerSelectAssistVideo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdNetMPTerSelectAssistVideo& from);
  void MergeFrom(const CmdNetMPTerSelectAssistVideo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 terid = 4;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 4;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 5;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 5;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 6;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 6;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 needvideofmt = 7;
  inline bool has_needvideofmt() const;
  inline void clear_needvideofmt();
  static const int kNeedvideofmtFieldNumber = 7;
  inline ::google::protobuf::uint32 needvideofmt() const;
  inline void set_needvideofmt(::google::protobuf::uint32 value);

  // optional uint32 needvideosize = 8;
  inline bool has_needvideosize() const;
  inline void clear_needvideosize();
  static const int kNeedvideosizeFieldNumber = 8;
  inline ::google::protobuf::uint32 needvideosize() const;
  inline void set_needvideosize(::google::protobuf::uint32 value);

  // optional uint32 beselterid = 9;
  inline bool has_beselterid() const;
  inline void clear_beselterid();
  static const int kBeselteridFieldNumber = 9;
  inline ::google::protobuf::uint32 beselterid() const;
  inline void set_beselterid(::google::protobuf::uint32 value);

  // optional uint32 beselchannelid = 10;
  inline bool has_beselchannelid() const;
  inline void clear_beselchannelid();
  static const int kBeselchannelidFieldNumber = 10;
  inline ::google::protobuf::uint32 beselchannelid() const;
  inline void set_beselchannelid(::google::protobuf::uint32 value);

  // optional uint32 beselrelatednetmpid = 11;
  inline bool has_beselrelatednetmpid() const;
  inline void clear_beselrelatednetmpid();
  static const int kBeselrelatednetmpidFieldNumber = 11;
  inline ::google::protobuf::uint32 beselrelatednetmpid() const;
  inline void set_beselrelatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 beselscreenid = 12;
  inline bool has_beselscreenid() const;
  inline void clear_beselscreenid();
  static const int kBeselscreenidFieldNumber = 12;
  inline ::google::protobuf::uint32 beselscreenid() const;
  inline void set_beselscreenid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdNetMPTerSelectAssistVideo)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_needvideofmt();
  inline void clear_has_needvideofmt();
  inline void set_has_needvideosize();
  inline void clear_has_needvideosize();
  inline void set_has_beselterid();
  inline void clear_has_beselterid();
  inline void set_has_beselchannelid();
  inline void clear_has_beselchannelid();
  inline void set_has_beselrelatednetmpid();
  inline void clear_has_beselrelatednetmpid();
  inline void set_has_beselscreenid();
  inline void clear_has_beselscreenid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 needvideofmt_;
  ::google::protobuf::uint32 needvideosize_;
  ::google::protobuf::uint32 beselterid_;
  ::google::protobuf::uint32 beselchannelid_;
  ::google::protobuf::uint32 beselrelatednetmpid_;
  ::google::protobuf::uint32 beselscreenid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static CmdNetMPTerSelectAssistVideo* default_instance_;
};
// -------------------------------------------------------------------

class CmdNetMPConfDestroy : public ::google::protobuf::Message {
 public:
  CmdNetMPConfDestroy();
  virtual ~CmdNetMPConfDestroy();

  CmdNetMPConfDestroy(const CmdNetMPConfDestroy& from);

  inline CmdNetMPConfDestroy& operator=(const CmdNetMPConfDestroy& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CmdNetMPConfDestroy& default_instance();

  void Swap(CmdNetMPConfDestroy* other);

  // implements Message ----------------------------------------------

  CmdNetMPConfDestroy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CmdNetMPConfDestroy& from);
  void MergeFrom(const CmdNetMPConfDestroy& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional string reason = 4;
  inline bool has_reason() const;
  inline void clear_reason();
  static const int kReasonFieldNumber = 4;
  inline const ::std::string& reason() const;
  inline void set_reason(const ::std::string& value);
  inline void set_reason(const char* value);
  inline void set_reason(const char* value, size_t size);
  inline ::std::string* mutable_reason();
  inline ::std::string* release_reason();
  inline void set_allocated_reason(::std::string* reason);

  // @@protoc_insertion_point(class_scope:SRMsgs.CmdNetMPConfDestroy)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_reason();
  inline void clear_has_reason();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::std::string* reason_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static CmdNetMPConfDestroy* default_instance_;
};
// -------------------------------------------------------------------

class IndNetMPHeartBeatOfMC : public ::google::protobuf::Message {
 public:
  IndNetMPHeartBeatOfMC();
  virtual ~IndNetMPHeartBeatOfMC();

  IndNetMPHeartBeatOfMC(const IndNetMPHeartBeatOfMC& from);

  inline IndNetMPHeartBeatOfMC& operator=(const IndNetMPHeartBeatOfMC& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndNetMPHeartBeatOfMC& default_instance();

  void Swap(IndNetMPHeartBeatOfMC* other);

  // implements Message ----------------------------------------------

  IndNetMPHeartBeatOfMC* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndNetMPHeartBeatOfMC& from);
  void MergeFrom(const IndNetMPHeartBeatOfMC& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 2;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndNetMPHeartBeatOfMC)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndNetMPHeartBeatOfMC* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllNetMPs_TersInNetMP : public ::google::protobuf::Message {
 public:
  IndConfAllNetMPs_TersInNetMP();
  virtual ~IndConfAllNetMPs_TersInNetMP();

  IndConfAllNetMPs_TersInNetMP(const IndConfAllNetMPs_TersInNetMP& from);

  inline IndConfAllNetMPs_TersInNetMP& operator=(const IndConfAllNetMPs_TersInNetMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllNetMPs_TersInNetMP& default_instance();

  void Swap(IndConfAllNetMPs_TersInNetMP* other);

  // implements Message ----------------------------------------------

  IndConfAllNetMPs_TersInNetMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllNetMPs_TersInNetMP& from);
  void MergeFrom(const IndConfAllNetMPs_TersInNetMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // optional uint32 channelid = 2;
  inline bool has_channelid() const;
  inline void clear_channelid();
  static const int kChannelidFieldNumber = 2;
  inline ::google::protobuf::uint32 channelid() const;
  inline void set_channelid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllNetMPs.TersInNetMP)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_channelid();
  inline void clear_has_channelid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 channelid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllNetMPs_TersInNetMP* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllNetMPs_NetMPsInConf : public ::google::protobuf::Message {
 public:
  IndConfAllNetMPs_NetMPsInConf();
  virtual ~IndConfAllNetMPs_NetMPsInConf();

  IndConfAllNetMPs_NetMPsInConf(const IndConfAllNetMPs_NetMPsInConf& from);

  inline IndConfAllNetMPs_NetMPsInConf& operator=(const IndConfAllNetMPs_NetMPsInConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllNetMPs_NetMPsInConf& default_instance();

  void Swap(IndConfAllNetMPs_NetMPsInConf* other);

  // implements Message ----------------------------------------------

  IndConfAllNetMPs_NetMPsInConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllNetMPs_NetMPsInConf& from);
  void MergeFrom(const IndConfAllNetMPs_NetMPsInConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 netmpid = 1;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 1;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional string netmpip = 2;
  inline bool has_netmpip() const;
  inline void clear_netmpip();
  static const int kNetmpipFieldNumber = 2;
  inline const ::std::string& netmpip() const;
  inline void set_netmpip(const ::std::string& value);
  inline void set_netmpip(const char* value);
  inline void set_netmpip(const char* value, size_t size);
  inline ::std::string* mutable_netmpip();
  inline ::std::string* release_netmpip();
  inline void set_allocated_netmpip(::std::string* netmpip);

  // repeated .SRMsgs.IndConfAllNetMPs.TersInNetMP terids = 3;
  inline int terids_size() const;
  inline void clear_terids();
  static const int kTeridsFieldNumber = 3;
  inline const ::SRMsgs::IndConfAllNetMPs_TersInNetMP& terids(int index) const;
  inline ::SRMsgs::IndConfAllNetMPs_TersInNetMP* mutable_terids(int index);
  inline ::SRMsgs::IndConfAllNetMPs_TersInNetMP* add_terids();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_TersInNetMP >&
      terids() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_TersInNetMP >*
      mutable_terids();

  // optional uint32 audiodatarecvport = 4;
  inline bool has_audiodatarecvport() const;
  inline void clear_audiodatarecvport();
  static const int kAudiodatarecvportFieldNumber = 4;
  inline ::google::protobuf::uint32 audiodatarecvport() const;
  inline void set_audiodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 audioctrlrecvport = 5;
  inline bool has_audioctrlrecvport() const;
  inline void clear_audioctrlrecvport();
  static const int kAudioctrlrecvportFieldNumber = 5;
  inline ::google::protobuf::uint32 audioctrlrecvport() const;
  inline void set_audioctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 videodatarecvport = 6;
  inline bool has_videodatarecvport() const;
  inline void clear_videodatarecvport();
  static const int kVideodatarecvportFieldNumber = 6;
  inline ::google::protobuf::uint32 videodatarecvport() const;
  inline void set_videodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 videoctrlrecvport = 7;
  inline bool has_videoctrlrecvport() const;
  inline void clear_videoctrlrecvport();
  static const int kVideoctrlrecvportFieldNumber = 7;
  inline ::google::protobuf::uint32 videoctrlrecvport() const;
  inline void set_videoctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video2datarecvport = 8;
  inline bool has_video2datarecvport() const;
  inline void clear_video2datarecvport();
  static const int kVideo2DatarecvportFieldNumber = 8;
  inline ::google::protobuf::uint32 video2datarecvport() const;
  inline void set_video2datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video2ctrlrecvport = 9;
  inline bool has_video2ctrlrecvport() const;
  inline void clear_video2ctrlrecvport();
  static const int kVideo2CtrlrecvportFieldNumber = 9;
  inline ::google::protobuf::uint32 video2ctrlrecvport() const;
  inline void set_video2ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video3datarecvport = 10;
  inline bool has_video3datarecvport() const;
  inline void clear_video3datarecvport();
  static const int kVideo3DatarecvportFieldNumber = 10;
  inline ::google::protobuf::uint32 video3datarecvport() const;
  inline void set_video3datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video3ctrlrecvport = 11;
  inline bool has_video3ctrlrecvport() const;
  inline void clear_video3ctrlrecvport();
  static const int kVideo3CtrlrecvportFieldNumber = 11;
  inline ::google::protobuf::uint32 video3ctrlrecvport() const;
  inline void set_video3ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopdatarecvport = 12;
  inline bool has_desktopdatarecvport() const;
  inline void clear_desktopdatarecvport();
  static const int kDesktopdatarecvportFieldNumber = 12;
  inline ::google::protobuf::uint32 desktopdatarecvport() const;
  inline void set_desktopdatarecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopctrlrecvport = 13;
  inline bool has_desktopctrlrecvport() const;
  inline void clear_desktopctrlrecvport();
  static const int kDesktopctrlrecvportFieldNumber = 13;
  inline ::google::protobuf::uint32 desktopctrlrecvport() const;
  inline void set_desktopctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 netmpno = 14;
  inline bool has_netmpno() const;
  inline void clear_netmpno();
  static const int kNetmpnoFieldNumber = 14;
  inline ::google::protobuf::uint32 netmpno() const;
  inline void set_netmpno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllNetMPs.NetMPsInConf)
 private:
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_netmpip();
  inline void clear_has_netmpip();
  inline void set_has_audiodatarecvport();
  inline void clear_has_audiodatarecvport();
  inline void set_has_audioctrlrecvport();
  inline void clear_has_audioctrlrecvport();
  inline void set_has_videodatarecvport();
  inline void clear_has_videodatarecvport();
  inline void set_has_videoctrlrecvport();
  inline void clear_has_videoctrlrecvport();
  inline void set_has_video2datarecvport();
  inline void clear_has_video2datarecvport();
  inline void set_has_video2ctrlrecvport();
  inline void clear_has_video2ctrlrecvport();
  inline void set_has_video3datarecvport();
  inline void clear_has_video3datarecvport();
  inline void set_has_video3ctrlrecvport();
  inline void clear_has_video3ctrlrecvport();
  inline void set_has_desktopdatarecvport();
  inline void clear_has_desktopdatarecvport();
  inline void set_has_desktopctrlrecvport();
  inline void clear_has_desktopctrlrecvport();
  inline void set_has_netmpno();
  inline void clear_has_netmpno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* netmpip_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 audiodatarecvport_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_TersInNetMP > terids_;
  ::google::protobuf::uint32 audioctrlrecvport_;
  ::google::protobuf::uint32 videodatarecvport_;
  ::google::protobuf::uint32 videoctrlrecvport_;
  ::google::protobuf::uint32 video2datarecvport_;
  ::google::protobuf::uint32 video2ctrlrecvport_;
  ::google::protobuf::uint32 video3datarecvport_;
  ::google::protobuf::uint32 video3ctrlrecvport_;
  ::google::protobuf::uint32 desktopdatarecvport_;
  ::google::protobuf::uint32 desktopctrlrecvport_;
  ::google::protobuf::uint32 netmpno_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllNetMPs_NetMPsInConf* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllNetMPs : public ::google::protobuf::Message {
 public:
  IndConfAllNetMPs();
  virtual ~IndConfAllNetMPs();

  IndConfAllNetMPs(const IndConfAllNetMPs& from);

  inline IndConfAllNetMPs& operator=(const IndConfAllNetMPs& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllNetMPs& default_instance();

  void Swap(IndConfAllNetMPs* other);

  // implements Message ----------------------------------------------

  IndConfAllNetMPs* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllNetMPs& from);
  void MergeFrom(const IndConfAllNetMPs& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndConfAllNetMPs_TersInNetMP TersInNetMP;
  typedef IndConfAllNetMPs_NetMPsInConf NetMPsInConf;

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 2;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint64 confid = 3;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 3;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // repeated .SRMsgs.IndConfAllNetMPs.NetMPsInConf netmps = 4;
  inline int netmps_size() const;
  inline void clear_netmps();
  static const int kNetmpsFieldNumber = 4;
  inline const ::SRMsgs::IndConfAllNetMPs_NetMPsInConf& netmps(int index) const;
  inline ::SRMsgs::IndConfAllNetMPs_NetMPsInConf* mutable_netmps(int index);
  inline ::SRMsgs::IndConfAllNetMPs_NetMPsInConf* add_netmps();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_NetMPsInConf >&
      netmps() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_NetMPsInConf >*
      mutable_netmps();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllNetMPs)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_confid();
  inline void clear_has_confid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_NetMPsInConf > netmps_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllNetMPs* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAddNewNetMP : public ::google::protobuf::Message {
 public:
  IndConfAddNewNetMP();
  virtual ~IndConfAddNewNetMP();

  IndConfAddNewNetMP(const IndConfAddNewNetMP& from);

  inline IndConfAddNewNetMP& operator=(const IndConfAddNewNetMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAddNewNetMP& default_instance();

  void Swap(IndConfAddNewNetMP* other);

  // implements Message ----------------------------------------------

  IndConfAddNewNetMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAddNewNetMP& from);
  void MergeFrom(const IndConfAddNewNetMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 2;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint64 confid = 3;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 3;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 newnetmpid = 4;
  inline bool has_newnetmpid() const;
  inline void clear_newnetmpid();
  static const int kNewnetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 newnetmpid() const;
  inline void set_newnetmpid(::google::protobuf::uint32 value);

  // optional string newnetmpip = 5;
  inline bool has_newnetmpip() const;
  inline void clear_newnetmpip();
  static const int kNewnetmpipFieldNumber = 5;
  inline const ::std::string& newnetmpip() const;
  inline void set_newnetmpip(const ::std::string& value);
  inline void set_newnetmpip(const char* value);
  inline void set_newnetmpip(const char* value, size_t size);
  inline ::std::string* mutable_newnetmpip();
  inline ::std::string* release_newnetmpip();
  inline void set_allocated_newnetmpip(::std::string* newnetmpip);

  // optional uint32 audiodatarecvport = 6;
  inline bool has_audiodatarecvport() const;
  inline void clear_audiodatarecvport();
  static const int kAudiodatarecvportFieldNumber = 6;
  inline ::google::protobuf::uint32 audiodatarecvport() const;
  inline void set_audiodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 audioctrlrecvport = 7;
  inline bool has_audioctrlrecvport() const;
  inline void clear_audioctrlrecvport();
  static const int kAudioctrlrecvportFieldNumber = 7;
  inline ::google::protobuf::uint32 audioctrlrecvport() const;
  inline void set_audioctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 videodatarecvport = 8;
  inline bool has_videodatarecvport() const;
  inline void clear_videodatarecvport();
  static const int kVideodatarecvportFieldNumber = 8;
  inline ::google::protobuf::uint32 videodatarecvport() const;
  inline void set_videodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 videoctrlrecvport = 9;
  inline bool has_videoctrlrecvport() const;
  inline void clear_videoctrlrecvport();
  static const int kVideoctrlrecvportFieldNumber = 9;
  inline ::google::protobuf::uint32 videoctrlrecvport() const;
  inline void set_videoctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video2datarecvport = 10;
  inline bool has_video2datarecvport() const;
  inline void clear_video2datarecvport();
  static const int kVideo2DatarecvportFieldNumber = 10;
  inline ::google::protobuf::uint32 video2datarecvport() const;
  inline void set_video2datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video2ctrlrecvport = 11;
  inline bool has_video2ctrlrecvport() const;
  inline void clear_video2ctrlrecvport();
  static const int kVideo2CtrlrecvportFieldNumber = 11;
  inline ::google::protobuf::uint32 video2ctrlrecvport() const;
  inline void set_video2ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video3datarecvport = 12;
  inline bool has_video3datarecvport() const;
  inline void clear_video3datarecvport();
  static const int kVideo3DatarecvportFieldNumber = 12;
  inline ::google::protobuf::uint32 video3datarecvport() const;
  inline void set_video3datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video3ctrlrecvport = 13;
  inline bool has_video3ctrlrecvport() const;
  inline void clear_video3ctrlrecvport();
  static const int kVideo3CtrlrecvportFieldNumber = 13;
  inline ::google::protobuf::uint32 video3ctrlrecvport() const;
  inline void set_video3ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopdatarecvport = 14;
  inline bool has_desktopdatarecvport() const;
  inline void clear_desktopdatarecvport();
  static const int kDesktopdatarecvportFieldNumber = 14;
  inline ::google::protobuf::uint32 desktopdatarecvport() const;
  inline void set_desktopdatarecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopctrlrecvport = 15;
  inline bool has_desktopctrlrecvport() const;
  inline void clear_desktopctrlrecvport();
  static const int kDesktopctrlrecvportFieldNumber = 15;
  inline ::google::protobuf::uint32 desktopctrlrecvport() const;
  inline void set_desktopctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 newnetmpno = 16;
  inline bool has_newnetmpno() const;
  inline void clear_newnetmpno();
  static const int kNewnetmpnoFieldNumber = 16;
  inline ::google::protobuf::uint32 newnetmpno() const;
  inline void set_newnetmpno(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAddNewNetMP)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_newnetmpid();
  inline void clear_has_newnetmpid();
  inline void set_has_newnetmpip();
  inline void clear_has_newnetmpip();
  inline void set_has_audiodatarecvport();
  inline void clear_has_audiodatarecvport();
  inline void set_has_audioctrlrecvport();
  inline void clear_has_audioctrlrecvport();
  inline void set_has_videodatarecvport();
  inline void clear_has_videodatarecvport();
  inline void set_has_videoctrlrecvport();
  inline void clear_has_videoctrlrecvport();
  inline void set_has_video2datarecvport();
  inline void clear_has_video2datarecvport();
  inline void set_has_video2ctrlrecvport();
  inline void clear_has_video2ctrlrecvport();
  inline void set_has_video3datarecvport();
  inline void clear_has_video3datarecvport();
  inline void set_has_video3ctrlrecvport();
  inline void clear_has_video3ctrlrecvport();
  inline void set_has_desktopdatarecvport();
  inline void clear_has_desktopdatarecvport();
  inline void set_has_desktopctrlrecvport();
  inline void clear_has_desktopctrlrecvport();
  inline void set_has_newnetmpno();
  inline void clear_has_newnetmpno();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint64 confid_;
  ::std::string* newnetmpip_;
  ::google::protobuf::uint32 newnetmpid_;
  ::google::protobuf::uint32 audiodatarecvport_;
  ::google::protobuf::uint32 audioctrlrecvport_;
  ::google::protobuf::uint32 videodatarecvport_;
  ::google::protobuf::uint32 videoctrlrecvport_;
  ::google::protobuf::uint32 video2datarecvport_;
  ::google::protobuf::uint32 video2ctrlrecvport_;
  ::google::protobuf::uint32 video3datarecvport_;
  ::google::protobuf::uint32 video3ctrlrecvport_;
  ::google::protobuf::uint32 desktopdatarecvport_;
  ::google::protobuf::uint32 desktopctrlrecvport_;
  ::google::protobuf::uint32 newnetmpno_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAddNewNetMP* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllMPIInfoToNetMp_ScreensInMPI : public ::google::protobuf::Message {
 public:
  IndConfAllMPIInfoToNetMp_ScreensInMPI();
  virtual ~IndConfAllMPIInfoToNetMp_ScreensInMPI();

  IndConfAllMPIInfoToNetMp_ScreensInMPI(const IndConfAllMPIInfoToNetMp_ScreensInMPI& from);

  inline IndConfAllMPIInfoToNetMp_ScreensInMPI& operator=(const IndConfAllMPIInfoToNetMp_ScreensInMPI& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllMPIInfoToNetMp_ScreensInMPI& default_instance();

  void Swap(IndConfAllMPIInfoToNetMp_ScreensInMPI* other);

  // implements Message ----------------------------------------------

  IndConfAllMPIInfoToNetMp_ScreensInMPI* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllMPIInfoToNetMp_ScreensInMPI& from);
  void MergeFrom(const IndConfAllMPIInfoToNetMp_ScreensInMPI& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 screenid = 1;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 1;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 screentype = 2;
  inline bool has_screentype() const;
  inline void clear_screentype();
  static const int kScreentypeFieldNumber = 2;
  inline ::google::protobuf::uint32 screentype() const;
  inline void set_screentype(::google::protobuf::uint32 value);

  // optional uint32 relatedterid = 3;
  inline bool has_relatedterid() const;
  inline void clear_relatedterid();
  static const int kRelatedteridFieldNumber = 3;
  inline ::google::protobuf::uint32 relatedterid() const;
  inline void set_relatedterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI)
 private:
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_screentype();
  inline void clear_has_screentype();
  inline void set_has_relatedterid();
  inline void clear_has_relatedterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::uint32 screentype_;
  ::google::protobuf::uint32 relatedterid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllMPIInfoToNetMp_ScreensInMPI* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllMPIInfoToNetMp_MPIsInConf : public ::google::protobuf::Message {
 public:
  IndConfAllMPIInfoToNetMp_MPIsInConf();
  virtual ~IndConfAllMPIInfoToNetMp_MPIsInConf();

  IndConfAllMPIInfoToNetMp_MPIsInConf(const IndConfAllMPIInfoToNetMp_MPIsInConf& from);

  inline IndConfAllMPIInfoToNetMp_MPIsInConf& operator=(const IndConfAllMPIInfoToNetMp_MPIsInConf& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllMPIInfoToNetMp_MPIsInConf& default_instance();

  void Swap(IndConfAllMPIInfoToNetMp_MPIsInConf* other);

  // implements Message ----------------------------------------------

  IndConfAllMPIInfoToNetMp_MPIsInConf* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllMPIInfoToNetMp_MPIsInConf& from);
  void MergeFrom(const IndConfAllMPIInfoToNetMp_MPIsInConf& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mpichannelid = 1;
  inline bool has_mpichannelid() const;
  inline void clear_mpichannelid();
  static const int kMpichannelidFieldNumber = 1;
  inline ::google::protobuf::uint32 mpichannelid() const;
  inline void set_mpichannelid(::google::protobuf::uint32 value);

  // optional uint32 relatedmpid = 2;
  inline bool has_relatedmpid() const;
  inline void clear_relatedmpid();
  static const int kRelatedmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 relatedmpid() const;
  inline void set_relatedmpid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 3;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI screens = 4;
  inline int screens_size() const;
  inline void clear_screens();
  static const int kScreensFieldNumber = 4;
  inline const ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI& screens(int index) const;
  inline ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI* mutable_screens(int index);
  inline ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI* add_screens();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI >&
      screens() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI >*
      mutable_screens();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf)
 private:
  inline void set_has_mpichannelid();
  inline void clear_has_mpichannelid();
  inline void set_has_relatedmpid();
  inline void clear_has_relatedmpid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mpichannelid_;
  ::google::protobuf::uint32 relatedmpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI > screens_;
  ::google::protobuf::uint32 relatednetmpid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllMPIInfoToNetMp_MPIsInConf* default_instance_;
};
// -------------------------------------------------------------------

class IndConfAllMPIInfoToNetMp : public ::google::protobuf::Message {
 public:
  IndConfAllMPIInfoToNetMp();
  virtual ~IndConfAllMPIInfoToNetMp();

  IndConfAllMPIInfoToNetMp(const IndConfAllMPIInfoToNetMp& from);

  inline IndConfAllMPIInfoToNetMp& operator=(const IndConfAllMPIInfoToNetMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfAllMPIInfoToNetMp& default_instance();

  void Swap(IndConfAllMPIInfoToNetMp* other);

  // implements Message ----------------------------------------------

  IndConfAllMPIInfoToNetMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfAllMPIInfoToNetMp& from);
  void MergeFrom(const IndConfAllMPIInfoToNetMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndConfAllMPIInfoToNetMp_ScreensInMPI ScreensInMPI;
  typedef IndConfAllMPIInfoToNetMp_MPIsInConf MPIsInConf;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf mpis = 4;
  inline int mpis_size() const;
  inline void clear_mpis();
  static const int kMpisFieldNumber = 4;
  inline const ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf& mpis(int index) const;
  inline ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf* mutable_mpis(int index);
  inline ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf* add_mpis();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf >&
      mpis() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf >*
      mutable_mpis();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfAllMPIInfoToNetMp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf > mpis_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfAllMPIInfoToNetMp* default_instance_;
};
// -------------------------------------------------------------------

class IndMPIChannelidToNetMp : public ::google::protobuf::Message {
 public:
  IndMPIChannelidToNetMp();
  virtual ~IndMPIChannelidToNetMp();

  IndMPIChannelidToNetMp(const IndMPIChannelidToNetMp& from);

  inline IndMPIChannelidToNetMp& operator=(const IndMPIChannelidToNetMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMPIChannelidToNetMp& default_instance();

  void Swap(IndMPIChannelidToNetMp* other);

  // implements Message ----------------------------------------------

  IndMPIChannelidToNetMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMPIChannelidToNetMp& from);
  void MergeFrom(const IndMPIChannelidToNetMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 4;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 relatedmpid = 5;
  inline bool has_relatedmpid() const;
  inline void clear_relatedmpid();
  static const int kRelatedmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 relatedmpid() const;
  inline void set_relatedmpid(::google::protobuf::uint32 value);

  // optional uint32 mpichannelid = 6;
  inline bool has_mpichannelid() const;
  inline void clear_mpichannelid();
  static const int kMpichannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 mpichannelid() const;
  inline void set_mpichannelid(::google::protobuf::uint32 value);

  // optional uint32 addordel = 7;
  inline bool has_addordel() const;
  inline void clear_addordel();
  static const int kAddordelFieldNumber = 7;
  inline ::google::protobuf::uint32 addordel() const;
  inline void set_addordel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMPIChannelidToNetMp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_relatedmpid();
  inline void clear_has_relatedmpid();
  inline void set_has_mpichannelid();
  inline void clear_has_mpichannelid();
  inline void set_has_addordel();
  inline void clear_has_addordel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 relatedmpid_;
  ::google::protobuf::uint32 mpichannelid_;
  ::google::protobuf::uint32 addordel_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndMPIChannelidToNetMp* default_instance_;
};
// -------------------------------------------------------------------

class IndConfScreenInfoInMP : public ::google::protobuf::Message {
 public:
  IndConfScreenInfoInMP();
  virtual ~IndConfScreenInfoInMP();

  IndConfScreenInfoInMP(const IndConfScreenInfoInMP& from);

  inline IndConfScreenInfoInMP& operator=(const IndConfScreenInfoInMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndConfScreenInfoInMP& default_instance();

  void Swap(IndConfScreenInfoInMP* other);

  // implements Message ----------------------------------------------

  IndConfScreenInfoInMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndConfScreenInfoInMP& from);
  void MergeFrom(const IndConfScreenInfoInMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 4;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 relatedmpid = 5;
  inline bool has_relatedmpid() const;
  inline void clear_relatedmpid();
  static const int kRelatedmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 relatedmpid() const;
  inline void set_relatedmpid(::google::protobuf::uint32 value);

  // optional uint32 relatedmpichannelid = 6;
  inline bool has_relatedmpichannelid() const;
  inline void clear_relatedmpichannelid();
  static const int kRelatedmpichannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 relatedmpichannelid() const;
  inline void set_relatedmpichannelid(::google::protobuf::uint32 value);

  // optional uint32 screenid = 7;
  inline bool has_screenid() const;
  inline void clear_screenid();
  static const int kScreenidFieldNumber = 7;
  inline ::google::protobuf::uint32 screenid() const;
  inline void set_screenid(::google::protobuf::uint32 value);

  // optional uint32 screentype = 8;
  inline bool has_screentype() const;
  inline void clear_screentype();
  static const int kScreentypeFieldNumber = 8;
  inline ::google::protobuf::uint32 screentype() const;
  inline void set_screentype(::google::protobuf::uint32 value);

  // optional uint32 addordel = 9;
  inline bool has_addordel() const;
  inline void clear_addordel();
  static const int kAddordelFieldNumber = 9;
  inline ::google::protobuf::uint32 addordel() const;
  inline void set_addordel(::google::protobuf::uint32 value);

  // optional uint32 relatedterid = 10;
  inline bool has_relatedterid() const;
  inline void clear_relatedterid();
  static const int kRelatedteridFieldNumber = 10;
  inline ::google::protobuf::uint32 relatedterid() const;
  inline void set_relatedterid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndConfScreenInfoInMP)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_relatedmpid();
  inline void clear_has_relatedmpid();
  inline void set_has_relatedmpichannelid();
  inline void clear_has_relatedmpichannelid();
  inline void set_has_screenid();
  inline void clear_has_screenid();
  inline void set_has_screentype();
  inline void clear_has_screentype();
  inline void set_has_addordel();
  inline void clear_has_addordel();
  inline void set_has_relatedterid();
  inline void clear_has_relatedterid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 relatedmpid_;
  ::google::protobuf::uint32 relatedmpichannelid_;
  ::google::protobuf::uint32 screenid_;
  ::google::protobuf::uint32 screentype_;
  ::google::protobuf::uint32 addordel_;
  ::google::protobuf::uint32 relatedterid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndConfScreenInfoInMP* default_instance_;
};
// -------------------------------------------------------------------

class IndUpdateMPIChannelInfoToNetMp : public ::google::protobuf::Message {
 public:
  IndUpdateMPIChannelInfoToNetMp();
  virtual ~IndUpdateMPIChannelInfoToNetMp();

  IndUpdateMPIChannelInfoToNetMp(const IndUpdateMPIChannelInfoToNetMp& from);

  inline IndUpdateMPIChannelInfoToNetMp& operator=(const IndUpdateMPIChannelInfoToNetMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndUpdateMPIChannelInfoToNetMp& default_instance();

  void Swap(IndUpdateMPIChannelInfoToNetMp* other);

  // implements Message ----------------------------------------------

  IndUpdateMPIChannelInfoToNetMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndUpdateMPIChannelInfoToNetMp& from);
  void MergeFrom(const IndUpdateMPIChannelInfoToNetMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 mpichannelid = 4;
  inline bool has_mpichannelid() const;
  inline void clear_mpichannelid();
  static const int kMpichannelidFieldNumber = 4;
  inline ::google::protobuf::uint32 mpichannelid() const;
  inline void set_mpichannelid(::google::protobuf::uint32 value);

  // optional uint32 newrelatedmpid = 5;
  inline bool has_newrelatedmpid() const;
  inline void clear_newrelatedmpid();
  static const int kNewrelatedmpidFieldNumber = 5;
  inline ::google::protobuf::uint32 newrelatedmpid() const;
  inline void set_newrelatedmpid(::google::protobuf::uint32 value);

  // optional uint32 newrelatednetmpid = 6;
  inline bool has_newrelatednetmpid() const;
  inline void clear_newrelatednetmpid();
  static const int kNewrelatednetmpidFieldNumber = 6;
  inline ::google::protobuf::uint32 newrelatednetmpid() const;
  inline void set_newrelatednetmpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndUpdateMPIChannelInfoToNetMp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_mpichannelid();
  inline void clear_has_mpichannelid();
  inline void set_has_newrelatedmpid();
  inline void clear_has_newrelatedmpid();
  inline void set_has_newrelatednetmpid();
  inline void clear_has_newrelatednetmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 mpichannelid_;
  ::google::protobuf::uint32 newrelatedmpid_;
  ::google::protobuf::uint32 newrelatednetmpid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndUpdateMPIChannelInfoToNetMp* default_instance_;
};
// -------------------------------------------------------------------

class IndCRSChannelidToNetMp : public ::google::protobuf::Message {
 public:
  IndCRSChannelidToNetMp();
  virtual ~IndCRSChannelidToNetMp();

  IndCRSChannelidToNetMp(const IndCRSChannelidToNetMp& from);

  inline IndCRSChannelidToNetMp& operator=(const IndCRSChannelidToNetMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndCRSChannelidToNetMp& default_instance();

  void Swap(IndCRSChannelidToNetMp* other);

  // implements Message ----------------------------------------------

  IndCRSChannelidToNetMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndCRSChannelidToNetMp& from);
  void MergeFrom(const IndCRSChannelidToNetMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 4;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 crsid = 5;
  inline bool has_crsid() const;
  inline void clear_crsid();
  static const int kCrsidFieldNumber = 5;
  inline ::google::protobuf::uint32 crsid() const;
  inline void set_crsid(::google::protobuf::uint32 value);

  // optional uint32 crschannelid = 6;
  inline bool has_crschannelid() const;
  inline void clear_crschannelid();
  static const int kCrschannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 crschannelid() const;
  inline void set_crschannelid(::google::protobuf::uint32 value);

  // optional uint32 addordel = 7;
  inline bool has_addordel() const;
  inline void clear_addordel();
  static const int kAddordelFieldNumber = 7;
  inline ::google::protobuf::uint32 addordel() const;
  inline void set_addordel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndCRSChannelidToNetMp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_crsid();
  inline void clear_has_crsid();
  inline void set_has_crschannelid();
  inline void clear_has_crschannelid();
  inline void set_has_addordel();
  inline void clear_has_addordel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 crsid_;
  ::google::protobuf::uint32 crschannelid_;
  ::google::protobuf::uint32 addordel_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndCRSChannelidToNetMp* default_instance_;
};
// -------------------------------------------------------------------

class IndVASChannelidToNetMp : public ::google::protobuf::Message {
 public:
  IndVASChannelidToNetMp();
  virtual ~IndVASChannelidToNetMp();

  IndVASChannelidToNetMp(const IndVASChannelidToNetMp& from);

  inline IndVASChannelidToNetMp& operator=(const IndVASChannelidToNetMp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndVASChannelidToNetMp& default_instance();

  void Swap(IndVASChannelidToNetMp* other);

  // implements Message ----------------------------------------------

  IndVASChannelidToNetMp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndVASChannelidToNetMp& from);
  void MergeFrom(const IndVASChannelidToNetMp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional uint32 relatednetmpid = 4;
  inline bool has_relatednetmpid() const;
  inline void clear_relatednetmpid();
  static const int kRelatednetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 relatednetmpid() const;
  inline void set_relatednetmpid(::google::protobuf::uint32 value);

  // optional uint32 vasid = 5;
  inline bool has_vasid() const;
  inline void clear_vasid();
  static const int kVasidFieldNumber = 5;
  inline ::google::protobuf::uint32 vasid() const;
  inline void set_vasid(::google::protobuf::uint32 value);

  // optional uint32 vaschannelid = 6;
  inline bool has_vaschannelid() const;
  inline void clear_vaschannelid();
  static const int kVaschannelidFieldNumber = 6;
  inline ::google::protobuf::uint32 vaschannelid() const;
  inline void set_vaschannelid(::google::protobuf::uint32 value);

  // optional uint32 addordel = 7;
  inline bool has_addordel() const;
  inline void clear_addordel();
  static const int kAddordelFieldNumber = 7;
  inline ::google::protobuf::uint32 addordel() const;
  inline void set_addordel(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndVASChannelidToNetMp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_relatednetmpid();
  inline void clear_has_relatednetmpid();
  inline void set_has_vasid();
  inline void clear_has_vasid();
  inline void set_has_vaschannelid();
  inline void clear_has_vaschannelid();
  inline void set_has_addordel();
  inline void clear_has_addordel();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 relatednetmpid_;
  ::google::protobuf::uint32 vasid_;
  ::google::protobuf::uint32 vaschannelid_;
  ::google::protobuf::uint32 addordel_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndVASChannelidToNetMp* default_instance_;
};
// -------------------------------------------------------------------

class RspMCConfCreate : public ::google::protobuf::Message {
 public:
  RspMCConfCreate();
  virtual ~RspMCConfCreate();

  RspMCConfCreate(const RspMCConfCreate& from);

  inline RspMCConfCreate& operator=(const RspMCConfCreate& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RspMCConfCreate& default_instance();

  void Swap(RspMCConfCreate* other);

  // implements Message ----------------------------------------------

  RspMCConfCreate* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RspMCConfCreate& from);
  void MergeFrom(const RspMCConfCreate& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional bool isok = 1;
  inline bool has_isok() const;
  inline void clear_isok();
  static const int kIsokFieldNumber = 1;
  inline bool isok() const;
  inline void set_isok(bool value);

  // optional uint64 confid = 2;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 2;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 3;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 3;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 4;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 4;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // optional string netmpip = 5;
  inline bool has_netmpip() const;
  inline void clear_netmpip();
  static const int kNetmpipFieldNumber = 5;
  inline const ::std::string& netmpip() const;
  inline void set_netmpip(const ::std::string& value);
  inline void set_netmpip(const char* value);
  inline void set_netmpip(const char* value, size_t size);
  inline ::std::string* mutable_netmpip();
  inline ::std::string* release_netmpip();
  inline void set_allocated_netmpip(::std::string* netmpip);

  // optional uint32 audiodatarecvport = 6;
  inline bool has_audiodatarecvport() const;
  inline void clear_audiodatarecvport();
  static const int kAudiodatarecvportFieldNumber = 6;
  inline ::google::protobuf::uint32 audiodatarecvport() const;
  inline void set_audiodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 audioctrlrecvport = 7;
  inline bool has_audioctrlrecvport() const;
  inline void clear_audioctrlrecvport();
  static const int kAudioctrlrecvportFieldNumber = 7;
  inline ::google::protobuf::uint32 audioctrlrecvport() const;
  inline void set_audioctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 videodatarecvport = 8;
  inline bool has_videodatarecvport() const;
  inline void clear_videodatarecvport();
  static const int kVideodatarecvportFieldNumber = 8;
  inline ::google::protobuf::uint32 videodatarecvport() const;
  inline void set_videodatarecvport(::google::protobuf::uint32 value);

  // optional uint32 videoctrlrecvport = 9;
  inline bool has_videoctrlrecvport() const;
  inline void clear_videoctrlrecvport();
  static const int kVideoctrlrecvportFieldNumber = 9;
  inline ::google::protobuf::uint32 videoctrlrecvport() const;
  inline void set_videoctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video2datarecvport = 10;
  inline bool has_video2datarecvport() const;
  inline void clear_video2datarecvport();
  static const int kVideo2DatarecvportFieldNumber = 10;
  inline ::google::protobuf::uint32 video2datarecvport() const;
  inline void set_video2datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video2ctrlrecvport = 11;
  inline bool has_video2ctrlrecvport() const;
  inline void clear_video2ctrlrecvport();
  static const int kVideo2CtrlrecvportFieldNumber = 11;
  inline ::google::protobuf::uint32 video2ctrlrecvport() const;
  inline void set_video2ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 video3datarecvport = 12;
  inline bool has_video3datarecvport() const;
  inline void clear_video3datarecvport();
  static const int kVideo3DatarecvportFieldNumber = 12;
  inline ::google::protobuf::uint32 video3datarecvport() const;
  inline void set_video3datarecvport(::google::protobuf::uint32 value);

  // optional uint32 video3ctrlrecvport = 13;
  inline bool has_video3ctrlrecvport() const;
  inline void clear_video3ctrlrecvport();
  static const int kVideo3CtrlrecvportFieldNumber = 13;
  inline ::google::protobuf::uint32 video3ctrlrecvport() const;
  inline void set_video3ctrlrecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopdatarecvport = 14;
  inline bool has_desktopdatarecvport() const;
  inline void clear_desktopdatarecvport();
  static const int kDesktopdatarecvportFieldNumber = 14;
  inline ::google::protobuf::uint32 desktopdatarecvport() const;
  inline void set_desktopdatarecvport(::google::protobuf::uint32 value);

  // optional uint32 desktopctrlrecvport = 15;
  inline bool has_desktopctrlrecvport() const;
  inline void clear_desktopctrlrecvport();
  static const int kDesktopctrlrecvportFieldNumber = 15;
  inline ::google::protobuf::uint32 desktopctrlrecvport() const;
  inline void set_desktopctrlrecvport(::google::protobuf::uint32 value);

  // optional string failreason = 16;
  inline bool has_failreason() const;
  inline void clear_failreason();
  static const int kFailreasonFieldNumber = 16;
  inline const ::std::string& failreason() const;
  inline void set_failreason(const ::std::string& value);
  inline void set_failreason(const char* value);
  inline void set_failreason(const char* value, size_t size);
  inline ::std::string* mutable_failreason();
  inline ::std::string* release_failreason();
  inline void set_allocated_failreason(::std::string* failreason);

  // optional uint32 netmpno = 17;
  inline bool has_netmpno() const;
  inline void clear_netmpno();
  static const int kNetmpnoFieldNumber = 17;
  inline ::google::protobuf::uint32 netmpno() const;
  inline void set_netmpno(::google::protobuf::uint32 value);

  // optional uint32 errorcode = 18;
  inline bool has_errorcode() const;
  inline void clear_errorcode();
  static const int kErrorcodeFieldNumber = 18;
  inline ::google::protobuf::uint32 errorcode() const;
  inline void set_errorcode(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.RspMCConfCreate)
 private:
  inline void set_has_isok();
  inline void clear_has_isok();
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();
  inline void set_has_netmpip();
  inline void clear_has_netmpip();
  inline void set_has_audiodatarecvport();
  inline void clear_has_audiodatarecvport();
  inline void set_has_audioctrlrecvport();
  inline void clear_has_audioctrlrecvport();
  inline void set_has_videodatarecvport();
  inline void clear_has_videodatarecvport();
  inline void set_has_videoctrlrecvport();
  inline void clear_has_videoctrlrecvport();
  inline void set_has_video2datarecvport();
  inline void clear_has_video2datarecvport();
  inline void set_has_video2ctrlrecvport();
  inline void clear_has_video2ctrlrecvport();
  inline void set_has_video3datarecvport();
  inline void clear_has_video3datarecvport();
  inline void set_has_video3ctrlrecvport();
  inline void clear_has_video3ctrlrecvport();
  inline void set_has_desktopdatarecvport();
  inline void clear_has_desktopdatarecvport();
  inline void set_has_desktopctrlrecvport();
  inline void clear_has_desktopctrlrecvport();
  inline void set_has_failreason();
  inline void clear_has_failreason();
  inline void set_has_netmpno();
  inline void clear_has_netmpno();
  inline void set_has_errorcode();
  inline void clear_has_errorcode();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  bool isok_;
  ::google::protobuf::uint32 mcid_;
  ::std::string* netmpip_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::uint32 audiodatarecvport_;
  ::google::protobuf::uint32 audioctrlrecvport_;
  ::google::protobuf::uint32 videodatarecvport_;
  ::google::protobuf::uint32 videoctrlrecvport_;
  ::google::protobuf::uint32 video2datarecvport_;
  ::google::protobuf::uint32 video2ctrlrecvport_;
  ::google::protobuf::uint32 video3datarecvport_;
  ::google::protobuf::uint32 video3ctrlrecvport_;
  ::google::protobuf::uint32 desktopdatarecvport_;
  ::std::string* failreason_;
  ::google::protobuf::uint32 desktopctrlrecvport_;
  ::google::protobuf::uint32 netmpno_;
  ::google::protobuf::uint32 errorcode_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static RspMCConfCreate* default_instance_;
};
// -------------------------------------------------------------------

class IndMCHeartBeatOfNetMP : public ::google::protobuf::Message {
 public:
  IndMCHeartBeatOfNetMP();
  virtual ~IndMCHeartBeatOfNetMP();

  IndMCHeartBeatOfNetMP(const IndMCHeartBeatOfNetMP& from);

  inline IndMCHeartBeatOfNetMP& operator=(const IndMCHeartBeatOfNetMP& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndMCHeartBeatOfNetMP& default_instance();

  void Swap(IndMCHeartBeatOfNetMP* other);

  // implements Message ----------------------------------------------

  IndMCHeartBeatOfNetMP* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndMCHeartBeatOfNetMP& from);
  void MergeFrom(const IndMCHeartBeatOfNetMP& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 mcid = 1;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 1;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 2;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 2;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndMCHeartBeatOfNetMP)
 private:
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndMCHeartBeatOfNetMP* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_FrameInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_FrameInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_FrameInfo();

  IndTerStatisticsInfoFromNetmp_FrameInfo(const IndTerStatisticsInfoFromNetmp_FrameInfo& from);

  inline IndTerStatisticsInfoFromNetmp_FrameInfo& operator=(const IndTerStatisticsInfoFromNetmp_FrameInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_FrameInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_FrameInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_FrameInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_FrameInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_FrameInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 fsw = 1;
  inline bool has_fsw() const;
  inline void clear_fsw();
  static const int kFswFieldNumber = 1;
  inline ::google::protobuf::uint32 fsw() const;
  inline void set_fsw(::google::protobuf::uint32 value);

  // optional uint32 fsh = 2;
  inline bool has_fsh() const;
  inline void clear_fsh();
  static const int kFshFieldNumber = 2;
  inline ::google::protobuf::uint32 fsh() const;
  inline void set_fsh(::google::protobuf::uint32 value);

  // optional uint32 fps = 3;
  inline bool has_fps() const;
  inline void clear_fps();
  static const int kFpsFieldNumber = 3;
  inline ::google::protobuf::uint32 fps() const;
  inline void set_fps(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo)
 private:
  inline void set_has_fsw();
  inline void clear_has_fsw();
  inline void set_has_fsh();
  inline void clear_has_fsh();
  inline void set_has_fps();
  inline void clear_has_fps();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 fsw_;
  ::google::protobuf::uint32 fsh_;
  ::google::protobuf::uint32 fps_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_FrameInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_AdvanceInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_AdvanceInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_AdvanceInfo();

  IndTerStatisticsInfoFromNetmp_AdvanceInfo(const IndTerStatisticsInfoFromNetmp_AdvanceInfo& from);

  inline IndTerStatisticsInfoFromNetmp_AdvanceInfo& operator=(const IndTerStatisticsInfoFromNetmp_AdvanceInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_AdvanceInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_AdvanceInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_AdvanceInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_AdvanceInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_AdvanceInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 delay = 1;
  inline bool has_delay() const;
  inline void clear_delay();
  static const int kDelayFieldNumber = 1;
  inline ::google::protobuf::uint32 delay() const;
  inline void set_delay(::google::protobuf::uint32 value);

  // optional uint32 jitter = 2;
  inline bool has_jitter() const;
  inline void clear_jitter();
  static const int kJitterFieldNumber = 2;
  inline ::google::protobuf::uint32 jitter() const;
  inline void set_jitter(::google::protobuf::uint32 value);

  // optional uint32 loss = 3;
  inline bool has_loss() const;
  inline void clear_loss();
  static const int kLossFieldNumber = 3;
  inline ::google::protobuf::uint32 loss() const;
  inline void set_loss(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo)
 private:
  inline void set_has_delay();
  inline void clear_has_delay();
  inline void set_has_jitter();
  inline void clear_has_jitter();
  inline void set_has_loss();
  inline void clear_has_loss();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 delay_;
  ::google::protobuf::uint32 jitter_;
  ::google::protobuf::uint32 loss_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_AdvanceInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_BaseInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_BaseInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_BaseInfo();

  IndTerStatisticsInfoFromNetmp_BaseInfo(const IndTerStatisticsInfoFromNetmp_BaseInfo& from);

  inline IndTerStatisticsInfoFromNetmp_BaseInfo& operator=(const IndTerStatisticsInfoFromNetmp_BaseInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_BaseInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_BaseInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_BaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_BaseInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_BaseInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 format = 1;
  inline bool has_format() const;
  inline void clear_format();
  static const int kFormatFieldNumber = 1;
  inline ::google::protobuf::uint32 format() const;
  inline void set_format(::google::protobuf::uint32 value);

  // optional uint32 bitrate = 2;
  inline bool has_bitrate() const;
  inline void clear_bitrate();
  static const int kBitrateFieldNumber = 2;
  inline ::google::protobuf::uint32 bitrate() const;
  inline void set_bitrate(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo)
 private:
  inline void set_has_format();
  inline void clear_has_format();
  inline void set_has_bitrate();
  inline void clear_has_bitrate();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 format_;
  ::google::protobuf::uint32 bitrate_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_BaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_AudioInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_AudioInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_AudioInfo();

  IndTerStatisticsInfoFromNetmp_AudioInfo(const IndTerStatisticsInfoFromNetmp_AudioInfo& from);

  inline IndTerStatisticsInfoFromNetmp_AudioInfo& operator=(const IndTerStatisticsInfoFromNetmp_AudioInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_AudioInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_AudioInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_AudioInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_AudioInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_AudioInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 atype = 1;
  inline bool has_atype() const;
  inline void clear_atype();
  static const int kAtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 atype() const;
  inline void set_atype(::google::protobuf::uint32 value);

  // optional uint32 aterid = 2;
  inline bool has_aterid() const;
  inline void clear_aterid();
  static const int kAteridFieldNumber = 2;
  inline ::google::protobuf::uint32 aterid() const;
  inline void set_aterid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo baseinfo = 3;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 3;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo& baseinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* mutable_baseinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* baseinfo);

  // optional .SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo advinfo = 4;
  inline bool has_advinfo() const;
  inline void clear_advinfo();
  static const int kAdvinfoFieldNumber = 4;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo& advinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* mutable_advinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* release_advinfo();
  inline void set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* advinfo);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo)
 private:
  inline void set_has_atype();
  inline void clear_has_atype();
  inline void set_has_aterid();
  inline void clear_has_aterid();
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_advinfo();
  inline void clear_has_advinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 atype_;
  ::google::protobuf::uint32 aterid_;
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* baseinfo_;
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* advinfo_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_AudioInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_VideoInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_VideoInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_VideoInfo();

  IndTerStatisticsInfoFromNetmp_VideoInfo(const IndTerStatisticsInfoFromNetmp_VideoInfo& from);

  inline IndTerStatisticsInfoFromNetmp_VideoInfo& operator=(const IndTerStatisticsInfoFromNetmp_VideoInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_VideoInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_VideoInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_VideoInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_VideoInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_VideoInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 vtype = 1;
  inline bool has_vtype() const;
  inline void clear_vtype();
  static const int kVtypeFieldNumber = 1;
  inline ::google::protobuf::uint32 vtype() const;
  inline void set_vtype(::google::protobuf::uint32 value);

  // optional uint32 vterid = 2;
  inline bool has_vterid() const;
  inline void clear_vterid();
  static const int kVteridFieldNumber = 2;
  inline ::google::protobuf::uint32 vterid() const;
  inline void set_vterid(::google::protobuf::uint32 value);

  // optional .SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo baseinfo = 3;
  inline bool has_baseinfo() const;
  inline void clear_baseinfo();
  static const int kBaseinfoFieldNumber = 3;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo& baseinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* mutable_baseinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* release_baseinfo();
  inline void set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* baseinfo);

  // optional .SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo advinfo = 4;
  inline bool has_advinfo() const;
  inline void clear_advinfo();
  static const int kAdvinfoFieldNumber = 4;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo& advinfo() const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* mutable_advinfo();
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* release_advinfo();
  inline void set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* advinfo);

  // repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo frameinfo = 5;
  inline int frameinfo_size() const;
  inline void clear_frameinfo();
  static const int kFrameinfoFieldNumber = 5;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo& frameinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo* mutable_frameinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo* add_frameinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo >&
      frameinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo >*
      mutable_frameinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo)
 private:
  inline void set_has_vtype();
  inline void clear_has_vtype();
  inline void set_has_vterid();
  inline void clear_has_vterid();
  inline void set_has_baseinfo();
  inline void clear_has_baseinfo();
  inline void set_has_advinfo();
  inline void clear_has_advinfo();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 vtype_;
  ::google::protobuf::uint32 vterid_;
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* baseinfo_;
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* advinfo_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo > frameinfo_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_VideoInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_XfeInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_XfeInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_XfeInfo();

  IndTerStatisticsInfoFromNetmp_XfeInfo(const IndTerStatisticsInfoFromNetmp_XfeInfo& from);

  inline IndTerStatisticsInfoFromNetmp_XfeInfo& operator=(const IndTerStatisticsInfoFromNetmp_XfeInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_XfeInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_XfeInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_XfeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_XfeInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_XfeInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo ainfo = 1;
  inline int ainfo_size() const;
  inline void clear_ainfo();
  static const int kAinfoFieldNumber = 1;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo& ainfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo* mutable_ainfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo* add_ainfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo >&
      ainfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo >*
      mutable_ainfo();

  // repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo vinfo = 2;
  inline int vinfo_size() const;
  inline void clear_vinfo();
  static const int kVinfoFieldNumber = 2;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo& vinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo* mutable_vinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo* add_vinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo >&
      vinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo >*
      mutable_vinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo > ainfo_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo > vinfo_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_XfeInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp_TerStatisticsInfo : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp_TerStatisticsInfo();
  virtual ~IndTerStatisticsInfoFromNetmp_TerStatisticsInfo();

  IndTerStatisticsInfoFromNetmp_TerStatisticsInfo(const IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& from);

  inline IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& operator=(const IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional uint32 terid = 1;
  inline bool has_terid() const;
  inline void clear_terid();
  static const int kTeridFieldNumber = 1;
  inline ::google::protobuf::uint32 terid() const;
  inline void set_terid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo txinfo = 2;
  inline int txinfo_size() const;
  inline void clear_txinfo();
  static const int kTxinfoFieldNumber = 2;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo& txinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* mutable_txinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* add_txinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >&
      txinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >*
      mutable_txinfo();

  // repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo rxinfo = 3;
  inline int rxinfo_size() const;
  inline void clear_rxinfo();
  static const int kRxinfoFieldNumber = 3;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo& rxinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* mutable_rxinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* add_rxinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >&
      rxinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >*
      mutable_rxinfo();

  // optional uint32 txbweresult = 4;
  inline bool has_txbweresult() const;
  inline void clear_txbweresult();
  static const int kTxbweresultFieldNumber = 4;
  inline ::google::protobuf::uint32 txbweresult() const;
  inline void set_txbweresult(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo)
 private:
  inline void set_has_terid();
  inline void clear_has_terid();
  inline void set_has_txbweresult();
  inline void clear_has_txbweresult();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo > txinfo_;
  ::google::protobuf::uint32 terid_;
  ::google::protobuf::uint32 txbweresult_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo > rxinfo_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* default_instance_;
};
// -------------------------------------------------------------------

class IndTerStatisticsInfoFromNetmp : public ::google::protobuf::Message {
 public:
  IndTerStatisticsInfoFromNetmp();
  virtual ~IndTerStatisticsInfoFromNetmp();

  IndTerStatisticsInfoFromNetmp(const IndTerStatisticsInfoFromNetmp& from);

  inline IndTerStatisticsInfoFromNetmp& operator=(const IndTerStatisticsInfoFromNetmp& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const IndTerStatisticsInfoFromNetmp& default_instance();

  void Swap(IndTerStatisticsInfoFromNetmp* other);

  // implements Message ----------------------------------------------

  IndTerStatisticsInfoFromNetmp* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const IndTerStatisticsInfoFromNetmp& from);
  void MergeFrom(const IndTerStatisticsInfoFromNetmp& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef IndTerStatisticsInfoFromNetmp_FrameInfo FrameInfo;
  typedef IndTerStatisticsInfoFromNetmp_AdvanceInfo AdvanceInfo;
  typedef IndTerStatisticsInfoFromNetmp_BaseInfo BaseInfo;
  typedef IndTerStatisticsInfoFromNetmp_AudioInfo AudioInfo;
  typedef IndTerStatisticsInfoFromNetmp_VideoInfo VideoInfo;
  typedef IndTerStatisticsInfoFromNetmp_XfeInfo XfeInfo;
  typedef IndTerStatisticsInfoFromNetmp_TerStatisticsInfo TerStatisticsInfo;

  // accessors -------------------------------------------------------

  // optional uint64 confid = 1;
  inline bool has_confid() const;
  inline void clear_confid();
  static const int kConfidFieldNumber = 1;
  inline ::google::protobuf::uint64 confid() const;
  inline void set_confid(::google::protobuf::uint64 value);

  // optional uint32 mcid = 2;
  inline bool has_mcid() const;
  inline void clear_mcid();
  static const int kMcidFieldNumber = 2;
  inline ::google::protobuf::uint32 mcid() const;
  inline void set_mcid(::google::protobuf::uint32 value);

  // optional uint32 netmpid = 3;
  inline bool has_netmpid() const;
  inline void clear_netmpid();
  static const int kNetmpidFieldNumber = 3;
  inline ::google::protobuf::uint32 netmpid() const;
  inline void set_netmpid(::google::protobuf::uint32 value);

  // repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo tsinfo = 4;
  inline int tsinfo_size() const;
  inline void clear_tsinfo();
  static const int kTsinfoFieldNumber = 4;
  inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& tsinfo(int index) const;
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* mutable_tsinfo(int index);
  inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* add_tsinfo();
  inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo >&
      tsinfo() const;
  inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo >*
      mutable_tsinfo();

  // @@protoc_insertion_point(class_scope:SRMsgs.IndTerStatisticsInfoFromNetmp)
 private:
  inline void set_has_confid();
  inline void clear_has_confid();
  inline void set_has_mcid();
  inline void clear_has_mcid();
  inline void set_has_netmpid();
  inline void clear_has_netmpid();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint64 confid_;
  ::google::protobuf::uint32 mcid_;
  ::google::protobuf::uint32 netmpid_;
  ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo > tsinfo_;
  friend void  protobuf_AddDesc_mc_5fnetmp_2eproto();
  friend void protobuf_AssignDesc_mc_5fnetmp_2eproto();
  friend void protobuf_ShutdownFile_mc_5fnetmp_2eproto();

  void InitAsDefaultInstance();
  static IndTerStatisticsInfoFromNetmp* default_instance_;
};
// ===================================================================


// ===================================================================

// ReqNetMPCreateConf

// optional uint64 confid = 1;
inline bool ReqNetMPCreateConf::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ReqNetMPCreateConf::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ReqNetMPCreateConf::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ReqNetMPCreateConf::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 ReqNetMPCreateConf::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqNetMPCreateConf.confid)
  return confid_;
}
inline void ReqNetMPCreateConf::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqNetMPCreateConf.confid)
}

// optional uint32 mcid = 2;
inline bool ReqNetMPCreateConf::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void ReqNetMPCreateConf::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void ReqNetMPCreateConf::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void ReqNetMPCreateConf::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 ReqNetMPCreateConf::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqNetMPCreateConf.mcid)
  return mcid_;
}
inline void ReqNetMPCreateConf::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqNetMPCreateConf.mcid)
}

// optional uint32 netmpid = 3;
inline bool ReqNetMPCreateConf::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void ReqNetMPCreateConf::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void ReqNetMPCreateConf::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void ReqNetMPCreateConf::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 ReqNetMPCreateConf::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqNetMPCreateConf.netmpid)
  return netmpid_;
}
inline void ReqNetMPCreateConf::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqNetMPCreateConf.netmpid)
}

// optional uint32 maxterms = 4;
inline bool ReqNetMPCreateConf::has_maxterms() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void ReqNetMPCreateConf::set_has_maxterms() {
  _has_bits_[0] |= 0x00000008u;
}
inline void ReqNetMPCreateConf::clear_has_maxterms() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void ReqNetMPCreateConf::clear_maxterms() {
  maxterms_ = 0u;
  clear_has_maxterms();
}
inline ::google::protobuf::uint32 ReqNetMPCreateConf::maxterms() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqNetMPCreateConf.maxterms)
  return maxterms_;
}
inline void ReqNetMPCreateConf::set_maxterms(::google::protobuf::uint32 value) {
  set_has_maxterms();
  maxterms_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqNetMPCreateConf.maxterms)
}

// optional uint32 netmpno = 5;
inline bool ReqNetMPCreateConf::has_netmpno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void ReqNetMPCreateConf::set_has_netmpno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void ReqNetMPCreateConf::clear_has_netmpno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void ReqNetMPCreateConf::clear_netmpno() {
  netmpno_ = 0u;
  clear_has_netmpno();
}
inline ::google::protobuf::uint32 ReqNetMPCreateConf::netmpno() const {
  // @@protoc_insertion_point(field_get:SRMsgs.ReqNetMPCreateConf.netmpno)
  return netmpno_;
}
inline void ReqNetMPCreateConf::set_netmpno(::google::protobuf::uint32 value) {
  set_has_netmpno();
  netmpno_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.ReqNetMPCreateConf.netmpno)
}

// -------------------------------------------------------------------

// IndDeleteOtherNetMP

// optional uint64 confid = 1;
inline bool IndDeleteOtherNetMP::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndDeleteOtherNetMP::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndDeleteOtherNetMP::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndDeleteOtherNetMP::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndDeleteOtherNetMP::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndDeleteOtherNetMP.confid)
  return confid_;
}
inline void IndDeleteOtherNetMP::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndDeleteOtherNetMP.confid)
}

// optional uint32 mcid = 2;
inline bool IndDeleteOtherNetMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndDeleteOtherNetMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndDeleteOtherNetMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndDeleteOtherNetMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndDeleteOtherNetMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndDeleteOtherNetMP.mcid)
  return mcid_;
}
inline void IndDeleteOtherNetMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndDeleteOtherNetMP.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndDeleteOtherNetMP::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndDeleteOtherNetMP::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndDeleteOtherNetMP::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndDeleteOtherNetMP::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndDeleteOtherNetMP::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndDeleteOtherNetMP.netmpid)
  return netmpid_;
}
inline void IndDeleteOtherNetMP::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndDeleteOtherNetMP.netmpid)
}

// optional uint32 delnetmpid = 4;
inline bool IndDeleteOtherNetMP::has_delnetmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndDeleteOtherNetMP::set_has_delnetmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndDeleteOtherNetMP::clear_has_delnetmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndDeleteOtherNetMP::clear_delnetmpid() {
  delnetmpid_ = 0u;
  clear_has_delnetmpid();
}
inline ::google::protobuf::uint32 IndDeleteOtherNetMP::delnetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndDeleteOtherNetMP.delnetmpid)
  return delnetmpid_;
}
inline void IndDeleteOtherNetMP::set_delnetmpid(::google::protobuf::uint32 value) {
  set_has_delnetmpid();
  delnetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndDeleteOtherNetMP.delnetmpid)
}

// optional uint32 delnetmpno = 5;
inline bool IndDeleteOtherNetMP::has_delnetmpno() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndDeleteOtherNetMP::set_has_delnetmpno() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndDeleteOtherNetMP::clear_has_delnetmpno() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndDeleteOtherNetMP::clear_delnetmpno() {
  delnetmpno_ = 0u;
  clear_has_delnetmpno();
}
inline ::google::protobuf::uint32 IndDeleteOtherNetMP::delnetmpno() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndDeleteOtherNetMP.delnetmpno)
  return delnetmpno_;
}
inline void IndDeleteOtherNetMP::set_delnetmpno(::google::protobuf::uint32 value) {
  set_has_delnetmpno();
  delnetmpno_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndDeleteOtherNetMP.delnetmpno)
}

// -------------------------------------------------------------------

// IndNetMPTerJoined

// optional uint64 confid = 1;
inline bool IndNetMPTerJoined::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerJoined::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerJoined::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerJoined::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerJoined::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.confid)
  return confid_;
}
inline void IndNetMPTerJoined::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerJoined::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerJoined::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerJoined::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerJoined::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.mcid)
  return mcid_;
}
inline void IndNetMPTerJoined::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerJoined::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerJoined::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerJoined::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerJoined::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.netmpid)
  return netmpid_;
}
inline void IndNetMPTerJoined::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.netmpid)
}

// optional uint32 terid = 4;
inline bool IndNetMPTerJoined::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerJoined::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerJoined::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerJoined::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.terid)
  return terid_;
}
inline void IndNetMPTerJoined::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.terid)
}

// optional uint32 relatednetmpid = 5;
inline bool IndNetMPTerJoined::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerJoined::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerJoined::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerJoined::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.relatednetmpid)
  return relatednetmpid_;
}
inline void IndNetMPTerJoined::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.relatednetmpid)
}

// optional uint32 channelid = 6;
inline bool IndNetMPTerJoined::has_channelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerJoined::set_has_channelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerJoined::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerJoined::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.channelid)
  return channelid_;
}
inline void IndNetMPTerJoined::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.channelid)
}

// optional uint32 termtype = 7;
inline bool IndNetMPTerJoined::has_termtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPTerJoined::set_has_termtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPTerJoined::clear_has_termtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPTerJoined::clear_termtype() {
  termtype_ = 0u;
  clear_has_termtype();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::termtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.termtype)
  return termtype_;
}
inline void IndNetMPTerJoined::set_termtype(::google::protobuf::uint32 value) {
  set_has_termtype();
  termtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.termtype)
}

// optional uint32 fromtype = 8;
inline bool IndNetMPTerJoined::has_fromtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndNetMPTerJoined::set_has_fromtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndNetMPTerJoined::clear_has_fromtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndNetMPTerJoined::clear_fromtype() {
  fromtype_ = 0u;
  clear_has_fromtype();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::fromtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.fromtype)
  return fromtype_;
}
inline void IndNetMPTerJoined::set_fromtype(::google::protobuf::uint32 value) {
  set_has_fromtype();
  fromtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.fromtype)
}

// optional uint32 gmrtype = 9;
inline bool IndNetMPTerJoined::has_gmrtype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndNetMPTerJoined::set_has_gmrtype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndNetMPTerJoined::clear_has_gmrtype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndNetMPTerJoined::clear_gmrtype() {
  gmrtype_ = 0u;
  clear_has_gmrtype();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::gmrtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.gmrtype)
  return gmrtype_;
}
inline void IndNetMPTerJoined::set_gmrtype(::google::protobuf::uint32 value) {
  set_has_gmrtype();
  gmrtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.gmrtype)
}

// optional uint32 gmrid = 10;
inline bool IndNetMPTerJoined::has_gmrid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndNetMPTerJoined::set_has_gmrid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndNetMPTerJoined::clear_has_gmrid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndNetMPTerJoined::clear_gmrid() {
  gmrid_ = 0u;
  clear_has_gmrid();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::gmrid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.gmrid)
  return gmrid_;
}
inline void IndNetMPTerJoined::set_gmrid(::google::protobuf::uint32 value) {
  set_has_gmrid();
  gmrid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.gmrid)
}

// optional string gmrname = 11;
inline bool IndNetMPTerJoined::has_gmrname() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IndNetMPTerJoined::set_has_gmrname() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IndNetMPTerJoined::clear_has_gmrname() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IndNetMPTerJoined::clear_gmrname() {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_->clear();
  }
  clear_has_gmrname();
}
inline const ::std::string& IndNetMPTerJoined::gmrname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.gmrname)
  return *gmrname_;
}
inline void IndNetMPTerJoined::set_gmrname(const ::std::string& value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.gmrname)
}
inline void IndNetMPTerJoined::set_gmrname(const char* value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndNetMPTerJoined.gmrname)
}
inline void IndNetMPTerJoined::set_gmrname(const char* value, size_t size) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndNetMPTerJoined.gmrname)
}
inline ::std::string* IndNetMPTerJoined::mutable_gmrname() {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPTerJoined.gmrname)
  return gmrname_;
}
inline ::std::string* IndNetMPTerJoined::release_gmrname() {
  clear_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmrname_;
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndNetMPTerJoined::set_allocated_gmrname(::std::string* gmrname) {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmrname_;
  }
  if (gmrname) {
    set_has_gmrname();
    gmrname_ = gmrname;
  } else {
    clear_has_gmrname();
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPTerJoined.gmrname)
}

// optional uint32 producttype = 12;
inline bool IndNetMPTerJoined::has_producttype() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IndNetMPTerJoined::set_has_producttype() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IndNetMPTerJoined::clear_has_producttype() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IndNetMPTerJoined::clear_producttype() {
  producttype_ = 0u;
  clear_has_producttype();
}
inline ::google::protobuf::uint32 IndNetMPTerJoined::producttype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerJoined.producttype)
  return producttype_;
}
inline void IndNetMPTerJoined::set_producttype(::google::protobuf::uint32 value) {
  set_has_producttype();
  producttype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerJoined.producttype)
}

// -------------------------------------------------------------------

// IndNetMPTerLeft

// optional uint64 confid = 1;
inline bool IndNetMPTerLeft::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerLeft::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerLeft::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerLeft::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerLeft::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.confid)
  return confid_;
}
inline void IndNetMPTerLeft::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerLeft::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerLeft::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerLeft::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerLeft::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.mcid)
  return mcid_;
}
inline void IndNetMPTerLeft::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerLeft::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerLeft::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerLeft::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerLeft::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.netmpid)
  return netmpid_;
}
inline void IndNetMPTerLeft::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.netmpid)
}

// optional uint32 terid = 4;
inline bool IndNetMPTerLeft::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerLeft::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerLeft::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerLeft::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.terid)
  return terid_;
}
inline void IndNetMPTerLeft::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.terid)
}

// optional uint32 relatednetmpid = 5;
inline bool IndNetMPTerLeft::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerLeft::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerLeft::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerLeft::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.relatednetmpid)
  return relatednetmpid_;
}
inline void IndNetMPTerLeft::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.relatednetmpid)
}

// optional uint32 channelid = 6;
inline bool IndNetMPTerLeft::has_channelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerLeft::set_has_channelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerLeft::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerLeft::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.channelid)
  return channelid_;
}
inline void IndNetMPTerLeft::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.channelid)
}

// optional uint32 gmrtype = 7;
inline bool IndNetMPTerLeft::has_gmrtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPTerLeft::set_has_gmrtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPTerLeft::clear_has_gmrtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPTerLeft::clear_gmrtype() {
  gmrtype_ = 0u;
  clear_has_gmrtype();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::gmrtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.gmrtype)
  return gmrtype_;
}
inline void IndNetMPTerLeft::set_gmrtype(::google::protobuf::uint32 value) {
  set_has_gmrtype();
  gmrtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.gmrtype)
}

// optional uint32 gmrid = 8;
inline bool IndNetMPTerLeft::has_gmrid() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndNetMPTerLeft::set_has_gmrid() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndNetMPTerLeft::clear_has_gmrid() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndNetMPTerLeft::clear_gmrid() {
  gmrid_ = 0u;
  clear_has_gmrid();
}
inline ::google::protobuf::uint32 IndNetMPTerLeft::gmrid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.gmrid)
  return gmrid_;
}
inline void IndNetMPTerLeft::set_gmrid(::google::protobuf::uint32 value) {
  set_has_gmrid();
  gmrid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.gmrid)
}

// optional string gmrname = 9;
inline bool IndNetMPTerLeft::has_gmrname() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndNetMPTerLeft::set_has_gmrname() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndNetMPTerLeft::clear_has_gmrname() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndNetMPTerLeft::clear_gmrname() {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_->clear();
  }
  clear_has_gmrname();
}
inline const ::std::string& IndNetMPTerLeft::gmrname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerLeft.gmrname)
  return *gmrname_;
}
inline void IndNetMPTerLeft::set_gmrname(const ::std::string& value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerLeft.gmrname)
}
inline void IndNetMPTerLeft::set_gmrname(const char* value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndNetMPTerLeft.gmrname)
}
inline void IndNetMPTerLeft::set_gmrname(const char* value, size_t size) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndNetMPTerLeft.gmrname)
}
inline ::std::string* IndNetMPTerLeft::mutable_gmrname() {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPTerLeft.gmrname)
  return gmrname_;
}
inline ::std::string* IndNetMPTerLeft::release_gmrname() {
  clear_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmrname_;
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndNetMPTerLeft::set_allocated_gmrname(::std::string* gmrname) {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmrname_;
  }
  if (gmrname) {
    set_has_gmrname();
    gmrname_ = gmrname;
  } else {
    clear_has_gmrname();
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPTerLeft.gmrname)
}

// -------------------------------------------------------------------

// IndNetMPChangeTerInfo

// optional uint64 confid = 1;
inline bool IndNetMPChangeTerInfo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPChangeTerInfo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPChangeTerInfo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPChangeTerInfo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.confid)
  return confid_;
}
inline void IndNetMPChangeTerInfo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPChangeTerInfo::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPChangeTerInfo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPChangeTerInfo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.mcid)
  return mcid_;
}
inline void IndNetMPChangeTerInfo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPChangeTerInfo::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPChangeTerInfo::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPChangeTerInfo::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.netmpid)
  return netmpid_;
}
inline void IndNetMPChangeTerInfo::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.netmpid)
}

// optional uint32 terid = 4;
inline bool IndNetMPChangeTerInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPChangeTerInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPChangeTerInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.terid)
  return terid_;
}
inline void IndNetMPChangeTerInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.terid)
}

// optional uint32 channelid = 5;
inline bool IndNetMPChangeTerInfo::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPChangeTerInfo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPChangeTerInfo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.channelid)
  return channelid_;
}
inline void IndNetMPChangeTerInfo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.channelid)
}

// optional uint32 relatednetmpid = 6;
inline bool IndNetMPChangeTerInfo::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPChangeTerInfo::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPChangeTerInfo::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.relatednetmpid)
  return relatednetmpid_;
}
inline void IndNetMPChangeTerInfo::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.relatednetmpid)
}

// optional uint32 termtype = 7;
inline bool IndNetMPChangeTerInfo::has_termtype() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_termtype() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPChangeTerInfo::clear_has_termtype() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPChangeTerInfo::clear_termtype() {
  termtype_ = 0u;
  clear_has_termtype();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::termtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.termtype)
  return termtype_;
}
inline void IndNetMPChangeTerInfo::set_termtype(::google::protobuf::uint32 value) {
  set_has_termtype();
  termtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.termtype)
}

// optional uint32 fromtype = 8;
inline bool IndNetMPChangeTerInfo::has_fromtype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_fromtype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndNetMPChangeTerInfo::clear_has_fromtype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndNetMPChangeTerInfo::clear_fromtype() {
  fromtype_ = 0u;
  clear_has_fromtype();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::fromtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.fromtype)
  return fromtype_;
}
inline void IndNetMPChangeTerInfo::set_fromtype(::google::protobuf::uint32 value) {
  set_has_fromtype();
  fromtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.fromtype)
}

// optional uint32 producttype = 9;
inline bool IndNetMPChangeTerInfo::has_producttype() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_producttype() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndNetMPChangeTerInfo::clear_has_producttype() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndNetMPChangeTerInfo::clear_producttype() {
  producttype_ = 0u;
  clear_has_producttype();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::producttype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.producttype)
  return producttype_;
}
inline void IndNetMPChangeTerInfo::set_producttype(::google::protobuf::uint32 value) {
  set_has_producttype();
  producttype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.producttype)
}

// optional uint32 gmrtype = 10;
inline bool IndNetMPChangeTerInfo::has_gmrtype() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_gmrtype() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndNetMPChangeTerInfo::clear_has_gmrtype() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndNetMPChangeTerInfo::clear_gmrtype() {
  gmrtype_ = 0u;
  clear_has_gmrtype();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::gmrtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.gmrtype)
  return gmrtype_;
}
inline void IndNetMPChangeTerInfo::set_gmrtype(::google::protobuf::uint32 value) {
  set_has_gmrtype();
  gmrtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.gmrtype)
}

// optional uint32 gmrid = 11;
inline bool IndNetMPChangeTerInfo::has_gmrid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_gmrid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IndNetMPChangeTerInfo::clear_has_gmrid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IndNetMPChangeTerInfo::clear_gmrid() {
  gmrid_ = 0u;
  clear_has_gmrid();
}
inline ::google::protobuf::uint32 IndNetMPChangeTerInfo::gmrid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.gmrid)
  return gmrid_;
}
inline void IndNetMPChangeTerInfo::set_gmrid(::google::protobuf::uint32 value) {
  set_has_gmrid();
  gmrid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.gmrid)
}

// optional string gmrname = 12;
inline bool IndNetMPChangeTerInfo::has_gmrname() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IndNetMPChangeTerInfo::set_has_gmrname() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IndNetMPChangeTerInfo::clear_has_gmrname() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IndNetMPChangeTerInfo::clear_gmrname() {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_->clear();
  }
  clear_has_gmrname();
}
inline const ::std::string& IndNetMPChangeTerInfo::gmrname() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPChangeTerInfo.gmrname)
  return *gmrname_;
}
inline void IndNetMPChangeTerInfo::set_gmrname(const ::std::string& value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPChangeTerInfo.gmrname)
}
inline void IndNetMPChangeTerInfo::set_gmrname(const char* value) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndNetMPChangeTerInfo.gmrname)
}
inline void IndNetMPChangeTerInfo::set_gmrname(const char* value, size_t size) {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  gmrname_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndNetMPChangeTerInfo.gmrname)
}
inline ::std::string* IndNetMPChangeTerInfo::mutable_gmrname() {
  set_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    gmrname_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPChangeTerInfo.gmrname)
  return gmrname_;
}
inline ::std::string* IndNetMPChangeTerInfo::release_gmrname() {
  clear_has_gmrname();
  if (gmrname_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = gmrname_;
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndNetMPChangeTerInfo::set_allocated_gmrname(::std::string* gmrname) {
  if (gmrname_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete gmrname_;
  }
  if (gmrname) {
    set_has_gmrname();
    gmrname_ = gmrname;
  } else {
    clear_has_gmrname();
    gmrname_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPChangeTerInfo.gmrname)
}

// -------------------------------------------------------------------

// IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndConfAllTerMediaFormatToNetMP_TermsMediaFmt

// optional uint32 terid = 1;
inline bool IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.terid)
  return terid_;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.terid)
}

// optional .SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat sendmediaformat = 2;
inline bool IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::has_sendmediaformat() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::set_has_sendmediaformat() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::clear_has_sendmediaformat() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::clear_sendmediaformat() {
  if (sendmediaformat_ != NULL) sendmediaformat_->::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::Clear();
  clear_has_sendmediaformat();
}
inline const ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::sendmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.sendmediaformat)
  return sendmediaformat_ != NULL ? *sendmediaformat_ : *default_instance_->sendmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::mutable_sendmediaformat() {
  set_has_sendmediaformat();
  if (sendmediaformat_ == NULL) sendmediaformat_ = new ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.sendmediaformat)
  return sendmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::release_sendmediaformat() {
  clear_has_sendmediaformat();
  ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* temp = sendmediaformat_;
  sendmediaformat_ = NULL;
  return temp;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::set_allocated_sendmediaformat(::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* sendmediaformat) {
  delete sendmediaformat_;
  sendmediaformat_ = sendmediaformat;
  if (sendmediaformat) {
    set_has_sendmediaformat();
  } else {
    clear_has_sendmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.sendmediaformat)
}

// optional .SRMsgs.IndConfAllTerMediaFormatToNetMP.MediaTypeAndFormat recvmediaformat = 3;
inline bool IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::has_recvmediaformat() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::set_has_recvmediaformat() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::clear_has_recvmediaformat() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::clear_recvmediaformat() {
  if (recvmediaformat_ != NULL) recvmediaformat_->::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat::Clear();
  clear_has_recvmediaformat();
}
inline const ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat& IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::recvmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.recvmediaformat)
  return recvmediaformat_ != NULL ? *recvmediaformat_ : *default_instance_->recvmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::mutable_recvmediaformat() {
  set_has_recvmediaformat();
  if (recvmediaformat_ == NULL) recvmediaformat_ = new ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.recvmediaformat)
  return recvmediaformat_;
}
inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::release_recvmediaformat() {
  clear_has_recvmediaformat();
  ::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* temp = recvmediaformat_;
  recvmediaformat_ = NULL;
  return temp;
}
inline void IndConfAllTerMediaFormatToNetMP_TermsMediaFmt::set_allocated_recvmediaformat(::SRMsgs::IndConfAllTerMediaFormatToNetMP_MediaTypeAndFormat* recvmediaformat) {
  delete recvmediaformat_;
  recvmediaformat_ = recvmediaformat;
  if (recvmediaformat) {
    set_has_recvmediaformat();
  } else {
    clear_has_recvmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt.recvmediaformat)
}

// -------------------------------------------------------------------

// IndConfAllTerMediaFormatToNetMP

// optional uint64 confid = 1;
inline bool IndConfAllTerMediaFormatToNetMP::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllTerMediaFormatToNetMP::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllTerMediaFormatToNetMP::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndConfAllTerMediaFormatToNetMP::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.confid)
  return confid_;
}
inline void IndConfAllTerMediaFormatToNetMP::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.confid)
}

// optional uint32 mcid = 2;
inline bool IndConfAllTerMediaFormatToNetMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllTerMediaFormatToNetMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllTerMediaFormatToNetMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.mcid)
  return mcid_;
}
inline void IndConfAllTerMediaFormatToNetMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndConfAllTerMediaFormatToNetMP::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllTerMediaFormatToNetMP::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllTerMediaFormatToNetMP::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllTerMediaFormatToNetMP::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndConfAllTerMediaFormatToNetMP::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.netmpid)
  return netmpid_;
}
inline void IndConfAllTerMediaFormatToNetMP::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllTerMediaFormatToNetMP.netmpid)
}

// repeated .SRMsgs.IndConfAllTerMediaFormatToNetMP.TermsMediaFmt tersmediainfo = 4;
inline int IndConfAllTerMediaFormatToNetMP::tersmediainfo_size() const {
  return tersmediainfo_.size();
}
inline void IndConfAllTerMediaFormatToNetMP::clear_tersmediainfo() {
  tersmediainfo_.Clear();
}
inline const ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt& IndConfAllTerMediaFormatToNetMP::tersmediainfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllTerMediaFormatToNetMP.tersmediainfo)
  return tersmediainfo_.Get(index);
}
inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* IndConfAllTerMediaFormatToNetMP::mutable_tersmediainfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllTerMediaFormatToNetMP.tersmediainfo)
  return tersmediainfo_.Mutable(index);
}
inline ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt* IndConfAllTerMediaFormatToNetMP::add_tersmediainfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndConfAllTerMediaFormatToNetMP.tersmediainfo)
  return tersmediainfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt >&
IndConfAllTerMediaFormatToNetMP::tersmediainfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndConfAllTerMediaFormatToNetMP.tersmediainfo)
  return tersmediainfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllTerMediaFormatToNetMP_TermsMediaFmt >*
IndConfAllTerMediaFormatToNetMP::mutable_tersmediainfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndConfAllTerMediaFormatToNetMP.tersmediainfo)
  return &tersmediainfo_;
}

// -------------------------------------------------------------------

// IndNetMPTerMediaFormat_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndNetMPTerMediaFormat_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndNetMPTerMediaFormat_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndNetMPTerMediaFormat

// optional uint64 confid = 1;
inline bool IndNetMPTerMediaFormat::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerMediaFormat::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerMediaFormat::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerMediaFormat::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.confid)
  return confid_;
}
inline void IndNetMPTerMediaFormat::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerMediaFormat::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerMediaFormat::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerMediaFormat::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.mcid)
  return mcid_;
}
inline void IndNetMPTerMediaFormat::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerMediaFormat::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerMediaFormat::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerMediaFormat::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.netmpid)
  return netmpid_;
}
inline void IndNetMPTerMediaFormat::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.netmpid)
}

// optional uint32 terid = 4;
inline bool IndNetMPTerMediaFormat::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerMediaFormat::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerMediaFormat::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.terid)
  return terid_;
}
inline void IndNetMPTerMediaFormat::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.terid)
}

// optional uint32 channelid = 5;
inline bool IndNetMPTerMediaFormat::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerMediaFormat::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerMediaFormat::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndNetMPTerMediaFormat::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.channelid)
  return channelid_;
}
inline void IndNetMPTerMediaFormat::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerMediaFormat.channelid)
}

// optional .SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
inline bool IndNetMPTerMediaFormat::has_sendmediaformat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_sendmediaformat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerMediaFormat::clear_has_sendmediaformat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerMediaFormat::clear_sendmediaformat() {
  if (sendmediaformat_ != NULL) sendmediaformat_->::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_sendmediaformat();
}
inline const ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat& IndNetMPTerMediaFormat::sendmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.sendmediaformat)
  return sendmediaformat_ != NULL ? *sendmediaformat_ : *default_instance_->sendmediaformat_;
}
inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* IndNetMPTerMediaFormat::mutable_sendmediaformat() {
  set_has_sendmediaformat();
  if (sendmediaformat_ == NULL) sendmediaformat_ = new ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPTerMediaFormat.sendmediaformat)
  return sendmediaformat_;
}
inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* IndNetMPTerMediaFormat::release_sendmediaformat() {
  clear_has_sendmediaformat();
  ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* temp = sendmediaformat_;
  sendmediaformat_ = NULL;
  return temp;
}
inline void IndNetMPTerMediaFormat::set_allocated_sendmediaformat(::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* sendmediaformat) {
  delete sendmediaformat_;
  sendmediaformat_ = sendmediaformat;
  if (sendmediaformat) {
    set_has_sendmediaformat();
  } else {
    clear_has_sendmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPTerMediaFormat.sendmediaformat)
}

// optional .SRMsgs.IndNetMPTerMediaFormat.MediaTypeAndFormat recvmediaformat = 7;
inline bool IndNetMPTerMediaFormat::has_recvmediaformat() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPTerMediaFormat::set_has_recvmediaformat() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPTerMediaFormat::clear_has_recvmediaformat() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPTerMediaFormat::clear_recvmediaformat() {
  if (recvmediaformat_ != NULL) recvmediaformat_->::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_recvmediaformat();
}
inline const ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat& IndNetMPTerMediaFormat::recvmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerMediaFormat.recvmediaformat)
  return recvmediaformat_ != NULL ? *recvmediaformat_ : *default_instance_->recvmediaformat_;
}
inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* IndNetMPTerMediaFormat::mutable_recvmediaformat() {
  set_has_recvmediaformat();
  if (recvmediaformat_ == NULL) recvmediaformat_ = new ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPTerMediaFormat.recvmediaformat)
  return recvmediaformat_;
}
inline ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* IndNetMPTerMediaFormat::release_recvmediaformat() {
  clear_has_recvmediaformat();
  ::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* temp = recvmediaformat_;
  recvmediaformat_ = NULL;
  return temp;
}
inline void IndNetMPTerMediaFormat::set_allocated_recvmediaformat(::SRMsgs::IndNetMPTerMediaFormat_MediaTypeAndFormat* recvmediaformat) {
  delete recvmediaformat_;
  recvmediaformat_ = recvmediaformat;
  if (recvmediaformat) {
    set_has_recvmediaformat();
  } else {
    clear_has_recvmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPTerMediaFormat.recvmediaformat)
}

// -------------------------------------------------------------------

// IndNetMPTerSendMediaFormat_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndNetMPTerSendMediaFormat_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndNetMPTerSendMediaFormat_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndNetMPTerSendMediaFormat

// optional uint64 confid = 1;
inline bool IndNetMPTerSendMediaFormat::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerSendMediaFormat::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerSendMediaFormat::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerSendMediaFormat::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerSendMediaFormat::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.confid)
  return confid_;
}
inline void IndNetMPTerSendMediaFormat::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerSendMediaFormat::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerSendMediaFormat::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerSendMediaFormat::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerSendMediaFormat::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.mcid)
  return mcid_;
}
inline void IndNetMPTerSendMediaFormat::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerSendMediaFormat::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerSendMediaFormat::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerSendMediaFormat::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerSendMediaFormat::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.netmpid)
  return netmpid_;
}
inline void IndNetMPTerSendMediaFormat::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.netmpid)
}

// optional uint32 terid = 4;
inline bool IndNetMPTerSendMediaFormat::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerSendMediaFormat::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerSendMediaFormat::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerSendMediaFormat::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.terid)
  return terid_;
}
inline void IndNetMPTerSendMediaFormat::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.terid)
}

// optional uint32 channelid = 5;
inline bool IndNetMPTerSendMediaFormat::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerSendMediaFormat::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerSendMediaFormat::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerSendMediaFormat::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndNetMPTerSendMediaFormat::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.channelid)
  return channelid_;
}
inline void IndNetMPTerSendMediaFormat::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerSendMediaFormat.channelid)
}

// optional .SRMsgs.IndNetMPTerSendMediaFormat.MediaTypeAndFormat sendmediaformat = 6;
inline bool IndNetMPTerSendMediaFormat::has_sendmediaformat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerSendMediaFormat::set_has_sendmediaformat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerSendMediaFormat::clear_has_sendmediaformat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerSendMediaFormat::clear_sendmediaformat() {
  if (sendmediaformat_ != NULL) sendmediaformat_->::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_sendmediaformat();
}
inline const ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat& IndNetMPTerSendMediaFormat::sendmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerSendMediaFormat.sendmediaformat)
  return sendmediaformat_ != NULL ? *sendmediaformat_ : *default_instance_->sendmediaformat_;
}
inline ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* IndNetMPTerSendMediaFormat::mutable_sendmediaformat() {
  set_has_sendmediaformat();
  if (sendmediaformat_ == NULL) sendmediaformat_ = new ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPTerSendMediaFormat.sendmediaformat)
  return sendmediaformat_;
}
inline ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* IndNetMPTerSendMediaFormat::release_sendmediaformat() {
  clear_has_sendmediaformat();
  ::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* temp = sendmediaformat_;
  sendmediaformat_ = NULL;
  return temp;
}
inline void IndNetMPTerSendMediaFormat::set_allocated_sendmediaformat(::SRMsgs::IndNetMPTerSendMediaFormat_MediaTypeAndFormat* sendmediaformat) {
  delete sendmediaformat_;
  sendmediaformat_ = sendmediaformat;
  if (sendmediaformat) {
    set_has_sendmediaformat();
  } else {
    clear_has_sendmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPTerSendMediaFormat.sendmediaformat)
}

// -------------------------------------------------------------------

// IndNetMPTerRecvMediaFormat_MediaTypeAndFormat

// optional uint32 audiofmt = 1;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiofmt() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiofmt() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiofmt() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiofmt() {
  audiofmt_ = 0u;
  clear_has_audiofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::audiofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiofmt)
  return audiofmt_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiofmt(::google::protobuf::uint32 value) {
  set_has_audiofmt();
  audiofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiofmt)
}

// optional uint32 audiofrequency = 2;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiofrequency() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiofrequency() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiofrequency() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiofrequency() {
  audiofrequency_ = 0u;
  clear_has_audiofrequency();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::audiofrequency() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiofrequency)
  return audiofrequency_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiofrequency(::google::protobuf::uint32 value) {
  set_has_audiofrequency();
  audiofrequency_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiofrequency)
}

// optional uint32 audiochannelnum = 3;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiochannelnum() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiochannelnum() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiochannelnum() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiochannelnum() {
  audiochannelnum_ = 0u;
  clear_has_audiochannelnum();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::audiochannelnum() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiochannelnum)
  return audiochannelnum_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiochannelnum(::google::protobuf::uint32 value) {
  set_has_audiochannelnum();
  audiochannelnum_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiochannelnum)
}

// optional uint32 audioframelen = 4;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_audioframelen() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audioframelen() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audioframelen() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audioframelen() {
  audioframelen_ = 0u;
  clear_has_audioframelen();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::audioframelen() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audioframelen)
  return audioframelen_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_audioframelen(::google::protobuf::uint32 value) {
  set_has_audioframelen();
  audioframelen_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audioframelen)
}

// optional uint32 audiopt = 5;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_audiopt() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_audiopt() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_audiopt() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_audiopt() {
  audiopt_ = 0u;
  clear_has_audiopt();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::audiopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiopt)
  return audiopt_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_audiopt(::google::protobuf::uint32 value) {
  set_has_audiopt();
  audiopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.audiopt)
}

// optional uint32 videofmt = 6;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_videofmt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_videofmt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_videofmt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_videofmt() {
  videofmt_ = 0u;
  clear_has_videofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::videofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.videofmt)
  return videofmt_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_videofmt(::google::protobuf::uint32 value) {
  set_has_videofmt();
  videofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.videofmt)
}

// optional uint32 videopt = 7;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_videopt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_videopt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_videopt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_videopt() {
  videopt_ = 0u;
  clear_has_videopt();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::videopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.videopt)
  return videopt_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_videopt(::google::protobuf::uint32 value) {
  set_has_videopt();
  videopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.videopt)
}

// optional uint32 duovideofmt = 8;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_duovideofmt() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_duovideofmt() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_duovideofmt() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_duovideofmt() {
  duovideofmt_ = 0u;
  clear_has_duovideofmt();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::duovideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.duovideofmt)
  return duovideofmt_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_duovideofmt(::google::protobuf::uint32 value) {
  set_has_duovideofmt();
  duovideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.duovideofmt)
}

// optional uint32 duovideopt = 9;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_duovideopt() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_duovideopt() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_duovideopt() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_duovideopt() {
  duovideopt_ = 0u;
  clear_has_duovideopt();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::duovideopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.duovideopt)
  return duovideopt_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_duovideopt(::google::protobuf::uint32 value) {
  set_has_duovideopt();
  duovideopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.duovideopt)
}

// optional uint32 videobandwidth = 10;
inline bool IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::has_videobandwidth() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_has_videobandwidth() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_has_videobandwidth() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::clear_videobandwidth() {
  videobandwidth_ = 0u;
  clear_has_videobandwidth();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::videobandwidth() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.videobandwidth)
  return videobandwidth_;
}
inline void IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::set_videobandwidth(::google::protobuf::uint32 value) {
  set_has_videobandwidth();
  videobandwidth_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat.videobandwidth)
}

// -------------------------------------------------------------------

// IndNetMPTerRecvMediaFormat

// optional uint64 confid = 1;
inline bool IndNetMPTerRecvMediaFormat::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerRecvMediaFormat::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerRecvMediaFormat::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerRecvMediaFormat::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerRecvMediaFormat::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.confid)
  return confid_;
}
inline void IndNetMPTerRecvMediaFormat::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerRecvMediaFormat::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerRecvMediaFormat::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerRecvMediaFormat::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerRecvMediaFormat::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.mcid)
  return mcid_;
}
inline void IndNetMPTerRecvMediaFormat::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerRecvMediaFormat::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerRecvMediaFormat::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerRecvMediaFormat::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerRecvMediaFormat::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.netmpid)
  return netmpid_;
}
inline void IndNetMPTerRecvMediaFormat::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.netmpid)
}

// optional uint32 terid = 4;
inline bool IndNetMPTerRecvMediaFormat::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerRecvMediaFormat::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerRecvMediaFormat::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerRecvMediaFormat::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.terid)
  return terid_;
}
inline void IndNetMPTerRecvMediaFormat::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.terid)
}

// optional uint32 channelid = 5;
inline bool IndNetMPTerRecvMediaFormat::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerRecvMediaFormat::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerRecvMediaFormat::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerRecvMediaFormat::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndNetMPTerRecvMediaFormat::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.channelid)
  return channelid_;
}
inline void IndNetMPTerRecvMediaFormat::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerRecvMediaFormat.channelid)
}

// optional .SRMsgs.IndNetMPTerRecvMediaFormat.MediaTypeAndFormat recvmediaformat = 6;
inline bool IndNetMPTerRecvMediaFormat::has_recvmediaformat() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerRecvMediaFormat::set_has_recvmediaformat() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerRecvMediaFormat::clear_has_recvmediaformat() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerRecvMediaFormat::clear_recvmediaformat() {
  if (recvmediaformat_ != NULL) recvmediaformat_->::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat::Clear();
  clear_has_recvmediaformat();
}
inline const ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat& IndNetMPTerRecvMediaFormat::recvmediaformat() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerRecvMediaFormat.recvmediaformat)
  return recvmediaformat_ != NULL ? *recvmediaformat_ : *default_instance_->recvmediaformat_;
}
inline ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* IndNetMPTerRecvMediaFormat::mutable_recvmediaformat() {
  set_has_recvmediaformat();
  if (recvmediaformat_ == NULL) recvmediaformat_ = new ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndNetMPTerRecvMediaFormat.recvmediaformat)
  return recvmediaformat_;
}
inline ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* IndNetMPTerRecvMediaFormat::release_recvmediaformat() {
  clear_has_recvmediaformat();
  ::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* temp = recvmediaformat_;
  recvmediaformat_ = NULL;
  return temp;
}
inline void IndNetMPTerRecvMediaFormat::set_allocated_recvmediaformat(::SRMsgs::IndNetMPTerRecvMediaFormat_MediaTypeAndFormat* recvmediaformat) {
  delete recvmediaformat_;
  recvmediaformat_ = recvmediaformat;
  if (recvmediaformat) {
    set_has_recvmediaformat();
  } else {
    clear_has_recvmediaformat();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndNetMPTerRecvMediaFormat.recvmediaformat)
}

// -------------------------------------------------------------------

// IndNetMPTerAssistVideoOn

// optional uint64 confid = 1;
inline bool IndNetMPTerAssistVideoOn::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerAssistVideoOn::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerAssistVideoOn::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerAssistVideoOn::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerAssistVideoOn::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOn.confid)
  return confid_;
}
inline void IndNetMPTerAssistVideoOn::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOn.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerAssistVideoOn::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerAssistVideoOn::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerAssistVideoOn::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerAssistVideoOn::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOn::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOn.mcid)
  return mcid_;
}
inline void IndNetMPTerAssistVideoOn::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOn.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerAssistVideoOn::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerAssistVideoOn::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerAssistVideoOn::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerAssistVideoOn::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOn::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOn.netmpid)
  return netmpid_;
}
inline void IndNetMPTerAssistVideoOn::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOn.netmpid)
}

// optional uint32 duoVideoid = 4;
inline bool IndNetMPTerAssistVideoOn::has_duovideoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerAssistVideoOn::set_has_duovideoid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerAssistVideoOn::clear_has_duovideoid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerAssistVideoOn::clear_duovideoid() {
  duovideoid_ = 0u;
  clear_has_duovideoid();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOn::duovideoid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOn.duoVideoid)
  return duovideoid_;
}
inline void IndNetMPTerAssistVideoOn::set_duovideoid(::google::protobuf::uint32 value) {
  set_has_duovideoid();
  duovideoid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOn.duoVideoid)
}

// optional uint32 avtype = 5;
inline bool IndNetMPTerAssistVideoOn::has_avtype() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndNetMPTerAssistVideoOn::set_has_avtype() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndNetMPTerAssistVideoOn::clear_has_avtype() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndNetMPTerAssistVideoOn::clear_avtype() {
  avtype_ = 0u;
  clear_has_avtype();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOn::avtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOn.avtype)
  return avtype_;
}
inline void IndNetMPTerAssistVideoOn::set_avtype(::google::protobuf::uint32 value) {
  set_has_avtype();
  avtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOn.avtype)
}

// optional uint32 sharedaudio = 6;
inline bool IndNetMPTerAssistVideoOn::has_sharedaudio() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndNetMPTerAssistVideoOn::set_has_sharedaudio() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndNetMPTerAssistVideoOn::clear_has_sharedaudio() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndNetMPTerAssistVideoOn::clear_sharedaudio() {
  sharedaudio_ = 0u;
  clear_has_sharedaudio();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOn::sharedaudio() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOn.sharedaudio)
  return sharedaudio_;
}
inline void IndNetMPTerAssistVideoOn::set_sharedaudio(::google::protobuf::uint32 value) {
  set_has_sharedaudio();
  sharedaudio_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOn.sharedaudio)
}

// -------------------------------------------------------------------

// IndNetMPTerAssistVideoOff

// optional uint64 confid = 1;
inline bool IndNetMPTerAssistVideoOff::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPTerAssistVideoOff::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPTerAssistVideoOff::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPTerAssistVideoOff::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndNetMPTerAssistVideoOff::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOff.confid)
  return confid_;
}
inline void IndNetMPTerAssistVideoOff::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOff.confid)
}

// optional uint32 mcid = 2;
inline bool IndNetMPTerAssistVideoOff::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPTerAssistVideoOff::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPTerAssistVideoOff::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPTerAssistVideoOff::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOff::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOff.mcid)
  return mcid_;
}
inline void IndNetMPTerAssistVideoOff::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOff.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndNetMPTerAssistVideoOff::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndNetMPTerAssistVideoOff::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndNetMPTerAssistVideoOff::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndNetMPTerAssistVideoOff::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOff::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOff.netmpid)
  return netmpid_;
}
inline void IndNetMPTerAssistVideoOff::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOff.netmpid)
}

// optional uint32 duoVideoid = 4;
inline bool IndNetMPTerAssistVideoOff::has_duovideoid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndNetMPTerAssistVideoOff::set_has_duovideoid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndNetMPTerAssistVideoOff::clear_has_duovideoid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndNetMPTerAssistVideoOff::clear_duovideoid() {
  duovideoid_ = 0u;
  clear_has_duovideoid();
}
inline ::google::protobuf::uint32 IndNetMPTerAssistVideoOff::duovideoid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPTerAssistVideoOff.duoVideoid)
  return duovideoid_;
}
inline void IndNetMPTerAssistVideoOff::set_duovideoid(::google::protobuf::uint32 value) {
  set_has_duovideoid();
  duovideoid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPTerAssistVideoOff.duoVideoid)
}

// -------------------------------------------------------------------

// CmdNetMPTerVideoSelect_TerVideoSend

// optional uint32 terid = 1;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.terid)
  return terid_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.terid)
}

// optional uint32 channelid = 2;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_channelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_channelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.channelid)
  return channelid_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.channelid)
}

// optional uint32 videosize = 3;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_videosize() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_videosize() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_videosize() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_videosize() {
  videosize_ = 0u;
  clear_has_videosize();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::videosize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.videosize)
  return videosize_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_videosize(::google::protobuf::uint32 value) {
  set_has_videosize();
  videosize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.videosize)
}

// optional uint32 netmpid = 4;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_netmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_netmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.netmpid)
  return netmpid_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.netmpid)
}

// optional uint32 screenid = 5;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_screenid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_screenid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.screenid)
  return screenid_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.screenid)
}

// optional uint32 delayopt = 6;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_delayopt() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_delayopt() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_delayopt() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_delayopt() {
  delayopt_ = 0u;
  clear_has_delayopt();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::delayopt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.delayopt)
  return delayopt_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_delayopt(::google::protobuf::uint32 value) {
  set_has_delayopt();
  delayopt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.delayopt)
}

// optional uint32 replaceterid = 7;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_replaceterid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_replaceterid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_replaceterid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_replaceterid() {
  replaceterid_ = 0u;
  clear_has_replaceterid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::replaceterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.replaceterid)
  return replaceterid_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_replaceterid(::google::protobuf::uint32 value) {
  set_has_replaceterid();
  replaceterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.replaceterid)
}

// optional uint32 recvfps = 8;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_recvfps() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_recvfps() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_recvfps() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_recvfps() {
  recvfps_ = 0u;
  clear_has_recvfps();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::recvfps() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.recvfps)
  return recvfps_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_recvfps(::google::protobuf::uint32 value) {
  set_has_recvfps();
  recvfps_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.recvfps)
}

// optional uint32 replacescreenid = 9;
inline bool CmdNetMPTerVideoSelect_TerVideoSend::has_replacescreenid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_has_replacescreenid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_has_replacescreenid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::clear_replacescreenid() {
  replacescreenid_ = 0u;
  clear_has_replacescreenid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect_TerVideoSend::replacescreenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.replacescreenid)
  return replacescreenid_;
}
inline void CmdNetMPTerVideoSelect_TerVideoSend::set_replacescreenid(::google::protobuf::uint32 value) {
  set_has_replacescreenid();
  replacescreenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend.replacescreenid)
}

// -------------------------------------------------------------------

// CmdNetMPTerVideoSelect

// optional uint64 confid = 1;
inline bool CmdNetMPTerVideoSelect::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdNetMPTerVideoSelect::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdNetMPTerVideoSelect::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdNetMPTerVideoSelect::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdNetMPTerVideoSelect::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.confid)
  return confid_;
}
inline void CmdNetMPTerVideoSelect::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.confid)
}

// optional uint32 mcid = 2;
inline bool CmdNetMPTerVideoSelect::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdNetMPTerVideoSelect::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdNetMPTerVideoSelect::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdNetMPTerVideoSelect::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.mcid)
  return mcid_;
}
inline void CmdNetMPTerVideoSelect::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.mcid)
}

// optional uint32 netmpid = 3;
inline bool CmdNetMPTerVideoSelect::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdNetMPTerVideoSelect::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdNetMPTerVideoSelect::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdNetMPTerVideoSelect::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.netmpid)
  return netmpid_;
}
inline void CmdNetMPTerVideoSelect::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.netmpid)
}

// optional uint32 terid = 4;
inline bool CmdNetMPTerVideoSelect::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdNetMPTerVideoSelect::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdNetMPTerVideoSelect::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdNetMPTerVideoSelect::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.terid)
  return terid_;
}
inline void CmdNetMPTerVideoSelect::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.terid)
}

// optional uint32 channelid = 5;
inline bool CmdNetMPTerVideoSelect::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdNetMPTerVideoSelect::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdNetMPTerVideoSelect::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdNetMPTerVideoSelect::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.channelid)
  return channelid_;
}
inline void CmdNetMPTerVideoSelect::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.channelid)
}

// optional uint32 relatednetmpid = 6;
inline bool CmdNetMPTerVideoSelect::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdNetMPTerVideoSelect::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdNetMPTerVideoSelect::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdNetMPTerVideoSelect::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 CmdNetMPTerVideoSelect::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.relatednetmpid)
  return relatednetmpid_;
}
inline void CmdNetMPTerVideoSelect::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerVideoSelect.relatednetmpid)
}

// repeated .SRMsgs.CmdNetMPTerVideoSelect.TerVideoSend tervideoneed = 7;
inline int CmdNetMPTerVideoSelect::tervideoneed_size() const {
  return tervideoneed_.size();
}
inline void CmdNetMPTerVideoSelect::clear_tervideoneed() {
  tervideoneed_.Clear();
}
inline const ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend& CmdNetMPTerVideoSelect::tervideoneed(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerVideoSelect.tervideoneed)
  return tervideoneed_.Get(index);
}
inline ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend* CmdNetMPTerVideoSelect::mutable_tervideoneed(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdNetMPTerVideoSelect.tervideoneed)
  return tervideoneed_.Mutable(index);
}
inline ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend* CmdNetMPTerVideoSelect::add_tervideoneed() {
  // @@protoc_insertion_point(field_add:SRMsgs.CmdNetMPTerVideoSelect.tervideoneed)
  return tervideoneed_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend >&
CmdNetMPTerVideoSelect::tervideoneed() const {
  // @@protoc_insertion_point(field_list:SRMsgs.CmdNetMPTerVideoSelect.tervideoneed)
  return tervideoneed_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::CmdNetMPTerVideoSelect_TerVideoSend >*
CmdNetMPTerVideoSelect::mutable_tervideoneed() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.CmdNetMPTerVideoSelect.tervideoneed)
  return &tervideoneed_;
}

// -------------------------------------------------------------------

// CmdNetMPTerSelectAssistVideo

// optional uint64 confid = 1;
inline bool CmdNetMPTerSelectAssistVideo::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdNetMPTerSelectAssistVideo::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.confid)
  return confid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.confid)
}

// optional uint32 mcid = 2;
inline bool CmdNetMPTerSelectAssistVideo::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.mcid)
  return mcid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.mcid)
}

// optional uint32 netmpid = 3;
inline bool CmdNetMPTerSelectAssistVideo::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.netmpid)
  return netmpid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.netmpid)
}

// optional uint32 terid = 4;
inline bool CmdNetMPTerSelectAssistVideo::has_terid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_terid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.terid)
  return terid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.terid)
}

// optional uint32 channelid = 5;
inline bool CmdNetMPTerSelectAssistVideo::has_channelid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_channelid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.channelid)
  return channelid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.channelid)
}

// optional uint32 relatednetmpid = 6;
inline bool CmdNetMPTerSelectAssistVideo::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.relatednetmpid)
  return relatednetmpid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.relatednetmpid)
}

// optional uint32 needvideofmt = 7;
inline bool CmdNetMPTerSelectAssistVideo::has_needvideofmt() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_needvideofmt() {
  _has_bits_[0] |= 0x00000040u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_needvideofmt() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_needvideofmt() {
  needvideofmt_ = 0u;
  clear_has_needvideofmt();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::needvideofmt() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.needvideofmt)
  return needvideofmt_;
}
inline void CmdNetMPTerSelectAssistVideo::set_needvideofmt(::google::protobuf::uint32 value) {
  set_has_needvideofmt();
  needvideofmt_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.needvideofmt)
}

// optional uint32 needvideosize = 8;
inline bool CmdNetMPTerSelectAssistVideo::has_needvideosize() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_needvideosize() {
  _has_bits_[0] |= 0x00000080u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_needvideosize() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_needvideosize() {
  needvideosize_ = 0u;
  clear_has_needvideosize();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::needvideosize() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.needvideosize)
  return needvideosize_;
}
inline void CmdNetMPTerSelectAssistVideo::set_needvideosize(::google::protobuf::uint32 value) {
  set_has_needvideosize();
  needvideosize_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.needvideosize)
}

// optional uint32 beselterid = 9;
inline bool CmdNetMPTerSelectAssistVideo::has_beselterid() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_beselterid() {
  _has_bits_[0] |= 0x00000100u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_beselterid() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_beselterid() {
  beselterid_ = 0u;
  clear_has_beselterid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::beselterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.beselterid)
  return beselterid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_beselterid(::google::protobuf::uint32 value) {
  set_has_beselterid();
  beselterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.beselterid)
}

// optional uint32 beselchannelid = 10;
inline bool CmdNetMPTerSelectAssistVideo::has_beselchannelid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_beselchannelid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_beselchannelid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_beselchannelid() {
  beselchannelid_ = 0u;
  clear_has_beselchannelid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::beselchannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.beselchannelid)
  return beselchannelid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_beselchannelid(::google::protobuf::uint32 value) {
  set_has_beselchannelid();
  beselchannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.beselchannelid)
}

// optional uint32 beselrelatednetmpid = 11;
inline bool CmdNetMPTerSelectAssistVideo::has_beselrelatednetmpid() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_beselrelatednetmpid() {
  _has_bits_[0] |= 0x00000400u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_beselrelatednetmpid() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_beselrelatednetmpid() {
  beselrelatednetmpid_ = 0u;
  clear_has_beselrelatednetmpid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::beselrelatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.beselrelatednetmpid)
  return beselrelatednetmpid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_beselrelatednetmpid(::google::protobuf::uint32 value) {
  set_has_beselrelatednetmpid();
  beselrelatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.beselrelatednetmpid)
}

// optional uint32 beselscreenid = 12;
inline bool CmdNetMPTerSelectAssistVideo::has_beselscreenid() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void CmdNetMPTerSelectAssistVideo::set_has_beselscreenid() {
  _has_bits_[0] |= 0x00000800u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_has_beselscreenid() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void CmdNetMPTerSelectAssistVideo::clear_beselscreenid() {
  beselscreenid_ = 0u;
  clear_has_beselscreenid();
}
inline ::google::protobuf::uint32 CmdNetMPTerSelectAssistVideo::beselscreenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPTerSelectAssistVideo.beselscreenid)
  return beselscreenid_;
}
inline void CmdNetMPTerSelectAssistVideo::set_beselscreenid(::google::protobuf::uint32 value) {
  set_has_beselscreenid();
  beselscreenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPTerSelectAssistVideo.beselscreenid)
}

// -------------------------------------------------------------------

// CmdNetMPConfDestroy

// optional uint64 confid = 1;
inline bool CmdNetMPConfDestroy::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CmdNetMPConfDestroy::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CmdNetMPConfDestroy::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CmdNetMPConfDestroy::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 CmdNetMPConfDestroy::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPConfDestroy.confid)
  return confid_;
}
inline void CmdNetMPConfDestroy::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPConfDestroy.confid)
}

// optional uint32 mcid = 2;
inline bool CmdNetMPConfDestroy::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CmdNetMPConfDestroy::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CmdNetMPConfDestroy::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CmdNetMPConfDestroy::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 CmdNetMPConfDestroy::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPConfDestroy.mcid)
  return mcid_;
}
inline void CmdNetMPConfDestroy::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPConfDestroy.mcid)
}

// optional uint32 netmpid = 3;
inline bool CmdNetMPConfDestroy::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CmdNetMPConfDestroy::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CmdNetMPConfDestroy::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CmdNetMPConfDestroy::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 CmdNetMPConfDestroy::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPConfDestroy.netmpid)
  return netmpid_;
}
inline void CmdNetMPConfDestroy::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPConfDestroy.netmpid)
}

// optional string reason = 4;
inline bool CmdNetMPConfDestroy::has_reason() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CmdNetMPConfDestroy::set_has_reason() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CmdNetMPConfDestroy::clear_has_reason() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CmdNetMPConfDestroy::clear_reason() {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_->clear();
  }
  clear_has_reason();
}
inline const ::std::string& CmdNetMPConfDestroy::reason() const {
  // @@protoc_insertion_point(field_get:SRMsgs.CmdNetMPConfDestroy.reason)
  return *reason_;
}
inline void CmdNetMPConfDestroy::set_reason(const ::std::string& value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.CmdNetMPConfDestroy.reason)
}
inline void CmdNetMPConfDestroy::set_reason(const char* value) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.CmdNetMPConfDestroy.reason)
}
inline void CmdNetMPConfDestroy::set_reason(const char* value, size_t size) {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  reason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.CmdNetMPConfDestroy.reason)
}
inline ::std::string* CmdNetMPConfDestroy::mutable_reason() {
  set_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    reason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.CmdNetMPConfDestroy.reason)
  return reason_;
}
inline ::std::string* CmdNetMPConfDestroy::release_reason() {
  clear_has_reason();
  if (reason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = reason_;
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void CmdNetMPConfDestroy::set_allocated_reason(::std::string* reason) {
  if (reason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete reason_;
  }
  if (reason) {
    set_has_reason();
    reason_ = reason;
  } else {
    clear_has_reason();
    reason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.CmdNetMPConfDestroy.reason)
}

// -------------------------------------------------------------------

// IndNetMPHeartBeatOfMC

// optional uint32 mcid = 1;
inline bool IndNetMPHeartBeatOfMC::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndNetMPHeartBeatOfMC::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndNetMPHeartBeatOfMC::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndNetMPHeartBeatOfMC::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndNetMPHeartBeatOfMC::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPHeartBeatOfMC.mcid)
  return mcid_;
}
inline void IndNetMPHeartBeatOfMC::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPHeartBeatOfMC.mcid)
}

// optional uint32 netmpid = 2;
inline bool IndNetMPHeartBeatOfMC::has_netmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndNetMPHeartBeatOfMC::set_has_netmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndNetMPHeartBeatOfMC::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndNetMPHeartBeatOfMC::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndNetMPHeartBeatOfMC::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndNetMPHeartBeatOfMC.netmpid)
  return netmpid_;
}
inline void IndNetMPHeartBeatOfMC::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndNetMPHeartBeatOfMC.netmpid)
}

// -------------------------------------------------------------------

// IndConfAllNetMPs_TersInNetMP

// optional uint32 terid = 1;
inline bool IndConfAllNetMPs_TersInNetMP::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllNetMPs_TersInNetMP::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllNetMPs_TersInNetMP::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllNetMPs_TersInNetMP::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_TersInNetMP::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.TersInNetMP.terid)
  return terid_;
}
inline void IndConfAllNetMPs_TersInNetMP::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.TersInNetMP.terid)
}

// optional uint32 channelid = 2;
inline bool IndConfAllNetMPs_TersInNetMP::has_channelid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllNetMPs_TersInNetMP::set_has_channelid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllNetMPs_TersInNetMP::clear_has_channelid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllNetMPs_TersInNetMP::clear_channelid() {
  channelid_ = 0u;
  clear_has_channelid();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_TersInNetMP::channelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.TersInNetMP.channelid)
  return channelid_;
}
inline void IndConfAllNetMPs_TersInNetMP::set_channelid(::google::protobuf::uint32 value) {
  set_has_channelid();
  channelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.TersInNetMP.channelid)
}

// -------------------------------------------------------------------

// IndConfAllNetMPs_NetMPsInConf

// optional uint32 netmpid = 1;
inline bool IndConfAllNetMPs_NetMPsInConf::has_netmpid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_netmpid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpid)
  return netmpid_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpid)
}

// optional string netmpip = 2;
inline bool IndConfAllNetMPs_NetMPsInConf::has_netmpip() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_netmpip() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_netmpip() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_netmpip() {
  if (netmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_->clear();
  }
  clear_has_netmpip();
}
inline const ::std::string& IndConfAllNetMPs_NetMPsInConf::netmpip() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpip)
  return *netmpip_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_netmpip(const ::std::string& value) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpip)
}
inline void IndConfAllNetMPs_NetMPsInConf::set_netmpip(const char* value) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpip)
}
inline void IndConfAllNetMPs_NetMPsInConf::set_netmpip(const char* value, size_t size) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpip)
}
inline ::std::string* IndConfAllNetMPs_NetMPsInConf::mutable_netmpip() {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpip)
  return netmpip_;
}
inline ::std::string* IndConfAllNetMPs_NetMPsInConf::release_netmpip() {
  clear_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = netmpip_;
    netmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndConfAllNetMPs_NetMPsInConf::set_allocated_netmpip(::std::string* netmpip) {
  if (netmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete netmpip_;
  }
  if (netmpip) {
    set_has_netmpip();
    netmpip_ = netmpip;
  } else {
    clear_has_netmpip();
    netmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpip)
}

// repeated .SRMsgs.IndConfAllNetMPs.TersInNetMP terids = 3;
inline int IndConfAllNetMPs_NetMPsInConf::terids_size() const {
  return terids_.size();
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_terids() {
  terids_.Clear();
}
inline const ::SRMsgs::IndConfAllNetMPs_TersInNetMP& IndConfAllNetMPs_NetMPsInConf::terids(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.terids)
  return terids_.Get(index);
}
inline ::SRMsgs::IndConfAllNetMPs_TersInNetMP* IndConfAllNetMPs_NetMPsInConf::mutable_terids(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllNetMPs.NetMPsInConf.terids)
  return terids_.Mutable(index);
}
inline ::SRMsgs::IndConfAllNetMPs_TersInNetMP* IndConfAllNetMPs_NetMPsInConf::add_terids() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndConfAllNetMPs.NetMPsInConf.terids)
  return terids_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_TersInNetMP >&
IndConfAllNetMPs_NetMPsInConf::terids() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndConfAllNetMPs.NetMPsInConf.terids)
  return terids_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_TersInNetMP >*
IndConfAllNetMPs_NetMPsInConf::mutable_terids() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndConfAllNetMPs.NetMPsInConf.terids)
  return &terids_;
}

// optional uint32 audiodatarecvport = 4;
inline bool IndConfAllNetMPs_NetMPsInConf::has_audiodatarecvport() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_audiodatarecvport() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_audiodatarecvport() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_audiodatarecvport() {
  audiodatarecvport_ = 0u;
  clear_has_audiodatarecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::audiodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.audiodatarecvport)
  return audiodatarecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_audiodatarecvport(::google::protobuf::uint32 value) {
  set_has_audiodatarecvport();
  audiodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.audiodatarecvport)
}

// optional uint32 audioctrlrecvport = 5;
inline bool IndConfAllNetMPs_NetMPsInConf::has_audioctrlrecvport() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_audioctrlrecvport() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_audioctrlrecvport() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_audioctrlrecvport() {
  audioctrlrecvport_ = 0u;
  clear_has_audioctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::audioctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.audioctrlrecvport)
  return audioctrlrecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_audioctrlrecvport(::google::protobuf::uint32 value) {
  set_has_audioctrlrecvport();
  audioctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.audioctrlrecvport)
}

// optional uint32 videodatarecvport = 6;
inline bool IndConfAllNetMPs_NetMPsInConf::has_videodatarecvport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_videodatarecvport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_videodatarecvport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_videodatarecvport() {
  videodatarecvport_ = 0u;
  clear_has_videodatarecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::videodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.videodatarecvport)
  return videodatarecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_videodatarecvport(::google::protobuf::uint32 value) {
  set_has_videodatarecvport();
  videodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.videodatarecvport)
}

// optional uint32 videoctrlrecvport = 7;
inline bool IndConfAllNetMPs_NetMPsInConf::has_videoctrlrecvport() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_videoctrlrecvport() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_videoctrlrecvport() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_videoctrlrecvport() {
  videoctrlrecvport_ = 0u;
  clear_has_videoctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::videoctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.videoctrlrecvport)
  return videoctrlrecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_videoctrlrecvport(::google::protobuf::uint32 value) {
  set_has_videoctrlrecvport();
  videoctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.videoctrlrecvport)
}

// optional uint32 video2datarecvport = 8;
inline bool IndConfAllNetMPs_NetMPsInConf::has_video2datarecvport() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_video2datarecvport() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_video2datarecvport() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_video2datarecvport() {
  video2datarecvport_ = 0u;
  clear_has_video2datarecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::video2datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video2datarecvport)
  return video2datarecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_video2datarecvport(::google::protobuf::uint32 value) {
  set_has_video2datarecvport();
  video2datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video2datarecvport)
}

// optional uint32 video2ctrlrecvport = 9;
inline bool IndConfAllNetMPs_NetMPsInConf::has_video2ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_video2ctrlrecvport() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_video2ctrlrecvport() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_video2ctrlrecvport() {
  video2ctrlrecvport_ = 0u;
  clear_has_video2ctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::video2ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video2ctrlrecvport)
  return video2ctrlrecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_video2ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video2ctrlrecvport();
  video2ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video2ctrlrecvport)
}

// optional uint32 video3datarecvport = 10;
inline bool IndConfAllNetMPs_NetMPsInConf::has_video3datarecvport() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_video3datarecvport() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_video3datarecvport() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_video3datarecvport() {
  video3datarecvport_ = 0u;
  clear_has_video3datarecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::video3datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video3datarecvport)
  return video3datarecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_video3datarecvport(::google::protobuf::uint32 value) {
  set_has_video3datarecvport();
  video3datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video3datarecvport)
}

// optional uint32 video3ctrlrecvport = 11;
inline bool IndConfAllNetMPs_NetMPsInConf::has_video3ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_video3ctrlrecvport() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_video3ctrlrecvport() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_video3ctrlrecvport() {
  video3ctrlrecvport_ = 0u;
  clear_has_video3ctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::video3ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video3ctrlrecvport)
  return video3ctrlrecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_video3ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video3ctrlrecvport();
  video3ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.video3ctrlrecvport)
}

// optional uint32 desktopdatarecvport = 12;
inline bool IndConfAllNetMPs_NetMPsInConf::has_desktopdatarecvport() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_desktopdatarecvport() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_desktopdatarecvport() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_desktopdatarecvport() {
  desktopdatarecvport_ = 0u;
  clear_has_desktopdatarecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::desktopdatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.desktopdatarecvport)
  return desktopdatarecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_desktopdatarecvport(::google::protobuf::uint32 value) {
  set_has_desktopdatarecvport();
  desktopdatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.desktopdatarecvport)
}

// optional uint32 desktopctrlrecvport = 13;
inline bool IndConfAllNetMPs_NetMPsInConf::has_desktopctrlrecvport() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_desktopctrlrecvport() {
  _has_bits_[0] |= 0x00001000u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_desktopctrlrecvport() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_desktopctrlrecvport() {
  desktopctrlrecvport_ = 0u;
  clear_has_desktopctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::desktopctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.desktopctrlrecvport)
  return desktopctrlrecvport_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_desktopctrlrecvport(::google::protobuf::uint32 value) {
  set_has_desktopctrlrecvport();
  desktopctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.desktopctrlrecvport)
}

// optional uint32 netmpno = 14;
inline bool IndConfAllNetMPs_NetMPsInConf::has_netmpno() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_has_netmpno() {
  _has_bits_[0] |= 0x00002000u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_has_netmpno() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void IndConfAllNetMPs_NetMPsInConf::clear_netmpno() {
  netmpno_ = 0u;
  clear_has_netmpno();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs_NetMPsInConf::netmpno() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpno)
  return netmpno_;
}
inline void IndConfAllNetMPs_NetMPsInConf::set_netmpno(::google::protobuf::uint32 value) {
  set_has_netmpno();
  netmpno_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.NetMPsInConf.netmpno)
}

// -------------------------------------------------------------------

// IndConfAllNetMPs

// optional uint32 mcid = 1;
inline bool IndConfAllNetMPs::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllNetMPs::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllNetMPs::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllNetMPs::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.mcid)
  return mcid_;
}
inline void IndConfAllNetMPs::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.mcid)
}

// optional uint32 netmpid = 2;
inline bool IndConfAllNetMPs::has_netmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllNetMPs::set_has_netmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllNetMPs::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllNetMPs::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndConfAllNetMPs::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.netmpid)
  return netmpid_;
}
inline void IndConfAllNetMPs::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.netmpid)
}

// optional uint64 confid = 3;
inline bool IndConfAllNetMPs::has_confid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllNetMPs::set_has_confid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllNetMPs::clear_has_confid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllNetMPs::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndConfAllNetMPs::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.confid)
  return confid_;
}
inline void IndConfAllNetMPs::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllNetMPs.confid)
}

// repeated .SRMsgs.IndConfAllNetMPs.NetMPsInConf netmps = 4;
inline int IndConfAllNetMPs::netmps_size() const {
  return netmps_.size();
}
inline void IndConfAllNetMPs::clear_netmps() {
  netmps_.Clear();
}
inline const ::SRMsgs::IndConfAllNetMPs_NetMPsInConf& IndConfAllNetMPs::netmps(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllNetMPs.netmps)
  return netmps_.Get(index);
}
inline ::SRMsgs::IndConfAllNetMPs_NetMPsInConf* IndConfAllNetMPs::mutable_netmps(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllNetMPs.netmps)
  return netmps_.Mutable(index);
}
inline ::SRMsgs::IndConfAllNetMPs_NetMPsInConf* IndConfAllNetMPs::add_netmps() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndConfAllNetMPs.netmps)
  return netmps_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_NetMPsInConf >&
IndConfAllNetMPs::netmps() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndConfAllNetMPs.netmps)
  return netmps_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllNetMPs_NetMPsInConf >*
IndConfAllNetMPs::mutable_netmps() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndConfAllNetMPs.netmps)
  return &netmps_;
}

// -------------------------------------------------------------------

// IndConfAddNewNetMP

// optional uint32 mcid = 1;
inline bool IndConfAddNewNetMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAddNewNetMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAddNewNetMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAddNewNetMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.mcid)
  return mcid_;
}
inline void IndConfAddNewNetMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.mcid)
}

// optional uint32 netmpid = 2;
inline bool IndConfAddNewNetMP::has_netmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAddNewNetMP::set_has_netmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAddNewNetMP::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAddNewNetMP::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.netmpid)
  return netmpid_;
}
inline void IndConfAddNewNetMP::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.netmpid)
}

// optional uint64 confid = 3;
inline bool IndConfAddNewNetMP::has_confid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAddNewNetMP::set_has_confid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAddNewNetMP::clear_has_confid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAddNewNetMP::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndConfAddNewNetMP::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.confid)
  return confid_;
}
inline void IndConfAddNewNetMP::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.confid)
}

// optional uint32 newnetmpid = 4;
inline bool IndConfAddNewNetMP::has_newnetmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndConfAddNewNetMP::set_has_newnetmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndConfAddNewNetMP::clear_has_newnetmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndConfAddNewNetMP::clear_newnetmpid() {
  newnetmpid_ = 0u;
  clear_has_newnetmpid();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::newnetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.newnetmpid)
  return newnetmpid_;
}
inline void IndConfAddNewNetMP::set_newnetmpid(::google::protobuf::uint32 value) {
  set_has_newnetmpid();
  newnetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.newnetmpid)
}

// optional string newnetmpip = 5;
inline bool IndConfAddNewNetMP::has_newnetmpip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndConfAddNewNetMP::set_has_newnetmpip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndConfAddNewNetMP::clear_has_newnetmpip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndConfAddNewNetMP::clear_newnetmpip() {
  if (newnetmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnetmpip_->clear();
  }
  clear_has_newnetmpip();
}
inline const ::std::string& IndConfAddNewNetMP::newnetmpip() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.newnetmpip)
  return *newnetmpip_;
}
inline void IndConfAddNewNetMP::set_newnetmpip(const ::std::string& value) {
  set_has_newnetmpip();
  if (newnetmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnetmpip_ = new ::std::string;
  }
  newnetmpip_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.newnetmpip)
}
inline void IndConfAddNewNetMP::set_newnetmpip(const char* value) {
  set_has_newnetmpip();
  if (newnetmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnetmpip_ = new ::std::string;
  }
  newnetmpip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.IndConfAddNewNetMP.newnetmpip)
}
inline void IndConfAddNewNetMP::set_newnetmpip(const char* value, size_t size) {
  set_has_newnetmpip();
  if (newnetmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnetmpip_ = new ::std::string;
  }
  newnetmpip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.IndConfAddNewNetMP.newnetmpip)
}
inline ::std::string* IndConfAddNewNetMP::mutable_newnetmpip() {
  set_has_newnetmpip();
  if (newnetmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    newnetmpip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAddNewNetMP.newnetmpip)
  return newnetmpip_;
}
inline ::std::string* IndConfAddNewNetMP::release_newnetmpip() {
  clear_has_newnetmpip();
  if (newnetmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = newnetmpip_;
    newnetmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void IndConfAddNewNetMP::set_allocated_newnetmpip(::std::string* newnetmpip) {
  if (newnetmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete newnetmpip_;
  }
  if (newnetmpip) {
    set_has_newnetmpip();
    newnetmpip_ = newnetmpip;
  } else {
    clear_has_newnetmpip();
    newnetmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndConfAddNewNetMP.newnetmpip)
}

// optional uint32 audiodatarecvport = 6;
inline bool IndConfAddNewNetMP::has_audiodatarecvport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndConfAddNewNetMP::set_has_audiodatarecvport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndConfAddNewNetMP::clear_has_audiodatarecvport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndConfAddNewNetMP::clear_audiodatarecvport() {
  audiodatarecvport_ = 0u;
  clear_has_audiodatarecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::audiodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.audiodatarecvport)
  return audiodatarecvport_;
}
inline void IndConfAddNewNetMP::set_audiodatarecvport(::google::protobuf::uint32 value) {
  set_has_audiodatarecvport();
  audiodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.audiodatarecvport)
}

// optional uint32 audioctrlrecvport = 7;
inline bool IndConfAddNewNetMP::has_audioctrlrecvport() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndConfAddNewNetMP::set_has_audioctrlrecvport() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndConfAddNewNetMP::clear_has_audioctrlrecvport() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndConfAddNewNetMP::clear_audioctrlrecvport() {
  audioctrlrecvport_ = 0u;
  clear_has_audioctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::audioctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.audioctrlrecvport)
  return audioctrlrecvport_;
}
inline void IndConfAddNewNetMP::set_audioctrlrecvport(::google::protobuf::uint32 value) {
  set_has_audioctrlrecvport();
  audioctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.audioctrlrecvport)
}

// optional uint32 videodatarecvport = 8;
inline bool IndConfAddNewNetMP::has_videodatarecvport() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndConfAddNewNetMP::set_has_videodatarecvport() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndConfAddNewNetMP::clear_has_videodatarecvport() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndConfAddNewNetMP::clear_videodatarecvport() {
  videodatarecvport_ = 0u;
  clear_has_videodatarecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::videodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.videodatarecvport)
  return videodatarecvport_;
}
inline void IndConfAddNewNetMP::set_videodatarecvport(::google::protobuf::uint32 value) {
  set_has_videodatarecvport();
  videodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.videodatarecvport)
}

// optional uint32 videoctrlrecvport = 9;
inline bool IndConfAddNewNetMP::has_videoctrlrecvport() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndConfAddNewNetMP::set_has_videoctrlrecvport() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndConfAddNewNetMP::clear_has_videoctrlrecvport() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndConfAddNewNetMP::clear_videoctrlrecvport() {
  videoctrlrecvport_ = 0u;
  clear_has_videoctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::videoctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.videoctrlrecvport)
  return videoctrlrecvport_;
}
inline void IndConfAddNewNetMP::set_videoctrlrecvport(::google::protobuf::uint32 value) {
  set_has_videoctrlrecvport();
  videoctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.videoctrlrecvport)
}

// optional uint32 video2datarecvport = 10;
inline bool IndConfAddNewNetMP::has_video2datarecvport() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndConfAddNewNetMP::set_has_video2datarecvport() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndConfAddNewNetMP::clear_has_video2datarecvport() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndConfAddNewNetMP::clear_video2datarecvport() {
  video2datarecvport_ = 0u;
  clear_has_video2datarecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::video2datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.video2datarecvport)
  return video2datarecvport_;
}
inline void IndConfAddNewNetMP::set_video2datarecvport(::google::protobuf::uint32 value) {
  set_has_video2datarecvport();
  video2datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.video2datarecvport)
}

// optional uint32 video2ctrlrecvport = 11;
inline bool IndConfAddNewNetMP::has_video2ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void IndConfAddNewNetMP::set_has_video2ctrlrecvport() {
  _has_bits_[0] |= 0x00000400u;
}
inline void IndConfAddNewNetMP::clear_has_video2ctrlrecvport() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void IndConfAddNewNetMP::clear_video2ctrlrecvport() {
  video2ctrlrecvport_ = 0u;
  clear_has_video2ctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::video2ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.video2ctrlrecvport)
  return video2ctrlrecvport_;
}
inline void IndConfAddNewNetMP::set_video2ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video2ctrlrecvport();
  video2ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.video2ctrlrecvport)
}

// optional uint32 video3datarecvport = 12;
inline bool IndConfAddNewNetMP::has_video3datarecvport() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void IndConfAddNewNetMP::set_has_video3datarecvport() {
  _has_bits_[0] |= 0x00000800u;
}
inline void IndConfAddNewNetMP::clear_has_video3datarecvport() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void IndConfAddNewNetMP::clear_video3datarecvport() {
  video3datarecvport_ = 0u;
  clear_has_video3datarecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::video3datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.video3datarecvport)
  return video3datarecvport_;
}
inline void IndConfAddNewNetMP::set_video3datarecvport(::google::protobuf::uint32 value) {
  set_has_video3datarecvport();
  video3datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.video3datarecvport)
}

// optional uint32 video3ctrlrecvport = 13;
inline bool IndConfAddNewNetMP::has_video3ctrlrecvport() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void IndConfAddNewNetMP::set_has_video3ctrlrecvport() {
  _has_bits_[0] |= 0x00001000u;
}
inline void IndConfAddNewNetMP::clear_has_video3ctrlrecvport() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void IndConfAddNewNetMP::clear_video3ctrlrecvport() {
  video3ctrlrecvport_ = 0u;
  clear_has_video3ctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::video3ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.video3ctrlrecvport)
  return video3ctrlrecvport_;
}
inline void IndConfAddNewNetMP::set_video3ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video3ctrlrecvport();
  video3ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.video3ctrlrecvport)
}

// optional uint32 desktopdatarecvport = 14;
inline bool IndConfAddNewNetMP::has_desktopdatarecvport() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void IndConfAddNewNetMP::set_has_desktopdatarecvport() {
  _has_bits_[0] |= 0x00002000u;
}
inline void IndConfAddNewNetMP::clear_has_desktopdatarecvport() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void IndConfAddNewNetMP::clear_desktopdatarecvport() {
  desktopdatarecvport_ = 0u;
  clear_has_desktopdatarecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::desktopdatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.desktopdatarecvport)
  return desktopdatarecvport_;
}
inline void IndConfAddNewNetMP::set_desktopdatarecvport(::google::protobuf::uint32 value) {
  set_has_desktopdatarecvport();
  desktopdatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.desktopdatarecvport)
}

// optional uint32 desktopctrlrecvport = 15;
inline bool IndConfAddNewNetMP::has_desktopctrlrecvport() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void IndConfAddNewNetMP::set_has_desktopctrlrecvport() {
  _has_bits_[0] |= 0x00004000u;
}
inline void IndConfAddNewNetMP::clear_has_desktopctrlrecvport() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void IndConfAddNewNetMP::clear_desktopctrlrecvport() {
  desktopctrlrecvport_ = 0u;
  clear_has_desktopctrlrecvport();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::desktopctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.desktopctrlrecvport)
  return desktopctrlrecvport_;
}
inline void IndConfAddNewNetMP::set_desktopctrlrecvport(::google::protobuf::uint32 value) {
  set_has_desktopctrlrecvport();
  desktopctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.desktopctrlrecvport)
}

// optional uint32 newnetmpno = 16;
inline bool IndConfAddNewNetMP::has_newnetmpno() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void IndConfAddNewNetMP::set_has_newnetmpno() {
  _has_bits_[0] |= 0x00008000u;
}
inline void IndConfAddNewNetMP::clear_has_newnetmpno() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void IndConfAddNewNetMP::clear_newnetmpno() {
  newnetmpno_ = 0u;
  clear_has_newnetmpno();
}
inline ::google::protobuf::uint32 IndConfAddNewNetMP::newnetmpno() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAddNewNetMP.newnetmpno)
  return newnetmpno_;
}
inline void IndConfAddNewNetMP::set_newnetmpno(::google::protobuf::uint32 value) {
  set_has_newnetmpno();
  newnetmpno_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAddNewNetMP.newnetmpno)
}

// -------------------------------------------------------------------

// IndConfAllMPIInfoToNetMp_ScreensInMPI

// optional uint32 screenid = 1;
inline bool IndConfAllMPIInfoToNetMp_ScreensInMPI::has_screenid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::set_has_screenid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp_ScreensInMPI::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI.screenid)
  return screenid_;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI.screenid)
}

// optional uint32 screentype = 2;
inline bool IndConfAllMPIInfoToNetMp_ScreensInMPI::has_screentype() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::set_has_screentype() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::clear_has_screentype() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::clear_screentype() {
  screentype_ = 0u;
  clear_has_screentype();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp_ScreensInMPI::screentype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI.screentype)
  return screentype_;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::set_screentype(::google::protobuf::uint32 value) {
  set_has_screentype();
  screentype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI.screentype)
}

// optional uint32 relatedterid = 3;
inline bool IndConfAllMPIInfoToNetMp_ScreensInMPI::has_relatedterid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::set_has_relatedterid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::clear_has_relatedterid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::clear_relatedterid() {
  relatedterid_ = 0u;
  clear_has_relatedterid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp_ScreensInMPI::relatedterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI.relatedterid)
  return relatedterid_;
}
inline void IndConfAllMPIInfoToNetMp_ScreensInMPI::set_relatedterid(::google::protobuf::uint32 value) {
  set_has_relatedterid();
  relatedterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI.relatedterid)
}

// -------------------------------------------------------------------

// IndConfAllMPIInfoToNetMp_MPIsInConf

// optional uint32 mpichannelid = 1;
inline bool IndConfAllMPIInfoToNetMp_MPIsInConf::has_mpichannelid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::set_has_mpichannelid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_has_mpichannelid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_mpichannelid() {
  mpichannelid_ = 0u;
  clear_has_mpichannelid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp_MPIsInConf::mpichannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.mpichannelid)
  return mpichannelid_;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::set_mpichannelid(::google::protobuf::uint32 value) {
  set_has_mpichannelid();
  mpichannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.mpichannelid)
}

// optional uint32 relatedmpid = 2;
inline bool IndConfAllMPIInfoToNetMp_MPIsInConf::has_relatedmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::set_has_relatedmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_has_relatedmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_relatedmpid() {
  relatedmpid_ = 0u;
  clear_has_relatedmpid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp_MPIsInConf::relatedmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.relatedmpid)
  return relatedmpid_;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::set_relatedmpid(::google::protobuf::uint32 value) {
  set_has_relatedmpid();
  relatedmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.relatedmpid)
}

// optional uint32 relatednetmpid = 3;
inline bool IndConfAllMPIInfoToNetMp_MPIsInConf::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp_MPIsInConf::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.relatednetmpid)
  return relatednetmpid_;
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.relatednetmpid)
}

// repeated .SRMsgs.IndConfAllMPIInfoToNetMp.ScreensInMPI screens = 4;
inline int IndConfAllMPIInfoToNetMp_MPIsInConf::screens_size() const {
  return screens_.size();
}
inline void IndConfAllMPIInfoToNetMp_MPIsInConf::clear_screens() {
  screens_.Clear();
}
inline const ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI& IndConfAllMPIInfoToNetMp_MPIsInConf::screens(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.screens)
  return screens_.Get(index);
}
inline ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI* IndConfAllMPIInfoToNetMp_MPIsInConf::mutable_screens(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.screens)
  return screens_.Mutable(index);
}
inline ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI* IndConfAllMPIInfoToNetMp_MPIsInConf::add_screens() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.screens)
  return screens_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI >&
IndConfAllMPIInfoToNetMp_MPIsInConf::screens() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.screens)
  return screens_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_ScreensInMPI >*
IndConfAllMPIInfoToNetMp_MPIsInConf::mutable_screens() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf.screens)
  return &screens_;
}

// -------------------------------------------------------------------

// IndConfAllMPIInfoToNetMp

// optional uint64 confid = 1;
inline bool IndConfAllMPIInfoToNetMp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfAllMPIInfoToNetMp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfAllMPIInfoToNetMp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfAllMPIInfoToNetMp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndConfAllMPIInfoToNetMp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.confid)
  return confid_;
}
inline void IndConfAllMPIInfoToNetMp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.confid)
}

// optional uint32 mcid = 2;
inline bool IndConfAllMPIInfoToNetMp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfAllMPIInfoToNetMp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfAllMPIInfoToNetMp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfAllMPIInfoToNetMp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.mcid)
  return mcid_;
}
inline void IndConfAllMPIInfoToNetMp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndConfAllMPIInfoToNetMp::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfAllMPIInfoToNetMp::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfAllMPIInfoToNetMp::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfAllMPIInfoToNetMp::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndConfAllMPIInfoToNetMp::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.netmpid)
  return netmpid_;
}
inline void IndConfAllMPIInfoToNetMp::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfAllMPIInfoToNetMp.netmpid)
}

// repeated .SRMsgs.IndConfAllMPIInfoToNetMp.MPIsInConf mpis = 4;
inline int IndConfAllMPIInfoToNetMp::mpis_size() const {
  return mpis_.size();
}
inline void IndConfAllMPIInfoToNetMp::clear_mpis() {
  mpis_.Clear();
}
inline const ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf& IndConfAllMPIInfoToNetMp::mpis(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfAllMPIInfoToNetMp.mpis)
  return mpis_.Get(index);
}
inline ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf* IndConfAllMPIInfoToNetMp::mutable_mpis(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndConfAllMPIInfoToNetMp.mpis)
  return mpis_.Mutable(index);
}
inline ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf* IndConfAllMPIInfoToNetMp::add_mpis() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndConfAllMPIInfoToNetMp.mpis)
  return mpis_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf >&
IndConfAllMPIInfoToNetMp::mpis() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndConfAllMPIInfoToNetMp.mpis)
  return mpis_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndConfAllMPIInfoToNetMp_MPIsInConf >*
IndConfAllMPIInfoToNetMp::mutable_mpis() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndConfAllMPIInfoToNetMp.mpis)
  return &mpis_;
}

// -------------------------------------------------------------------

// IndMPIChannelidToNetMp

// optional uint64 confid = 1;
inline bool IndMPIChannelidToNetMp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMPIChannelidToNetMp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMPIChannelidToNetMp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndMPIChannelidToNetMp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.confid)
  return confid_;
}
inline void IndMPIChannelidToNetMp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.confid)
}

// optional uint32 mcid = 2;
inline bool IndMPIChannelidToNetMp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMPIChannelidToNetMp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMPIChannelidToNetMp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMPIChannelidToNetMp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.mcid)
  return mcid_;
}
inline void IndMPIChannelidToNetMp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndMPIChannelidToNetMp::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndMPIChannelidToNetMp::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndMPIChannelidToNetMp::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndMPIChannelidToNetMp::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.netmpid)
  return netmpid_;
}
inline void IndMPIChannelidToNetMp::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.netmpid)
}

// optional uint32 relatednetmpid = 4;
inline bool IndMPIChannelidToNetMp::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndMPIChannelidToNetMp::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndMPIChannelidToNetMp::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndMPIChannelidToNetMp::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.relatednetmpid)
  return relatednetmpid_;
}
inline void IndMPIChannelidToNetMp::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.relatednetmpid)
}

// optional uint32 relatedmpid = 5;
inline bool IndMPIChannelidToNetMp::has_relatedmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_relatedmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndMPIChannelidToNetMp::clear_has_relatedmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndMPIChannelidToNetMp::clear_relatedmpid() {
  relatedmpid_ = 0u;
  clear_has_relatedmpid();
}
inline ::google::protobuf::uint32 IndMPIChannelidToNetMp::relatedmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.relatedmpid)
  return relatedmpid_;
}
inline void IndMPIChannelidToNetMp::set_relatedmpid(::google::protobuf::uint32 value) {
  set_has_relatedmpid();
  relatedmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.relatedmpid)
}

// optional uint32 mpichannelid = 6;
inline bool IndMPIChannelidToNetMp::has_mpichannelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_mpichannelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndMPIChannelidToNetMp::clear_has_mpichannelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndMPIChannelidToNetMp::clear_mpichannelid() {
  mpichannelid_ = 0u;
  clear_has_mpichannelid();
}
inline ::google::protobuf::uint32 IndMPIChannelidToNetMp::mpichannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.mpichannelid)
  return mpichannelid_;
}
inline void IndMPIChannelidToNetMp::set_mpichannelid(::google::protobuf::uint32 value) {
  set_has_mpichannelid();
  mpichannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.mpichannelid)
}

// optional uint32 addordel = 7;
inline bool IndMPIChannelidToNetMp::has_addordel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndMPIChannelidToNetMp::set_has_addordel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndMPIChannelidToNetMp::clear_has_addordel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndMPIChannelidToNetMp::clear_addordel() {
  addordel_ = 0u;
  clear_has_addordel();
}
inline ::google::protobuf::uint32 IndMPIChannelidToNetMp::addordel() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMPIChannelidToNetMp.addordel)
  return addordel_;
}
inline void IndMPIChannelidToNetMp::set_addordel(::google::protobuf::uint32 value) {
  set_has_addordel();
  addordel_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMPIChannelidToNetMp.addordel)
}

// -------------------------------------------------------------------

// IndConfScreenInfoInMP

// optional uint64 confid = 1;
inline bool IndConfScreenInfoInMP::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndConfScreenInfoInMP::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndConfScreenInfoInMP::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndConfScreenInfoInMP::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.confid)
  return confid_;
}
inline void IndConfScreenInfoInMP::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.confid)
}

// optional uint32 mcid = 2;
inline bool IndConfScreenInfoInMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndConfScreenInfoInMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndConfScreenInfoInMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.mcid)
  return mcid_;
}
inline void IndConfScreenInfoInMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndConfScreenInfoInMP::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndConfScreenInfoInMP::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndConfScreenInfoInMP::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.netmpid)
  return netmpid_;
}
inline void IndConfScreenInfoInMP::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.netmpid)
}

// optional uint32 relatednetmpid = 4;
inline bool IndConfScreenInfoInMP::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndConfScreenInfoInMP::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndConfScreenInfoInMP::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.relatednetmpid)
  return relatednetmpid_;
}
inline void IndConfScreenInfoInMP::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.relatednetmpid)
}

// optional uint32 relatedmpid = 5;
inline bool IndConfScreenInfoInMP::has_relatedmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_relatedmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndConfScreenInfoInMP::clear_has_relatedmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndConfScreenInfoInMP::clear_relatedmpid() {
  relatedmpid_ = 0u;
  clear_has_relatedmpid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::relatedmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.relatedmpid)
  return relatedmpid_;
}
inline void IndConfScreenInfoInMP::set_relatedmpid(::google::protobuf::uint32 value) {
  set_has_relatedmpid();
  relatedmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.relatedmpid)
}

// optional uint32 relatedmpichannelid = 6;
inline bool IndConfScreenInfoInMP::has_relatedmpichannelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_relatedmpichannelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndConfScreenInfoInMP::clear_has_relatedmpichannelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndConfScreenInfoInMP::clear_relatedmpichannelid() {
  relatedmpichannelid_ = 0u;
  clear_has_relatedmpichannelid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::relatedmpichannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.relatedmpichannelid)
  return relatedmpichannelid_;
}
inline void IndConfScreenInfoInMP::set_relatedmpichannelid(::google::protobuf::uint32 value) {
  set_has_relatedmpichannelid();
  relatedmpichannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.relatedmpichannelid)
}

// optional uint32 screenid = 7;
inline bool IndConfScreenInfoInMP::has_screenid() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_screenid() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndConfScreenInfoInMP::clear_has_screenid() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndConfScreenInfoInMP::clear_screenid() {
  screenid_ = 0u;
  clear_has_screenid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::screenid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.screenid)
  return screenid_;
}
inline void IndConfScreenInfoInMP::set_screenid(::google::protobuf::uint32 value) {
  set_has_screenid();
  screenid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.screenid)
}

// optional uint32 screentype = 8;
inline bool IndConfScreenInfoInMP::has_screentype() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_screentype() {
  _has_bits_[0] |= 0x00000080u;
}
inline void IndConfScreenInfoInMP::clear_has_screentype() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void IndConfScreenInfoInMP::clear_screentype() {
  screentype_ = 0u;
  clear_has_screentype();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::screentype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.screentype)
  return screentype_;
}
inline void IndConfScreenInfoInMP::set_screentype(::google::protobuf::uint32 value) {
  set_has_screentype();
  screentype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.screentype)
}

// optional uint32 addordel = 9;
inline bool IndConfScreenInfoInMP::has_addordel() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_addordel() {
  _has_bits_[0] |= 0x00000100u;
}
inline void IndConfScreenInfoInMP::clear_has_addordel() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void IndConfScreenInfoInMP::clear_addordel() {
  addordel_ = 0u;
  clear_has_addordel();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::addordel() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.addordel)
  return addordel_;
}
inline void IndConfScreenInfoInMP::set_addordel(::google::protobuf::uint32 value) {
  set_has_addordel();
  addordel_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.addordel)
}

// optional uint32 relatedterid = 10;
inline bool IndConfScreenInfoInMP::has_relatedterid() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void IndConfScreenInfoInMP::set_has_relatedterid() {
  _has_bits_[0] |= 0x00000200u;
}
inline void IndConfScreenInfoInMP::clear_has_relatedterid() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void IndConfScreenInfoInMP::clear_relatedterid() {
  relatedterid_ = 0u;
  clear_has_relatedterid();
}
inline ::google::protobuf::uint32 IndConfScreenInfoInMP::relatedterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndConfScreenInfoInMP.relatedterid)
  return relatedterid_;
}
inline void IndConfScreenInfoInMP::set_relatedterid(::google::protobuf::uint32 value) {
  set_has_relatedterid();
  relatedterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndConfScreenInfoInMP.relatedterid)
}

// -------------------------------------------------------------------

// IndUpdateMPIChannelInfoToNetMp

// optional uint64 confid = 1;
inline bool IndUpdateMPIChannelInfoToNetMp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndUpdateMPIChannelInfoToNetMp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndUpdateMPIChannelInfoToNetMp.confid)
  return confid_;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndUpdateMPIChannelInfoToNetMp.confid)
}

// optional uint32 mcid = 2;
inline bool IndUpdateMPIChannelInfoToNetMp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndUpdateMPIChannelInfoToNetMp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndUpdateMPIChannelInfoToNetMp.mcid)
  return mcid_;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndUpdateMPIChannelInfoToNetMp.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndUpdateMPIChannelInfoToNetMp::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndUpdateMPIChannelInfoToNetMp::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndUpdateMPIChannelInfoToNetMp.netmpid)
  return netmpid_;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndUpdateMPIChannelInfoToNetMp.netmpid)
}

// optional uint32 mpichannelid = 4;
inline bool IndUpdateMPIChannelInfoToNetMp::has_mpichannelid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_has_mpichannelid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_has_mpichannelid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_mpichannelid() {
  mpichannelid_ = 0u;
  clear_has_mpichannelid();
}
inline ::google::protobuf::uint32 IndUpdateMPIChannelInfoToNetMp::mpichannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndUpdateMPIChannelInfoToNetMp.mpichannelid)
  return mpichannelid_;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_mpichannelid(::google::protobuf::uint32 value) {
  set_has_mpichannelid();
  mpichannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndUpdateMPIChannelInfoToNetMp.mpichannelid)
}

// optional uint32 newrelatedmpid = 5;
inline bool IndUpdateMPIChannelInfoToNetMp::has_newrelatedmpid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_has_newrelatedmpid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_has_newrelatedmpid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_newrelatedmpid() {
  newrelatedmpid_ = 0u;
  clear_has_newrelatedmpid();
}
inline ::google::protobuf::uint32 IndUpdateMPIChannelInfoToNetMp::newrelatedmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndUpdateMPIChannelInfoToNetMp.newrelatedmpid)
  return newrelatedmpid_;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_newrelatedmpid(::google::protobuf::uint32 value) {
  set_has_newrelatedmpid();
  newrelatedmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndUpdateMPIChannelInfoToNetMp.newrelatedmpid)
}

// optional uint32 newrelatednetmpid = 6;
inline bool IndUpdateMPIChannelInfoToNetMp::has_newrelatednetmpid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_has_newrelatednetmpid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_has_newrelatednetmpid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndUpdateMPIChannelInfoToNetMp::clear_newrelatednetmpid() {
  newrelatednetmpid_ = 0u;
  clear_has_newrelatednetmpid();
}
inline ::google::protobuf::uint32 IndUpdateMPIChannelInfoToNetMp::newrelatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndUpdateMPIChannelInfoToNetMp.newrelatednetmpid)
  return newrelatednetmpid_;
}
inline void IndUpdateMPIChannelInfoToNetMp::set_newrelatednetmpid(::google::protobuf::uint32 value) {
  set_has_newrelatednetmpid();
  newrelatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndUpdateMPIChannelInfoToNetMp.newrelatednetmpid)
}

// -------------------------------------------------------------------

// IndCRSChannelidToNetMp

// optional uint64 confid = 1;
inline bool IndCRSChannelidToNetMp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndCRSChannelidToNetMp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndCRSChannelidToNetMp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndCRSChannelidToNetMp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.confid)
  return confid_;
}
inline void IndCRSChannelidToNetMp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.confid)
}

// optional uint32 mcid = 2;
inline bool IndCRSChannelidToNetMp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndCRSChannelidToNetMp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndCRSChannelidToNetMp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndCRSChannelidToNetMp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.mcid)
  return mcid_;
}
inline void IndCRSChannelidToNetMp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndCRSChannelidToNetMp::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndCRSChannelidToNetMp::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndCRSChannelidToNetMp::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndCRSChannelidToNetMp::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.netmpid)
  return netmpid_;
}
inline void IndCRSChannelidToNetMp::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.netmpid)
}

// optional uint32 relatednetmpid = 4;
inline bool IndCRSChannelidToNetMp::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndCRSChannelidToNetMp::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndCRSChannelidToNetMp::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndCRSChannelidToNetMp::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.relatednetmpid)
  return relatednetmpid_;
}
inline void IndCRSChannelidToNetMp::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.relatednetmpid)
}

// optional uint32 crsid = 5;
inline bool IndCRSChannelidToNetMp::has_crsid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_crsid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndCRSChannelidToNetMp::clear_has_crsid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndCRSChannelidToNetMp::clear_crsid() {
  crsid_ = 0u;
  clear_has_crsid();
}
inline ::google::protobuf::uint32 IndCRSChannelidToNetMp::crsid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.crsid)
  return crsid_;
}
inline void IndCRSChannelidToNetMp::set_crsid(::google::protobuf::uint32 value) {
  set_has_crsid();
  crsid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.crsid)
}

// optional uint32 crschannelid = 6;
inline bool IndCRSChannelidToNetMp::has_crschannelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_crschannelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndCRSChannelidToNetMp::clear_has_crschannelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndCRSChannelidToNetMp::clear_crschannelid() {
  crschannelid_ = 0u;
  clear_has_crschannelid();
}
inline ::google::protobuf::uint32 IndCRSChannelidToNetMp::crschannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.crschannelid)
  return crschannelid_;
}
inline void IndCRSChannelidToNetMp::set_crschannelid(::google::protobuf::uint32 value) {
  set_has_crschannelid();
  crschannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.crschannelid)
}

// optional uint32 addordel = 7;
inline bool IndCRSChannelidToNetMp::has_addordel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndCRSChannelidToNetMp::set_has_addordel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndCRSChannelidToNetMp::clear_has_addordel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndCRSChannelidToNetMp::clear_addordel() {
  addordel_ = 0u;
  clear_has_addordel();
}
inline ::google::protobuf::uint32 IndCRSChannelidToNetMp::addordel() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndCRSChannelidToNetMp.addordel)
  return addordel_;
}
inline void IndCRSChannelidToNetMp::set_addordel(::google::protobuf::uint32 value) {
  set_has_addordel();
  addordel_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndCRSChannelidToNetMp.addordel)
}

// -------------------------------------------------------------------

// IndVASChannelidToNetMp

// optional uint64 confid = 1;
inline bool IndVASChannelidToNetMp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndVASChannelidToNetMp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndVASChannelidToNetMp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndVASChannelidToNetMp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.confid)
  return confid_;
}
inline void IndVASChannelidToNetMp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.confid)
}

// optional uint32 mcid = 2;
inline bool IndVASChannelidToNetMp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndVASChannelidToNetMp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndVASChannelidToNetMp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndVASChannelidToNetMp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.mcid)
  return mcid_;
}
inline void IndVASChannelidToNetMp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndVASChannelidToNetMp::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndVASChannelidToNetMp::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndVASChannelidToNetMp::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndVASChannelidToNetMp::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.netmpid)
  return netmpid_;
}
inline void IndVASChannelidToNetMp::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.netmpid)
}

// optional uint32 relatednetmpid = 4;
inline bool IndVASChannelidToNetMp::has_relatednetmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_relatednetmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndVASChannelidToNetMp::clear_has_relatednetmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndVASChannelidToNetMp::clear_relatednetmpid() {
  relatednetmpid_ = 0u;
  clear_has_relatednetmpid();
}
inline ::google::protobuf::uint32 IndVASChannelidToNetMp::relatednetmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.relatednetmpid)
  return relatednetmpid_;
}
inline void IndVASChannelidToNetMp::set_relatednetmpid(::google::protobuf::uint32 value) {
  set_has_relatednetmpid();
  relatednetmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.relatednetmpid)
}

// optional uint32 vasid = 5;
inline bool IndVASChannelidToNetMp::has_vasid() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_vasid() {
  _has_bits_[0] |= 0x00000010u;
}
inline void IndVASChannelidToNetMp::clear_has_vasid() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void IndVASChannelidToNetMp::clear_vasid() {
  vasid_ = 0u;
  clear_has_vasid();
}
inline ::google::protobuf::uint32 IndVASChannelidToNetMp::vasid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.vasid)
  return vasid_;
}
inline void IndVASChannelidToNetMp::set_vasid(::google::protobuf::uint32 value) {
  set_has_vasid();
  vasid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.vasid)
}

// optional uint32 vaschannelid = 6;
inline bool IndVASChannelidToNetMp::has_vaschannelid() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_vaschannelid() {
  _has_bits_[0] |= 0x00000020u;
}
inline void IndVASChannelidToNetMp::clear_has_vaschannelid() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void IndVASChannelidToNetMp::clear_vaschannelid() {
  vaschannelid_ = 0u;
  clear_has_vaschannelid();
}
inline ::google::protobuf::uint32 IndVASChannelidToNetMp::vaschannelid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.vaschannelid)
  return vaschannelid_;
}
inline void IndVASChannelidToNetMp::set_vaschannelid(::google::protobuf::uint32 value) {
  set_has_vaschannelid();
  vaschannelid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.vaschannelid)
}

// optional uint32 addordel = 7;
inline bool IndVASChannelidToNetMp::has_addordel() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void IndVASChannelidToNetMp::set_has_addordel() {
  _has_bits_[0] |= 0x00000040u;
}
inline void IndVASChannelidToNetMp::clear_has_addordel() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void IndVASChannelidToNetMp::clear_addordel() {
  addordel_ = 0u;
  clear_has_addordel();
}
inline ::google::protobuf::uint32 IndVASChannelidToNetMp::addordel() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndVASChannelidToNetMp.addordel)
  return addordel_;
}
inline void IndVASChannelidToNetMp::set_addordel(::google::protobuf::uint32 value) {
  set_has_addordel();
  addordel_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndVASChannelidToNetMp.addordel)
}

// -------------------------------------------------------------------

// RspMCConfCreate

// optional bool isok = 1;
inline bool RspMCConfCreate::has_isok() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RspMCConfCreate::set_has_isok() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RspMCConfCreate::clear_has_isok() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RspMCConfCreate::clear_isok() {
  isok_ = false;
  clear_has_isok();
}
inline bool RspMCConfCreate::isok() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.isok)
  return isok_;
}
inline void RspMCConfCreate::set_isok(bool value) {
  set_has_isok();
  isok_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.isok)
}

// optional uint64 confid = 2;
inline bool RspMCConfCreate::has_confid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RspMCConfCreate::set_has_confid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RspMCConfCreate::clear_has_confid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RspMCConfCreate::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 RspMCConfCreate::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.confid)
  return confid_;
}
inline void RspMCConfCreate::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.confid)
}

// optional uint32 mcid = 3;
inline bool RspMCConfCreate::has_mcid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RspMCConfCreate::set_has_mcid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RspMCConfCreate::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RspMCConfCreate::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 RspMCConfCreate::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.mcid)
  return mcid_;
}
inline void RspMCConfCreate::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.mcid)
}

// optional uint32 netmpid = 4;
inline bool RspMCConfCreate::has_netmpid() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RspMCConfCreate::set_has_netmpid() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RspMCConfCreate::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RspMCConfCreate::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 RspMCConfCreate::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.netmpid)
  return netmpid_;
}
inline void RspMCConfCreate::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.netmpid)
}

// optional string netmpip = 5;
inline bool RspMCConfCreate::has_netmpip() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RspMCConfCreate::set_has_netmpip() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RspMCConfCreate::clear_has_netmpip() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RspMCConfCreate::clear_netmpip() {
  if (netmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_->clear();
  }
  clear_has_netmpip();
}
inline const ::std::string& RspMCConfCreate::netmpip() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.netmpip)
  return *netmpip_;
}
inline void RspMCConfCreate::set_netmpip(const ::std::string& value) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.netmpip)
}
inline void RspMCConfCreate::set_netmpip(const char* value) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.RspMCConfCreate.netmpip)
}
inline void RspMCConfCreate::set_netmpip(const char* value, size_t size) {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  netmpip_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.RspMCConfCreate.netmpip)
}
inline ::std::string* RspMCConfCreate::mutable_netmpip() {
  set_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    netmpip_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.RspMCConfCreate.netmpip)
  return netmpip_;
}
inline ::std::string* RspMCConfCreate::release_netmpip() {
  clear_has_netmpip();
  if (netmpip_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = netmpip_;
    netmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RspMCConfCreate::set_allocated_netmpip(::std::string* netmpip) {
  if (netmpip_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete netmpip_;
  }
  if (netmpip) {
    set_has_netmpip();
    netmpip_ = netmpip;
  } else {
    clear_has_netmpip();
    netmpip_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.RspMCConfCreate.netmpip)
}

// optional uint32 audiodatarecvport = 6;
inline bool RspMCConfCreate::has_audiodatarecvport() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void RspMCConfCreate::set_has_audiodatarecvport() {
  _has_bits_[0] |= 0x00000020u;
}
inline void RspMCConfCreate::clear_has_audiodatarecvport() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void RspMCConfCreate::clear_audiodatarecvport() {
  audiodatarecvport_ = 0u;
  clear_has_audiodatarecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::audiodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.audiodatarecvport)
  return audiodatarecvport_;
}
inline void RspMCConfCreate::set_audiodatarecvport(::google::protobuf::uint32 value) {
  set_has_audiodatarecvport();
  audiodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.audiodatarecvport)
}

// optional uint32 audioctrlrecvport = 7;
inline bool RspMCConfCreate::has_audioctrlrecvport() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void RspMCConfCreate::set_has_audioctrlrecvport() {
  _has_bits_[0] |= 0x00000040u;
}
inline void RspMCConfCreate::clear_has_audioctrlrecvport() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void RspMCConfCreate::clear_audioctrlrecvport() {
  audioctrlrecvport_ = 0u;
  clear_has_audioctrlrecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::audioctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.audioctrlrecvport)
  return audioctrlrecvport_;
}
inline void RspMCConfCreate::set_audioctrlrecvport(::google::protobuf::uint32 value) {
  set_has_audioctrlrecvport();
  audioctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.audioctrlrecvport)
}

// optional uint32 videodatarecvport = 8;
inline bool RspMCConfCreate::has_videodatarecvport() const {
  return (_has_bits_[0] & 0x00000080u) != 0;
}
inline void RspMCConfCreate::set_has_videodatarecvport() {
  _has_bits_[0] |= 0x00000080u;
}
inline void RspMCConfCreate::clear_has_videodatarecvport() {
  _has_bits_[0] &= ~0x00000080u;
}
inline void RspMCConfCreate::clear_videodatarecvport() {
  videodatarecvport_ = 0u;
  clear_has_videodatarecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::videodatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.videodatarecvport)
  return videodatarecvport_;
}
inline void RspMCConfCreate::set_videodatarecvport(::google::protobuf::uint32 value) {
  set_has_videodatarecvport();
  videodatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.videodatarecvport)
}

// optional uint32 videoctrlrecvport = 9;
inline bool RspMCConfCreate::has_videoctrlrecvport() const {
  return (_has_bits_[0] & 0x00000100u) != 0;
}
inline void RspMCConfCreate::set_has_videoctrlrecvport() {
  _has_bits_[0] |= 0x00000100u;
}
inline void RspMCConfCreate::clear_has_videoctrlrecvport() {
  _has_bits_[0] &= ~0x00000100u;
}
inline void RspMCConfCreate::clear_videoctrlrecvport() {
  videoctrlrecvport_ = 0u;
  clear_has_videoctrlrecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::videoctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.videoctrlrecvport)
  return videoctrlrecvport_;
}
inline void RspMCConfCreate::set_videoctrlrecvport(::google::protobuf::uint32 value) {
  set_has_videoctrlrecvport();
  videoctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.videoctrlrecvport)
}

// optional uint32 video2datarecvport = 10;
inline bool RspMCConfCreate::has_video2datarecvport() const {
  return (_has_bits_[0] & 0x00000200u) != 0;
}
inline void RspMCConfCreate::set_has_video2datarecvport() {
  _has_bits_[0] |= 0x00000200u;
}
inline void RspMCConfCreate::clear_has_video2datarecvport() {
  _has_bits_[0] &= ~0x00000200u;
}
inline void RspMCConfCreate::clear_video2datarecvport() {
  video2datarecvport_ = 0u;
  clear_has_video2datarecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::video2datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.video2datarecvport)
  return video2datarecvport_;
}
inline void RspMCConfCreate::set_video2datarecvport(::google::protobuf::uint32 value) {
  set_has_video2datarecvport();
  video2datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.video2datarecvport)
}

// optional uint32 video2ctrlrecvport = 11;
inline bool RspMCConfCreate::has_video2ctrlrecvport() const {
  return (_has_bits_[0] & 0x00000400u) != 0;
}
inline void RspMCConfCreate::set_has_video2ctrlrecvport() {
  _has_bits_[0] |= 0x00000400u;
}
inline void RspMCConfCreate::clear_has_video2ctrlrecvport() {
  _has_bits_[0] &= ~0x00000400u;
}
inline void RspMCConfCreate::clear_video2ctrlrecvport() {
  video2ctrlrecvport_ = 0u;
  clear_has_video2ctrlrecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::video2ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.video2ctrlrecvport)
  return video2ctrlrecvport_;
}
inline void RspMCConfCreate::set_video2ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video2ctrlrecvport();
  video2ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.video2ctrlrecvport)
}

// optional uint32 video3datarecvport = 12;
inline bool RspMCConfCreate::has_video3datarecvport() const {
  return (_has_bits_[0] & 0x00000800u) != 0;
}
inline void RspMCConfCreate::set_has_video3datarecvport() {
  _has_bits_[0] |= 0x00000800u;
}
inline void RspMCConfCreate::clear_has_video3datarecvport() {
  _has_bits_[0] &= ~0x00000800u;
}
inline void RspMCConfCreate::clear_video3datarecvport() {
  video3datarecvport_ = 0u;
  clear_has_video3datarecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::video3datarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.video3datarecvport)
  return video3datarecvport_;
}
inline void RspMCConfCreate::set_video3datarecvport(::google::protobuf::uint32 value) {
  set_has_video3datarecvport();
  video3datarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.video3datarecvport)
}

// optional uint32 video3ctrlrecvport = 13;
inline bool RspMCConfCreate::has_video3ctrlrecvport() const {
  return (_has_bits_[0] & 0x00001000u) != 0;
}
inline void RspMCConfCreate::set_has_video3ctrlrecvport() {
  _has_bits_[0] |= 0x00001000u;
}
inline void RspMCConfCreate::clear_has_video3ctrlrecvport() {
  _has_bits_[0] &= ~0x00001000u;
}
inline void RspMCConfCreate::clear_video3ctrlrecvport() {
  video3ctrlrecvport_ = 0u;
  clear_has_video3ctrlrecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::video3ctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.video3ctrlrecvport)
  return video3ctrlrecvport_;
}
inline void RspMCConfCreate::set_video3ctrlrecvport(::google::protobuf::uint32 value) {
  set_has_video3ctrlrecvport();
  video3ctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.video3ctrlrecvport)
}

// optional uint32 desktopdatarecvport = 14;
inline bool RspMCConfCreate::has_desktopdatarecvport() const {
  return (_has_bits_[0] & 0x00002000u) != 0;
}
inline void RspMCConfCreate::set_has_desktopdatarecvport() {
  _has_bits_[0] |= 0x00002000u;
}
inline void RspMCConfCreate::clear_has_desktopdatarecvport() {
  _has_bits_[0] &= ~0x00002000u;
}
inline void RspMCConfCreate::clear_desktopdatarecvport() {
  desktopdatarecvport_ = 0u;
  clear_has_desktopdatarecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::desktopdatarecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.desktopdatarecvport)
  return desktopdatarecvport_;
}
inline void RspMCConfCreate::set_desktopdatarecvport(::google::protobuf::uint32 value) {
  set_has_desktopdatarecvport();
  desktopdatarecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.desktopdatarecvport)
}

// optional uint32 desktopctrlrecvport = 15;
inline bool RspMCConfCreate::has_desktopctrlrecvport() const {
  return (_has_bits_[0] & 0x00004000u) != 0;
}
inline void RspMCConfCreate::set_has_desktopctrlrecvport() {
  _has_bits_[0] |= 0x00004000u;
}
inline void RspMCConfCreate::clear_has_desktopctrlrecvport() {
  _has_bits_[0] &= ~0x00004000u;
}
inline void RspMCConfCreate::clear_desktopctrlrecvport() {
  desktopctrlrecvport_ = 0u;
  clear_has_desktopctrlrecvport();
}
inline ::google::protobuf::uint32 RspMCConfCreate::desktopctrlrecvport() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.desktopctrlrecvport)
  return desktopctrlrecvport_;
}
inline void RspMCConfCreate::set_desktopctrlrecvport(::google::protobuf::uint32 value) {
  set_has_desktopctrlrecvport();
  desktopctrlrecvport_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.desktopctrlrecvport)
}

// optional string failreason = 16;
inline bool RspMCConfCreate::has_failreason() const {
  return (_has_bits_[0] & 0x00008000u) != 0;
}
inline void RspMCConfCreate::set_has_failreason() {
  _has_bits_[0] |= 0x00008000u;
}
inline void RspMCConfCreate::clear_has_failreason() {
  _has_bits_[0] &= ~0x00008000u;
}
inline void RspMCConfCreate::clear_failreason() {
  if (failreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_->clear();
  }
  clear_has_failreason();
}
inline const ::std::string& RspMCConfCreate::failreason() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.failreason)
  return *failreason_;
}
inline void RspMCConfCreate::set_failreason(const ::std::string& value) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(value);
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.failreason)
}
inline void RspMCConfCreate::set_failreason(const char* value) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(value);
  // @@protoc_insertion_point(field_set_char:SRMsgs.RspMCConfCreate.failreason)
}
inline void RspMCConfCreate::set_failreason(const char* value, size_t size) {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  failreason_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:SRMsgs.RspMCConfCreate.failreason)
}
inline ::std::string* RspMCConfCreate::mutable_failreason() {
  set_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    failreason_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:SRMsgs.RspMCConfCreate.failreason)
  return failreason_;
}
inline ::std::string* RspMCConfCreate::release_failreason() {
  clear_has_failreason();
  if (failreason_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = failreason_;
    failreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RspMCConfCreate::set_allocated_failreason(::std::string* failreason) {
  if (failreason_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete failreason_;
  }
  if (failreason) {
    set_has_failreason();
    failreason_ = failreason;
  } else {
    clear_has_failreason();
    failreason_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.RspMCConfCreate.failreason)
}

// optional uint32 netmpno = 17;
inline bool RspMCConfCreate::has_netmpno() const {
  return (_has_bits_[0] & 0x00010000u) != 0;
}
inline void RspMCConfCreate::set_has_netmpno() {
  _has_bits_[0] |= 0x00010000u;
}
inline void RspMCConfCreate::clear_has_netmpno() {
  _has_bits_[0] &= ~0x00010000u;
}
inline void RspMCConfCreate::clear_netmpno() {
  netmpno_ = 0u;
  clear_has_netmpno();
}
inline ::google::protobuf::uint32 RspMCConfCreate::netmpno() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.netmpno)
  return netmpno_;
}
inline void RspMCConfCreate::set_netmpno(::google::protobuf::uint32 value) {
  set_has_netmpno();
  netmpno_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.netmpno)
}

// optional uint32 errorcode = 18;
inline bool RspMCConfCreate::has_errorcode() const {
  return (_has_bits_[0] & 0x00020000u) != 0;
}
inline void RspMCConfCreate::set_has_errorcode() {
  _has_bits_[0] |= 0x00020000u;
}
inline void RspMCConfCreate::clear_has_errorcode() {
  _has_bits_[0] &= ~0x00020000u;
}
inline void RspMCConfCreate::clear_errorcode() {
  errorcode_ = 0u;
  clear_has_errorcode();
}
inline ::google::protobuf::uint32 RspMCConfCreate::errorcode() const {
  // @@protoc_insertion_point(field_get:SRMsgs.RspMCConfCreate.errorcode)
  return errorcode_;
}
inline void RspMCConfCreate::set_errorcode(::google::protobuf::uint32 value) {
  set_has_errorcode();
  errorcode_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.RspMCConfCreate.errorcode)
}

// -------------------------------------------------------------------

// IndMCHeartBeatOfNetMP

// optional uint32 mcid = 1;
inline bool IndMCHeartBeatOfNetMP::has_mcid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndMCHeartBeatOfNetMP::set_has_mcid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndMCHeartBeatOfNetMP::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndMCHeartBeatOfNetMP::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndMCHeartBeatOfNetMP::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMCHeartBeatOfNetMP.mcid)
  return mcid_;
}
inline void IndMCHeartBeatOfNetMP::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMCHeartBeatOfNetMP.mcid)
}

// optional uint32 netmpid = 2;
inline bool IndMCHeartBeatOfNetMP::has_netmpid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndMCHeartBeatOfNetMP::set_has_netmpid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndMCHeartBeatOfNetMP::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndMCHeartBeatOfNetMP::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndMCHeartBeatOfNetMP::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndMCHeartBeatOfNetMP.netmpid)
  return netmpid_;
}
inline void IndMCHeartBeatOfNetMP::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndMCHeartBeatOfNetMP.netmpid)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_FrameInfo

// optional uint32 fsw = 1;
inline bool IndTerStatisticsInfoFromNetmp_FrameInfo::has_fsw() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::set_has_fsw() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::clear_has_fsw() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::clear_fsw() {
  fsw_ = 0u;
  clear_has_fsw();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_FrameInfo::fsw() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo.fsw)
  return fsw_;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::set_fsw(::google::protobuf::uint32 value) {
  set_has_fsw();
  fsw_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo.fsw)
}

// optional uint32 fsh = 2;
inline bool IndTerStatisticsInfoFromNetmp_FrameInfo::has_fsh() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::set_has_fsh() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::clear_has_fsh() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::clear_fsh() {
  fsh_ = 0u;
  clear_has_fsh();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_FrameInfo::fsh() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo.fsh)
  return fsh_;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::set_fsh(::google::protobuf::uint32 value) {
  set_has_fsh();
  fsh_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo.fsh)
}

// optional uint32 fps = 3;
inline bool IndTerStatisticsInfoFromNetmp_FrameInfo::has_fps() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::set_has_fps() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::clear_has_fps() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::clear_fps() {
  fps_ = 0u;
  clear_has_fps();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_FrameInfo::fps() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo.fps)
  return fps_;
}
inline void IndTerStatisticsInfoFromNetmp_FrameInfo::set_fps(::google::protobuf::uint32 value) {
  set_has_fps();
  fps_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo.fps)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_AdvanceInfo

// optional uint32 delay = 1;
inline bool IndTerStatisticsInfoFromNetmp_AdvanceInfo::has_delay() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::set_has_delay() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::clear_has_delay() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::clear_delay() {
  delay_ = 0u;
  clear_has_delay();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_AdvanceInfo::delay() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo.delay)
  return delay_;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::set_delay(::google::protobuf::uint32 value) {
  set_has_delay();
  delay_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo.delay)
}

// optional uint32 jitter = 2;
inline bool IndTerStatisticsInfoFromNetmp_AdvanceInfo::has_jitter() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::set_has_jitter() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::clear_has_jitter() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::clear_jitter() {
  jitter_ = 0u;
  clear_has_jitter();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_AdvanceInfo::jitter() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo.jitter)
  return jitter_;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::set_jitter(::google::protobuf::uint32 value) {
  set_has_jitter();
  jitter_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo.jitter)
}

// optional uint32 loss = 3;
inline bool IndTerStatisticsInfoFromNetmp_AdvanceInfo::has_loss() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::set_has_loss() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::clear_has_loss() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::clear_loss() {
  loss_ = 0u;
  clear_has_loss();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_AdvanceInfo::loss() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo.loss)
  return loss_;
}
inline void IndTerStatisticsInfoFromNetmp_AdvanceInfo::set_loss(::google::protobuf::uint32 value) {
  set_has_loss();
  loss_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo.loss)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_BaseInfo

// optional uint32 format = 1;
inline bool IndTerStatisticsInfoFromNetmp_BaseInfo::has_format() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::set_has_format() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::clear_has_format() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::clear_format() {
  format_ = 0u;
  clear_has_format();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_BaseInfo::format() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo.format)
  return format_;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::set_format(::google::protobuf::uint32 value) {
  set_has_format();
  format_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo.format)
}

// optional uint32 bitrate = 2;
inline bool IndTerStatisticsInfoFromNetmp_BaseInfo::has_bitrate() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::set_has_bitrate() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::clear_has_bitrate() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::clear_bitrate() {
  bitrate_ = 0u;
  clear_has_bitrate();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_BaseInfo::bitrate() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo.bitrate)
  return bitrate_;
}
inline void IndTerStatisticsInfoFromNetmp_BaseInfo::set_bitrate(::google::protobuf::uint32 value) {
  set_has_bitrate();
  bitrate_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo.bitrate)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_AudioInfo

// optional uint32 atype = 1;
inline bool IndTerStatisticsInfoFromNetmp_AudioInfo::has_atype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_has_atype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_has_atype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_atype() {
  atype_ = 0u;
  clear_has_atype();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_AudioInfo::atype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.atype)
  return atype_;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_atype(::google::protobuf::uint32 value) {
  set_has_atype();
  atype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.atype)
}

// optional uint32 aterid = 2;
inline bool IndTerStatisticsInfoFromNetmp_AudioInfo::has_aterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_has_aterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_has_aterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_aterid() {
  aterid_ = 0u;
  clear_has_aterid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_AudioInfo::aterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.aterid)
  return aterid_;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_aterid(::google::protobuf::uint32 value) {
  set_has_aterid();
  aterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.aterid)
}

// optional .SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo baseinfo = 3;
inline bool IndTerStatisticsInfoFromNetmp_AudioInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo& IndTerStatisticsInfoFromNetmp_AudioInfo::baseinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.baseinfo)
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* IndTerStatisticsInfoFromNetmp_AudioInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.baseinfo)
  return baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* IndTerStatisticsInfoFromNetmp_AudioInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.baseinfo)
}

// optional .SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo advinfo = 4;
inline bool IndTerStatisticsInfoFromNetmp_AudioInfo::has_advinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_has_advinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_has_advinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::clear_advinfo() {
  if (advinfo_ != NULL) advinfo_->::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo::Clear();
  clear_has_advinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo& IndTerStatisticsInfoFromNetmp_AudioInfo::advinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.advinfo)
  return advinfo_ != NULL ? *advinfo_ : *default_instance_->advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* IndTerStatisticsInfoFromNetmp_AudioInfo::mutable_advinfo() {
  set_has_advinfo();
  if (advinfo_ == NULL) advinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.advinfo)
  return advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* IndTerStatisticsInfoFromNetmp_AudioInfo::release_advinfo() {
  clear_has_advinfo();
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* temp = advinfo_;
  advinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromNetmp_AudioInfo::set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* advinfo) {
  delete advinfo_;
  advinfo_ = advinfo;
  if (advinfo) {
    set_has_advinfo();
  } else {
    clear_has_advinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo.advinfo)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_VideoInfo

// optional uint32 vtype = 1;
inline bool IndTerStatisticsInfoFromNetmp_VideoInfo::has_vtype() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_has_vtype() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_has_vtype() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_vtype() {
  vtype_ = 0u;
  clear_has_vtype();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_VideoInfo::vtype() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.vtype)
  return vtype_;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_vtype(::google::protobuf::uint32 value) {
  set_has_vtype();
  vtype_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.vtype)
}

// optional uint32 vterid = 2;
inline bool IndTerStatisticsInfoFromNetmp_VideoInfo::has_vterid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_has_vterid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_has_vterid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_vterid() {
  vterid_ = 0u;
  clear_has_vterid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_VideoInfo::vterid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.vterid)
  return vterid_;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_vterid(::google::protobuf::uint32 value) {
  set_has_vterid();
  vterid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.vterid)
}

// optional .SRMsgs.IndTerStatisticsInfoFromNetmp.BaseInfo baseinfo = 3;
inline bool IndTerStatisticsInfoFromNetmp_VideoInfo::has_baseinfo() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_has_baseinfo() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_has_baseinfo() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_baseinfo() {
  if (baseinfo_ != NULL) baseinfo_->::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo::Clear();
  clear_has_baseinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo& IndTerStatisticsInfoFromNetmp_VideoInfo::baseinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.baseinfo)
  return baseinfo_ != NULL ? *baseinfo_ : *default_instance_->baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* IndTerStatisticsInfoFromNetmp_VideoInfo::mutable_baseinfo() {
  set_has_baseinfo();
  if (baseinfo_ == NULL) baseinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.baseinfo)
  return baseinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* IndTerStatisticsInfoFromNetmp_VideoInfo::release_baseinfo() {
  clear_has_baseinfo();
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* temp = baseinfo_;
  baseinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_allocated_baseinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_BaseInfo* baseinfo) {
  delete baseinfo_;
  baseinfo_ = baseinfo;
  if (baseinfo) {
    set_has_baseinfo();
  } else {
    clear_has_baseinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.baseinfo)
}

// optional .SRMsgs.IndTerStatisticsInfoFromNetmp.AdvanceInfo advinfo = 4;
inline bool IndTerStatisticsInfoFromNetmp_VideoInfo::has_advinfo() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_has_advinfo() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_has_advinfo() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_advinfo() {
  if (advinfo_ != NULL) advinfo_->::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo::Clear();
  clear_has_advinfo();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo& IndTerStatisticsInfoFromNetmp_VideoInfo::advinfo() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.advinfo)
  return advinfo_ != NULL ? *advinfo_ : *default_instance_->advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* IndTerStatisticsInfoFromNetmp_VideoInfo::mutable_advinfo() {
  set_has_advinfo();
  if (advinfo_ == NULL) advinfo_ = new ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo;
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.advinfo)
  return advinfo_;
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* IndTerStatisticsInfoFromNetmp_VideoInfo::release_advinfo() {
  clear_has_advinfo();
  ::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* temp = advinfo_;
  advinfo_ = NULL;
  return temp;
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::set_allocated_advinfo(::SRMsgs::IndTerStatisticsInfoFromNetmp_AdvanceInfo* advinfo) {
  delete advinfo_;
  advinfo_ = advinfo;
  if (advinfo) {
    set_has_advinfo();
  } else {
    clear_has_advinfo();
  }
  // @@protoc_insertion_point(field_set_allocated:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.advinfo)
}

// repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.FrameInfo frameinfo = 5;
inline int IndTerStatisticsInfoFromNetmp_VideoInfo::frameinfo_size() const {
  return frameinfo_.size();
}
inline void IndTerStatisticsInfoFromNetmp_VideoInfo::clear_frameinfo() {
  frameinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo& IndTerStatisticsInfoFromNetmp_VideoInfo::frameinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.frameinfo)
  return frameinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo* IndTerStatisticsInfoFromNetmp_VideoInfo::mutable_frameinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.frameinfo)
  return frameinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo* IndTerStatisticsInfoFromNetmp_VideoInfo::add_frameinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.frameinfo)
  return frameinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo >&
IndTerStatisticsInfoFromNetmp_VideoInfo::frameinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.frameinfo)
  return frameinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_FrameInfo >*
IndTerStatisticsInfoFromNetmp_VideoInfo::mutable_frameinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo.frameinfo)
  return &frameinfo_;
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_XfeInfo

// repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.AudioInfo ainfo = 1;
inline int IndTerStatisticsInfoFromNetmp_XfeInfo::ainfo_size() const {
  return ainfo_.size();
}
inline void IndTerStatisticsInfoFromNetmp_XfeInfo::clear_ainfo() {
  ainfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo& IndTerStatisticsInfoFromNetmp_XfeInfo::ainfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.ainfo)
  return ainfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo* IndTerStatisticsInfoFromNetmp_XfeInfo::mutable_ainfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.ainfo)
  return ainfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo* IndTerStatisticsInfoFromNetmp_XfeInfo::add_ainfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.ainfo)
  return ainfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo >&
IndTerStatisticsInfoFromNetmp_XfeInfo::ainfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.ainfo)
  return ainfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_AudioInfo >*
IndTerStatisticsInfoFromNetmp_XfeInfo::mutable_ainfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.ainfo)
  return &ainfo_;
}

// repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.VideoInfo vinfo = 2;
inline int IndTerStatisticsInfoFromNetmp_XfeInfo::vinfo_size() const {
  return vinfo_.size();
}
inline void IndTerStatisticsInfoFromNetmp_XfeInfo::clear_vinfo() {
  vinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo& IndTerStatisticsInfoFromNetmp_XfeInfo::vinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.vinfo)
  return vinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo* IndTerStatisticsInfoFromNetmp_XfeInfo::mutable_vinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.vinfo)
  return vinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo* IndTerStatisticsInfoFromNetmp_XfeInfo::add_vinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.vinfo)
  return vinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo >&
IndTerStatisticsInfoFromNetmp_XfeInfo::vinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.vinfo)
  return vinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_VideoInfo >*
IndTerStatisticsInfoFromNetmp_XfeInfo::mutable_vinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo.vinfo)
  return &vinfo_;
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp_TerStatisticsInfo

// optional uint32 terid = 1;
inline bool IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::has_terid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::set_has_terid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::clear_has_terid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::clear_terid() {
  terid_ = 0u;
  clear_has_terid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::terid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.terid)
  return terid_;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::set_terid(::google::protobuf::uint32 value) {
  set_has_terid();
  terid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.terid)
}

// repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo txinfo = 2;
inline int IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::txinfo_size() const {
  return txinfo_.size();
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::clear_txinfo() {
  txinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo& IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::txinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txinfo)
  return txinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::mutable_txinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txinfo)
  return txinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::add_txinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txinfo)
  return txinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >&
IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::txinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txinfo)
  return txinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >*
IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::mutable_txinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txinfo)
  return &txinfo_;
}

// repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.XfeInfo rxinfo = 3;
inline int IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::rxinfo_size() const {
  return rxinfo_.size();
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::clear_rxinfo() {
  rxinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo& IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::rxinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.rxinfo)
  return rxinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::mutable_rxinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.rxinfo)
  return rxinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo* IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::add_rxinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.rxinfo)
  return rxinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >&
IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::rxinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.rxinfo)
  return rxinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_XfeInfo >*
IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::mutable_rxinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.rxinfo)
  return &rxinfo_;
}

// optional uint32 txbweresult = 4;
inline bool IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::has_txbweresult() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::set_has_txbweresult() {
  _has_bits_[0] |= 0x00000008u;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::clear_has_txbweresult() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::clear_txbweresult() {
  txbweresult_ = 0u;
  clear_has_txbweresult();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::txbweresult() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txbweresult)
  return txbweresult_;
}
inline void IndTerStatisticsInfoFromNetmp_TerStatisticsInfo::set_txbweresult(::google::protobuf::uint32 value) {
  set_has_txbweresult();
  txbweresult_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo.txbweresult)
}

// -------------------------------------------------------------------

// IndTerStatisticsInfoFromNetmp

// optional uint64 confid = 1;
inline bool IndTerStatisticsInfoFromNetmp::has_confid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp::set_has_confid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp::clear_has_confid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void IndTerStatisticsInfoFromNetmp::clear_confid() {
  confid_ = GOOGLE_ULONGLONG(0);
  clear_has_confid();
}
inline ::google::protobuf::uint64 IndTerStatisticsInfoFromNetmp::confid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.confid)
  return confid_;
}
inline void IndTerStatisticsInfoFromNetmp::set_confid(::google::protobuf::uint64 value) {
  set_has_confid();
  confid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.confid)
}

// optional uint32 mcid = 2;
inline bool IndTerStatisticsInfoFromNetmp::has_mcid() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp::set_has_mcid() {
  _has_bits_[0] |= 0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp::clear_has_mcid() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void IndTerStatisticsInfoFromNetmp::clear_mcid() {
  mcid_ = 0u;
  clear_has_mcid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp::mcid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.mcid)
  return mcid_;
}
inline void IndTerStatisticsInfoFromNetmp::set_mcid(::google::protobuf::uint32 value) {
  set_has_mcid();
  mcid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.mcid)
}

// optional uint32 netmpid = 3;
inline bool IndTerStatisticsInfoFromNetmp::has_netmpid() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void IndTerStatisticsInfoFromNetmp::set_has_netmpid() {
  _has_bits_[0] |= 0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp::clear_has_netmpid() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void IndTerStatisticsInfoFromNetmp::clear_netmpid() {
  netmpid_ = 0u;
  clear_has_netmpid();
}
inline ::google::protobuf::uint32 IndTerStatisticsInfoFromNetmp::netmpid() const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.netmpid)
  return netmpid_;
}
inline void IndTerStatisticsInfoFromNetmp::set_netmpid(::google::protobuf::uint32 value) {
  set_has_netmpid();
  netmpid_ = value;
  // @@protoc_insertion_point(field_set:SRMsgs.IndTerStatisticsInfoFromNetmp.netmpid)
}

// repeated .SRMsgs.IndTerStatisticsInfoFromNetmp.TerStatisticsInfo tsinfo = 4;
inline int IndTerStatisticsInfoFromNetmp::tsinfo_size() const {
  return tsinfo_.size();
}
inline void IndTerStatisticsInfoFromNetmp::clear_tsinfo() {
  tsinfo_.Clear();
}
inline const ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo& IndTerStatisticsInfoFromNetmp::tsinfo(int index) const {
  // @@protoc_insertion_point(field_get:SRMsgs.IndTerStatisticsInfoFromNetmp.tsinfo)
  return tsinfo_.Get(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* IndTerStatisticsInfoFromNetmp::mutable_tsinfo(int index) {
  // @@protoc_insertion_point(field_mutable:SRMsgs.IndTerStatisticsInfoFromNetmp.tsinfo)
  return tsinfo_.Mutable(index);
}
inline ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo* IndTerStatisticsInfoFromNetmp::add_tsinfo() {
  // @@protoc_insertion_point(field_add:SRMsgs.IndTerStatisticsInfoFromNetmp.tsinfo)
  return tsinfo_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo >&
IndTerStatisticsInfoFromNetmp::tsinfo() const {
  // @@protoc_insertion_point(field_list:SRMsgs.IndTerStatisticsInfoFromNetmp.tsinfo)
  return tsinfo_;
}
inline ::google::protobuf::RepeatedPtrField< ::SRMsgs::IndTerStatisticsInfoFromNetmp_TerStatisticsInfo >*
IndTerStatisticsInfoFromNetmp::mutable_tsinfo() {
  // @@protoc_insertion_point(field_mutable_list:SRMsgs.IndTerStatisticsInfoFromNetmp.tsinfo)
  return &tsinfo_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace SRMsgs

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mc_5fnetmp_2eproto__INCLUDED
